/*
  This software is copyright Kong Inc. and its licensors.
  Use of the software is subject to the agreement between your organization
  and Kong Inc. If there is no such agreement, use is governed by and
  subject to the terms of the Kong Master Software License Agreement found
  at https://konghq.com/enterprisesoftwarelicense/.
*/

webpackJsonp([2],{

/***/ 1111:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(1112);

__webpack_require__(1114);

__webpack_require__(1119);

__webpack_require__(1120);

__webpack_require__(1121);

__webpack_require__(1122);

__webpack_require__(1123);

__webpack_require__(1124);

__webpack_require__(1125);

__webpack_require__(1126);

__webpack_require__(1127);

__webpack_require__(1129);

__webpack_require__(1130);

__webpack_require__(1131);

__webpack_require__(1132);

__webpack_require__(1133);

__webpack_require__(1135);

__webpack_require__(1136);

__webpack_require__(1137);

__webpack_require__(1138);

__webpack_require__(1139);

__webpack_require__(1140);

__webpack_require__(1141);

__webpack_require__(1142);

__webpack_require__(1143);

__webpack_require__(1144);

__webpack_require__(1145);

__webpack_require__(1146);

__webpack_require__(1150);

__webpack_require__(1153);

__webpack_require__(1154);

__webpack_require__(1155);

__webpack_require__(1156);

__webpack_require__(1157);

__webpack_require__(1158);

__webpack_require__(1159);

__webpack_require__(1160);

__webpack_require__(1161);

__webpack_require__(1162);

__webpack_require__(1163);

__webpack_require__(1164);

__webpack_require__(1165);

__webpack_require__(1166);

__webpack_require__(1167);

__webpack_require__(1168);

__webpack_require__(1169);

__webpack_require__(1170);

__webpack_require__(1171);

__webpack_require__(1172);

__webpack_require__(1173);

__webpack_require__(1174);

__webpack_require__(1175);

__webpack_require__(1177);

__webpack_require__(1178);

__webpack_require__(1179);

__webpack_require__(1180);

__webpack_require__(1181);

__webpack_require__(1182);

__webpack_require__(1183);

__webpack_require__(1184);

__webpack_require__(1185);

__webpack_require__(434);

__webpack_require__(1186);

__webpack_require__(1187);

__webpack_require__(1188);

__webpack_require__(1189);

__webpack_require__(1190);

__webpack_require__(1191);

__webpack_require__(1192);

__webpack_require__(1193);

__webpack_require__(1194);

__webpack_require__(1195);

__webpack_require__(1196);

__webpack_require__(1197);

__webpack_require__(1198);

__webpack_require__(1199);

__webpack_require__(1200);

__webpack_require__(1202);

__webpack_require__(1203);

__webpack_require__(1204);

__webpack_require__(1205);

__webpack_require__(1206);

__webpack_require__(1207);

__webpack_require__(1208);

__webpack_require__(1209);

__webpack_require__(1210);

__webpack_require__(1211);

__webpack_require__(1212);

__webpack_require__(1213);

__webpack_require__(1214);

__webpack_require__(1215);

__webpack_require__(1216);

__webpack_require__(1217);

__webpack_require__(1218);

__webpack_require__(1219);

__webpack_require__(248);

var _config = __webpack_require__(42);

var _common = __webpack_require__(17);

var _Auth = __webpack_require__(1220);

var _Auth2 = _interopRequireDefault(_Auth);

var _vue = __webpack_require__(60);

var _vue2 = _interopRequireDefault(_vue);

var _react = __webpack_require__(138);

var _react2 = _interopRequireDefault(_react);

var _yamlJs = __webpack_require__(579);

var _yamlJs2 = _interopRequireDefault(_yamlJs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initializeEvents() {
  (0, _common.addEvent)(document, 'click', 'li.dropdownWrapper', function (event) {
    this.classList.toggle('open');
  });

  (0, _common.addEvent)(document, 'click', '.menu-trigger', function (event) {
    this.classList.toggle('open');

    var menu = document.querySelector('.header-nav-container');
    if (menu) menu.classList.toggle('open');

    var overlay = document.querySelector('.overlay');
    if (overlay) overlay.classList.toggle('on');
  });

  (0, _common.addEvent)(document, 'click', '.sidebar-toggle', function (event) {
    var sidebar = document.querySelector('#sidebar');
    if (sidebar) {
      sidebar.classList.toggle('open');

      var overlay = document.querySelector('.overlay');
      if (overlay) overlay.classList.toggle('on');

      var sidebarText = document.querySelector('.sidebar-toggle p');
      if (sidebar.classList.contains('open')) {
        sidebarText.innerHTML = 'Close Sidebar';
      } else {
        sidebarText.innerHTML = 'Open Sidebar';
      }
    }
  });
}

initializeEvents();

window.onload = function () {
  window.Vue = _vue2.default;
  window.React = _react2.default;
  window.YAML = _yamlJs2.default;

  var interval = setInterval(function () {
    if (window._kong.loaded) {
      if ((0, _config.GET_CONFIG)('PORTAL_AUTH')) {
        _Auth2.default.attachListeners(window._kong.initialRoute);
      }

      window._kong.apps.forEach(function (app) {
        return app(window._kong);
      });
      clearInterval(interval);
    }
  }, 80);
};

/***/ }),

/***/ 1220:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = __webpack_require__(48);

var _keys2 = _interopRequireDefault(_keys);

var _regenerator = __webpack_require__(94);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = __webpack_require__(68);

var _stringify2 = _interopRequireDefault(_stringify);

var _extends2 = __webpack_require__(46);

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = __webpack_require__(95);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(124);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(125);

var _createClass3 = _interopRequireDefault(_createClass2);

var _config = __webpack_require__(42);

var _constants = __webpack_require__(126);

var _get2 = __webpack_require__(567);

var _get3 = _interopRequireDefault(_get2);

var _Api = __webpack_require__(49);

var _Api2 = _interopRequireDefault(_Api);

var _common = __webpack_require__(17);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.navigateToHome = _common.navigateToHome;
window.transformMetaFields = _common.transformMetaFields;

var Auth = function () {
  function Auth() {
    (0, _classCallCheck3.default)(this, Auth);
  }

  (0, _createClass3.default)(Auth, null, [{
    key: 'attachListeners',
    value: function attachListeners(route) {
      (0, _common.addEvent)(document, 'click', '#logout', function (event) {
        event.preventDefault();
        Auth.logout();
      });

      (0, _common.addEvent)(document, 'submit', '#login', function (event) {
        event.preventDefault();
        Auth.loginSubmitHandler(event, route);
      });

      (0, _common.addEvent)(document, 'click', '#header-login', function (event) {
        event.preventDefault();
        Auth.loginSubmitHandler(event, route);
      });

      (0, _common.addEvent)(document, 'submit', '#register', function (event) {
        event.preventDefault();
        Auth.registerFormSubmitHandler(event, route);
      });
    }
  }, {
    key: 'isUnauthenticatedFilesResponse',
    value: function isUnauthenticatedFilesResponse(files) {
      return files && files.filter(function (f) {
        return !f.auth;
      }).length === files.length;
    }
  }, {
    key: 'loginSubmitHandler',
    value: function loginSubmitHandler(e, route) {
      e.preventDefault();

      var formSubmitData = {};

      (0, _common.forEach)(document.querySelectorAll('#login input'), function (idx, el) {
        formSubmitData[el.name] = el.value;
      });

      return this.login(formSubmitData, route).catch(function (err) {
        var errObj = JSON.parse(err.message);
        if (window.onLoginError) {
          window.onLoginError(errObj);
        } else {
          alert('Login failed. Error: ' + (0, _common.getMessageFromError)(errObj));
        }
      });
    }
  }, {
    key: 'registerFormSubmitHandler',
    value: function registerFormSubmitHandler(e) {
      e.preventDefault();

      var formSubmitData = {};
      (0, _common.forEach)(document.querySelectorAll('#register input'), function (idx, el) {
        formSubmitData[el.name] = el.value;
      });

      return this.register(formSubmitData, 'dashboard').catch(function (err) {
        if (window.onRegistrationError) {
          window.onRegistrationError(err);
        } else {
          alert('Registration failed. ' + (0, _common.getMessageFromError)(err));
        }
      });
    }
  }, {
    key: 'login',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(formData) {
        var nextRoute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
        var workspaceWithSlash, workspace, loginConfig, loginRes;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                workspaceWithSlash = (0, _config.GET_CONFIG)('WORKSPACE') + '/';
                workspace = '' + (0, _config.GET_CONFIG)('WORKSPACE');

                if (nextRoute.indexOf(workspaceWithSlash) === 0) {
                  nextRoute = nextRoute.substr(workspaceWithSlash.length);
                } else if (nextRoute.indexOf(workspace) === 0) {
                  nextRoute = nextRoute.substr(workspace.length);
                }

                loginConfig = window.loginDecorator && window.loginDecorator(formData);

                if (loginConfig) {
                  _context.next = 16;
                  break;
                }

                loginConfig = { withCredentials: true };

                _context.t0 = (0, _config.GET_CONFIG)('PORTAL_AUTH');
                _context.next = _context.t0 === _constants.PLUGINS.BASIC_AUTH ? 9 : _context.t0 === _constants.PLUGINS.KEY_AUTH ? 11 : _context.t0 === _constants.PLUGINS.OPENID_CONNECT ? 13 : 16;
                break;

              case 9:
                loginConfig.auth = (0, _extends3.default)({}, formData);
                return _context.abrupt('break', 16);

              case 11:
                loginConfig.headers = { apikey: formData.key };
                return _context.abrupt('break', 16);

              case 13:
                if (nextRoute !== 'login') {
                  document.cookie = 'redirect=' + nextRoute + ';path=/;max-age=' + 5 * 60;
                }
                (0, _common.navigateToUrl)((0, _config.GET_CONFIG_URL)('API') + '/' + (0, _config.GET_CONFIG)('WORKSPACE') + '/auth');
                return _context.abrupt('break', 16);

              case 16:
                _context.next = 18;
                return _Api2.default.login(loginConfig);

              case 18:
                loginRes = _context.sent;

                if (!(loginRes.status !== 200)) {
                  _context.next = 21;
                  break;
                }

                throw Error((0, _stringify2.default)(loginRes));

              case 21:

                if (nextRoute === 'login') {
                  nextRoute = 'dashboard';
                }

                (0, _common.navigateToUrl)((0, _config.GET_CONFIG)('PORTAL_GUI_URL') + '/' + nextRoute);

              case 23:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function login(_x) {
        return _ref.apply(this, arguments);
      }

      return login;
    }()
  }, {
    key: 'register',
    value: function register(formData) {
      var _this = this;

      var nextRoute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      var meta = {};
      var email = formData.email;

      var portalAuth = (0, _config.GET_CONFIG)('PORTAL_AUTH');
      var formInputName = _constants.INPUT_FIELDS[portalAuth];

      if (!formInputName || !formData[formInputName]) {
        alert('Error: Unauthorized. Contact your administrator for more information.');
        return;
      }

      (0, _keys2.default)(formData).map(function (inputName) {
        if (inputName !== 'email' && inputName !== formInputName) {
          meta[inputName] = formData[inputName];
        }
      });

      return _Api2.default.register(email, formInputName, formData[formInputName], (0, _stringify2.default)(meta)).then(function (resp) {
        var status = (0, _get3.default)(resp, 'data.developer.status');

        if (status === 0) {
          alert('Thank you for registering! Your request has been approved.');
          switch (portalAuth) {
            case _constants.PLUGINS.KEY_AUTH:
              return _this.login({
                key: formData.key
              }, nextRoute);
            case _constants.PLUGINS.BASIC_AUTH:
              return _this.login({
                username: formData.email,
                password: formData.password
              }, nextRoute);
            default:
              return (0, _common.navigateToUrl)((0, _config.GET_CONFIG)('PORTAL_GUI_URL') + '/login');
          }
        }

        if (status === 5) {
          alert('Thank you for registering! Please check your email to verify your account.');
          return (0, _common.navigateToHome)();
        }

        if (window.onRegistrationSuccess) {
          return window.onRegistrationSuccess();
        }

        alert('Thank you for registering! Your request will be reviewed.');
        (0, _common.navigateToHome)();
      });
    }
  }, {
    key: 'logout',
    value: function logout(callback) {
      if ((0, _config.GET_CONFIG)('PORTAL_AUTH') === _constants.PLUGINS.OPENID_CONNECT) {
        (0, _common.navigateToUrl)((0, _config.GET_CONFIG_URL)('API') + '/' + (0, _config.GET_CONFIG)('WORKSPACE') + '/auth?logout=true');
      }

      return _Api2.default.delete('/auth?session_logout=true', { withCredentials: true }).then(function () {
        if (callback) {
          return callback();
        }

        (0, _common.navigateToHome)();
      });
    }
  }]);
  return Auth;
}();

exports.default = Auth;

/***/ }),

/***/ 126:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INPUT_FIELDS = exports.PLUGINS = exports.FILENAMES = exports.TYPES = exports.ROUTES = undefined;

var _defineProperty2 = __webpack_require__(127);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _INPUT_FIELDS;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ROUTES = {
  files: 'files',
  unauthenticatedFiles: 'files/unauthenticated',
  notFound: '404',
  register: 'register'
};

var TYPES = {
  PARTIAL: 'partial',
  PAGE: 'page',
  SPEC: 'spec'
};

var FILENAMES = {
  LOGIN_UNAUTHENTICATED: 'unauthenticated/login'
};

var PLUGINS = {
  BASIC_AUTH: 'basic-auth',
  KEY_AUTH: 'key-auth',
  OPENID_CONNECT: 'openid-connect'
};

var INPUT_FIELDS = (_INPUT_FIELDS = {}, (0, _defineProperty3.default)(_INPUT_FIELDS, PLUGINS.BASIC_AUTH, 'password'), (0, _defineProperty3.default)(_INPUT_FIELDS, PLUGINS.KEY_AUTH, 'key'), (0, _defineProperty3.default)(_INPUT_FIELDS, PLUGINS.OPENID_CONNECT, 'email'), _INPUT_FIELDS);

exports.ROUTES = ROUTES;
exports.TYPES = TYPES;
exports.FILENAMES = FILENAMES;
exports.PLUGINS = PLUGINS;
exports.INPUT_FIELDS = INPUT_FIELDS;

/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.location = undefined;

var _keys = __webpack_require__(48);

var _keys2 = _interopRequireDefault(_keys);

var _stringify = __webpack_require__(68);

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = __webpack_require__(196);

var _typeof3 = _interopRequireDefault(_typeof2);

exports.renderError = renderError;
exports.getWorkspaceURL = getWorkspaceURL;
exports.getMetaTagContent = getMetaTagContent;
exports.sortAlphabetical = sortAlphabetical;
exports.isObject = isObject;
exports.stripTrailingSlash = stripTrailingSlash;
exports.getCurrentRoute = getCurrentRoute;
exports.navigateToHome = navigateToHome;
exports.navigateToUrl = navigateToUrl;
exports.decodeItem = decodeItem;
exports.encodeItem = encodeItem;
exports.forEach = forEach;
exports.getUrlParameter = getUrlParameter;
exports.addEvent = addEvent;
exports.recursiveErrorObjToString = recursiveErrorObjToString;
exports.getMessageFromError = getMessageFromError;
exports.capitalize = capitalize;
exports.transformMetaFields = transformMetaFields;

var _config = __webpack_require__(42);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function renderError(el, error) {
  el.classList.add('error');
  el.innerHTML = error;
}

function getWorkspaceURL(url) {
  var route = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  var workspacePath = '/' + (0, _config.GET_CONFIG)('WORKSPACE');
  var routePath = route[0] === '/' ? route : '/' + route;

  if (workspacePath === '/default' || workspacePath === '/') {
    return '' + url + routePath;
  }

  return '' + url + workspacePath + routePath;
}

function getMetaTagContent(name, defaultValue, dom) {
  dom = dom != null ? dom : document;
  if (!dom) {
    return defaultValue;
  }

  var elements = dom.getElementsByName(name);
  var content = elements.length ? elements[0].content : defaultValue;
  var resp = content === '' || content && content.indexOf('{{') > -1 ? defaultValue : content;
  if (resp === 'null') {
    return '';
  }
  return resp;
}

function sortAlphabetical(a, b) {
  if (a < b) {
    return -1;
  } else if (a > b) {
    return 1;
  }
  return 0;
}

function isObject(item) {
  return (typeof item === 'undefined' ? 'undefined' : (0, _typeof3.default)(item)) === 'object' && !Array.isArray(item) && item !== null;
}

function stripTrailingSlash(string) {
  return string.slice(-1) === '/' ? string.slice(0, -1) : string;
}

function getCurrentRoute() {
  var initialRoute = window.location.pathname.slice(1) === '' ? 'index' : window.location.pathname.slice(1);
  var routeToLoad = stripTrailingSlash(initialRoute);
  return routeToLoad;
}

var location = exports.location = {
  setLocationHref: function setLocationHref(newHref) {
    window.location.href = newHref;
  },

  getLocationHref: function getLocationHref() {
    return window.location.href;
  }
};

function navigateToHome() {
  var url = (0, _config.GET_CONFIG_URL)('GUI');
  location.setLocationHref(url);
}

function navigateToUrl(url) {
  location.setLocationHref(url);
}

function decodeItem(item) {
  var decoded = void 0;

  try {
    decoded = atob(item);
    if (decoded && item) {
      return JSON.parse(decoded);
    }
  } catch (e) {
    return {};
  }

  return {};
}

function encodeItem(item) {
  return btoa((0, _stringify2.default)(item));
}

function forEach(array, callback, scope) {
  for (var i = 0; i < array.length; i++) {
    callback.call(scope, i, array[i]);
  }
}

function getUrlParameter(name) {
  name = name.replace(/[[]/, '\\[').replace(/[\]]/, '\\]');
  var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
  var results = regex.exec(window.location.search);
  return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
}

function addEvent(parent, evt, selector, handler) {
  parent.addEventListener(evt, function (event) {
    if (event.target.matches(selector + ', ' + selector + ' *')) {
      handler.apply(event.target.closest(selector), arguments);
    }
  }, false);
}

function recursiveErrorObjToString(obj) {
  var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  return (0, _keys2.default)(obj).reduce(function (acc, key) {
    if (key === 'code') {
      return acc;
    }

    var value = obj[key];
    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object' && value !== null) {
      return recursiveErrorObjToString(value, acc);
    }

    return '' + (acc && acc + ', ') + key + ': ' + value;
  }, str);
}

function getMessageFromError(error) {
  if (error.response && error.response.data) {
    if (error.response.data.message) {
      return error.response.data.message;
    }

    return recursiveErrorObjToString(error.response.data);
  }

  return error.message || 'There was an error';
}

var capitalizeRegEx = /(?:^|[\s-:'"])\w/g;

function capitalize(str) {
  return str.replace(capitalizeRegEx, function (a) {
    return a.toUpperCase();
  });
}

window.getMessageFromError = getMessageFromError;

function transformMetaFields(jsonStringMetaFields) {
  var schemaToConfigValidatorMap = {
    string: 'text',
    number: 'number'
  };
  var metaFields = jsonStringMetaFields.map(function (field) {
    return {
      field_name: field.title,
      input: field.label,
      type_of_input: field.is_email ? 'email' : schemaToConfigValidatorMap[field.validator.type],
      required: field.validator.required
    };
  });
  return metaFields;
}

/***/ }),

/***/ 42:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GET_CONFIG_URL = exports.KONG_CONFIGS = undefined;
exports.GET_CONFIG = GET_CONFIG;

var _common = __webpack_require__(17);

var KONG_CONFIGS = {
  PORTAL_AUTH: null,
  PORTAL_API_URL: null,
  PORTAL_API_PORT: '8004',
  PORTAL_API_SSL_PORT: '8447',
  PORTAL_GUI_URL: 'http://127.0.0.1:8003',
  PORTAL_GUI_PORT: '8003',
  PORTAL_GUI_SSL_PORT: '8443',
  PORTAL_IS_AUTHENTICATED: false,
  PORTAL_GUI_USE_SUBDOMAINS: false,
  RBAC_ENFORCED: 'false',
  RBAC_HEADER: 'Kong-Admin-Token',
  KONG_VERSION: 'false',
  WORKSPACE: 'default',
  PORTAL_DEVELOPER_META_FIELDS: [{
    label: 'Full Name',
    title: 'full_name',
    validator: {
      required: true,
      type: 'string'
    }
  }]
};

window.K_CONFIG = ['PORTAL_AUTH', 'PORTAL_API_URL', 'PORTAL_GUI_SSL_PORT', 'RBAC_HEADER', 'KONG_VERSION', 'PORTAL_GUI_PORT', 'PORTAL_API_SSL_PORT', 'PORTAL_GUI_URL', 'PORTAL_API_PORT', 'PORTAL_IS_AUTHENTICATED', 'PORTAL_GUI_USE_SUBDOMAINS', 'RBAC_ENFORCED', 'WORKSPACE', 'PORTAL_DEVELOPER_META_FIELDS'].reduce(function (acc, key) {
  acc[key] = (0, _common.getMetaTagContent)('KONG:' + key, KONG_CONFIGS[key]);

  if (key === 'PORTAL_DEVELOPER_META_FIELDS') {
    try {
      acc[key] = JSON.parse(acc[key]);
    } catch (e) {
      acc[key] = [];
    }
  }

  return acc;
}, {});

function GET_CONFIG_URL() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'API';

  var typeU = type.toUpperCase();

  if (['API', 'GUI'].indexOf(typeU) === -1) {
    throw new Error('Not a valid uri config type.');
  }

  var port = window.location.protocol.toLowerCase() === 'https:' ? GET_CONFIG('PORTAL_' + typeU + '_SSL_PORT') : GET_CONFIG('PORTAL_' + typeU + '_PORT');
  var baseUrl = window.location.protocol + '//' + window.location.hostname + ':' + port;

  return GET_CONFIG('PORTAL_' + typeU + '_URL') || baseUrl;
}

function GET_CONFIG(name) {
  var value = window.K_CONFIG ? window.K_CONFIG[name] : null;

  if (value === '' || value == null) {
    return KONG_CONFIGS[name] ? KONG_CONFIGS[name] : '';
  }

  try {
    return JSON.parse(value);
  } catch (e) {
    return value;
  }
}

window.GET_CONFIG = GET_CONFIG;

exports.KONG_CONFIGS = KONG_CONFIGS;
exports.GET_CONFIG_URL = GET_CONFIG_URL;

/***/ }),

/***/ 49:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(127);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = __webpack_require__(94);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = __webpack_require__(95);

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = __webpack_require__(124);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(125);

var _createClass3 = _interopRequireDefault(_createClass2);

var _axios = __webpack_require__(256);

var _axios2 = _interopRequireDefault(_axios);

var _config = __webpack_require__(42);

var _constants = __webpack_require__(126);

var _common = __webpack_require__(17);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var baseURL = '' + (0, _config.GET_CONFIG_URL)('API');

var Api = function () {
  function Api() {
    (0, _classCallCheck3.default)(this, Api);
  }

  (0, _createClass3.default)(Api, null, [{
    key: 'login',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(axiosConfig) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, '/auth');
                _context.next = 5;
                return _axios2.default.get(url, axiosConfig);

              case 5:
                resp = _context.sent;
                _context.next = 13;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context['catch'](1);

                resp.data = [];
                resp.response = _context.t0.response;
                resp.status = _context.t0.response && _context.t0.response.status ? _context.t0.response.status : -1;

              case 13:
                return _context.abrupt('return', resp);

              case 14:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 8]]);
      }));

      function login(_x) {
        return _ref.apply(this, arguments);
      }

      return login;
    }()
  }, {
    key: 'getFiles',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(_ref3) {
        var axiosConfig = _ref3.axiosConfig,
            _ref3$route = _ref3.route,
            route = _ref3$route === undefined ? _constants.ROUTES.files + '?size=100' : _ref3$route;
        var resp, url, offset, arr;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context2.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, route);
                offset = void 0;
                arr = [];

              case 5:
                _context2.next = 7;
                return _axios2.default.get(offset ? url + '&offset=' + offset : url, axiosConfig);

              case 7:
                resp = _context2.sent;

                offset = resp.data.offset;
                arr = arr.concat(resp.data.data || [resp.data]);

              case 10:
                if (offset) {
                  _context2.next = 5;
                  break;
                }

              case 11:

                resp.data = arr;
                _context2.next = 19;
                break;

              case 14:
                _context2.prev = 14;
                _context2.t0 = _context2['catch'](1);

                resp.data = [];
                resp.response = _context2.t0.response;
                resp.status = _context2.t0.response && _context2.t0.response.status ? _context2.t0.response.status : -1;

              case 19:
                return _context2.abrupt('return', resp);

              case 20:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this, [[1, 14]]);
      }));

      function getFiles(_x2) {
        return _ref2.apply(this, arguments);
      }

      return getFiles;
    }()
  }, {
    key: 'register',
    value: function register(email, passwordKey, passwordValue, meta) {
      var _axios$post;

      var url = (0, _common.getWorkspaceURL)(baseURL, _constants.ROUTES.register);
      return _axios2.default.post(url, (_axios$post = { email: email }, (0, _defineProperty3.default)(_axios$post, passwordKey, passwordValue), (0, _defineProperty3.default)(_axios$post, 'meta', meta), _axios$post));
    }
  }, {
    key: 'get',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(path, axiosConfig, transformResponse) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context3.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, path);
                _context3.next = 5;
                return _axios2.default.get(url, axiosConfig);

              case 5:
                resp = _context3.sent;

                if (transformResponse) {
                  resp = transformResponse(resp);
                }
                resp.status = 200;
                _context3.next = 15;
                break;

              case 10:
                _context3.prev = 10;
                _context3.t0 = _context3['catch'](1);

                resp.data = [];
                resp.response = _context3.t0.response;
                resp.status = _context3.t0.response && _context3.t0.response.status ? _context3.t0.response.status : -1;

              case 15:
                return _context3.abrupt('return', resp);

              case 16:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 10]]);
      }));

      function get(_x3, _x4, _x5) {
        return _ref4.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: 'post',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(path, options, axiosConfig, transformResponse) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context4.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, path);
                _context4.next = 5;
                return _axios2.default.post(url, options, axiosConfig);

              case 5:
                resp = _context4.sent;

                if (transformResponse) {
                  resp = transformResponse(resp);
                }
                resp.status = 200;
                _context4.next = 15;
                break;

              case 10:
                _context4.prev = 10;
                _context4.t0 = _context4['catch'](1);

                resp.data = [];
                resp.response = _context4.t0.response;
                resp.status = _context4.t0.response && _context4.t0.response.status ? _context4.t0.response.status : -1;

              case 15:
                return _context4.abrupt('return', resp);

              case 16:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this, [[1, 10]]);
      }));

      function post(_x6, _x7, _x8, _x9) {
        return _ref5.apply(this, arguments);
      }

      return post;
    }()
  }, {
    key: 'put',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(path, options, axiosConfig, transformResponse) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context5.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, path);
                _context5.next = 5;
                return _axios2.default.put(url, options, axiosConfig);

              case 5:
                resp = _context5.sent;

                if (transformResponse) {
                  resp = transformResponse(resp);
                }
                resp.status = 200;
                _context5.next = 15;
                break;

              case 10:
                _context5.prev = 10;
                _context5.t0 = _context5['catch'](1);

                resp.data = [];
                resp.response = _context5.t0.response;
                resp.status = _context5.t0.response && _context5.t0.response.status ? _context5.t0.response.status : -1;

              case 15:
                return _context5.abrupt('return', resp);

              case 16:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this, [[1, 10]]);
      }));

      function put(_x10, _x11, _x12, _x13) {
        return _ref6.apply(this, arguments);
      }

      return put;
    }()
  }, {
    key: 'patch',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(path, options, axiosConfig, transformResponse) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context6.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, path);
                _context6.next = 5;
                return _axios2.default.patch(url, options, axiosConfig);

              case 5:
                resp = _context6.sent;

                if (transformResponse) {
                  resp = transformResponse(resp);
                }
                resp.status = 200;
                _context6.next = 15;
                break;

              case 10:
                _context6.prev = 10;
                _context6.t0 = _context6['catch'](1);

                resp.data = [];
                resp.response = _context6.t0.response;
                resp.status = _context6.t0.response && _context6.t0.response.status ? _context6.t0.response.status : -1;

              case 15:
                return _context6.abrupt('return', resp);

              case 16:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this, [[1, 10]]);
      }));

      function patch(_x14, _x15, _x16, _x17) {
        return _ref7.apply(this, arguments);
      }

      return patch;
    }()
  }, {
    key: 'delete',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(path, axiosConfig, transformResponse) {
        var resp, url;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                resp = { data: [], status: 200 };
                _context7.prev = 1;
                url = (0, _common.getWorkspaceURL)(baseURL, path);
                _context7.next = 5;
                return _axios2.default.delete(url, axiosConfig);

              case 5:
                resp = _context7.sent;

                if (transformResponse) {
                  resp = transformResponse(resp);
                }
                resp.status = 200;
                _context7.next = 15;
                break;

              case 10:
                _context7.prev = 10;
                _context7.t0 = _context7['catch'](1);

                resp.data = [];
                resp.response = _context7.t0.response;
                resp.status = _context7.t0.response && _context7.t0.response.status ? _context7.t0.response.status : -1;

              case 15:
                return _context7.abrupt('return', resp);

              case 16:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this, [[1, 10]]);
      }));

      function _delete(_x18, _x19, _x20) {
        return _ref8.apply(this, arguments);
      }

      return _delete;
    }()
  }]);
  return Api;
}();

exports.default = Api;

/***/ })

},[1111]);