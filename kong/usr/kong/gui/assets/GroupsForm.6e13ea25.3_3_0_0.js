/*
  This software is copyright Kong Inc. and its licensors.
  Use of the software is subject to the agreement between your organization
  and Kong Inc. If there is no such agreement, use is governed by and
  subject to the terms of the Kong Master Software License Agreement found
  at https://konghq.com/enterprisesoftwarelicense/.
*/

import{_ as K,H as A,W as O,z as T,J as V,a3 as j,r as l,c as u,b as c,w as p,o as m,a as d,V as B,K as L,L as N,R as P,U as H,l as I,d as b,t as z,h as f,p as J,e as U,__tla as q}from"./index.84d84090.3_3_0_0.js";import{F as Q,__tla as X}from"./FormPage.4b74a91a.3_3_0_0.js";import{B as Y,__tla as Z}from"./BadgeLink.239f1815.3_3_0_0.js";import{R as ee,__tla as te}from"./RolesModal.41a9acab.3_3_0_0.js";import{N as se,__tla as ae}from"./NativeEntityForm.f002aa47.3_3_0_0.js";import{__tla as re}from"./monaco-editor.90904fcf.3_3_0_0.js";import{__tla as oe}from"./MultiChecklist.d117c9be.3_3_0_0.js";import{__tla as ie}from"./ConfirmModalDialog.af276128.3_3_0_0.js";import{__tla as le}from"./EntityDeleteModal.673d985c.3_3_0_0.js";import{__tla as ne}from"./EntityMixin.2764673d.3_3_0_0.js";import{__tla as ce}from"./EntityButton.1838e0e9.3_3_0_0.js";import{__tla as de}from"./EntityFilter.bf4158bc.3_3_0_0.js";import"./RedirectMixin.efeb36f2.3_3_0_0.js";let k,he=Promise.all([(()=>{try{return q}catch{}})(),(()=>{try{return X}catch{}})(),(()=>{try{return Z}catch{}})(),(()=>{try{return te}catch{}})(),(()=>{try{return ae}catch{}})(),(()=>{try{return re}catch{}})(),(()=>{try{return oe}catch{}})(),(()=>{try{return ie}catch{}})(),(()=>{try{return le}catch{}})(),(()=>{try{return ne}catch{}})(),(()=>{try{return ce}catch{}})(),(()=>{try{return de}catch{}})()]).then(async()=>{const g={name:"GroupsForm",components:{BadgeLink:Y,PageHeader:A,RolesModal:ee,WorkspaceTitle:O,NativeEntityForm:se},mixins:[Q],data(){return{schema:{},resourceEndpoint:"groups",entityName:"Group",isModalVisible:!1,workspaceRoles:[],changes:{},breadcrumbItems:[{key:"groups-overview",to:{path:"/teams",hash:"#groups"},title:"Team Groups",text:"Teams"}],enableSubmit:!1,tableOptions:{headers:[{label:"Workspace",key:"workspace"},{label:"Roles",key:"roles"},{hideLabel:!0,key:"actions"}]},tableFetcherCacheKey:(+new Date).toString()}},computed:{...T(V,["workspaces","getWorkspaceMeta"]),id(){return this.$route.params.id},tableData(){return this.workspaceRoles?Object.values(this.workspaceRoles).map(e=>({workspace:e.workspace,roles:e.roles})).filter(e=>e.roles.length>0):[]}},watch:{tableData:{handler(){this.tableFetcherCacheKey=(+new Date).toString()},deep:!0,immediate:!0}},methods:{fetch(){return this.fetchWorkspaceRoles().then(this.onFormLoad)},fetchWorkspaceRoles(){return this.id?this.$api.getGroupRoles(this.id).then(e=>this.mapRolesAndWorkspaces(e)).then(this.fetchWorkspaceData):new Promise(e=>e())},fetchWorkspaceData(){this.workspaceRoles.forEach(e=>this.$api.getAllRoles(e.workspace).then(o=>{const a=o.data;for(let r=0;r<e.roles.length;r++){const t=a.find(s=>s.name===e.roles[r].name);e.roles[r].comment=t.comment||""}}))},tableFetcher(){return{total:this.tableData.length,data:this.tableData}},mapRolesAndWorkspaces(e){const o=e.data,a={};let r=null;for(let t=0;t<o.length;t++){const s=o[t].rbac_role;r=this.workspaces.find(i=>i.id===o[t].workspace.id).name,a[r]?a[r].roles.push(s):a[r]={roles:[s],workspace:r}}this.workspaceRoles=Object.values(a)},saveGroups(e){this.isModalVisible=!1;const o=Object.keys(e);this.isEditing&&o.forEach(a=>{const r=e[a];this.changes[a]||(this.changes[a]={}),Object.assign(this.changes[a],r.added&&{added:r.added},r.deleted&&{deleted:r.deleted})});for(let a=0;a<o.length;a++){const r=this.workspaceRoles.find(t=>t.workspace===o[a]);if(r){const t=e[o[a]].added;for(let s=0;s<t.length;s++)r.roles.find(i=>i.name===t[s].name)||r.roles.push(t[s])}else this.workspaceRoles.push({workspace:o[a],roles:e[o[a]].added});if(e[o[a]].deleted.length&&r){const t=new Set(e[o[a]].deleted.map(i=>i.id)),s=r.roles.filter(i=>!t.has(i.id));r.roles=s}}this.enableSubmit=!0},groupsFormSubmit(e){return this.onFormSubmit(e,null).then(o=>this.submitGroups(o.data.id)).then(this.handleSuccess)},submitGroups(e){const o=[];if(this.isEditing){if(!j(this.changes))for(const a in this.changes){const r=this.changes[a],t=this.workspaces.find(s=>s.name===a).id;if(r.added.length>0)for(let s=0;s<r.added.length;s++){const i=r.added[s].id;o[s]=this.$api.createGroupRoles(e,{rbac_role_id:i,workspace_id:t})}if(r.deleted.length>0)for(let s=0;s<r.deleted.length;s++){const i=r.deleted[s].id;o[s]=this.$api.deleteGroupRoles(e,{rbac_role_id:i,workspace_id:t})}}}else for(let a=0;a<this.workspaceRoles.length;a++){const r=this.workspaces.find(t=>t.name===this.workspaceRoles[a].workspace).id;o[a]=[];for(let t=0;t<this.workspaceRoles[a].roles.length;t++){const s=this.workspaceRoles[a].roles[t].id;o[a][t]=this.$api.createGroupRoles(e,{rbac_role_id:s,workspace_id:r})}}return Promise.all(o.flat())},createRecord(e){return this.$api.createRecord(this.resourceEndpoint,e)},updateRecord(e){return this.$api.updateRecord(this.resourceEndpoint,this.id,e)},onFormDelete(){return this.$api.deleteRecord(this.resourceEndpoint,this.id).then(this.handleSuccess)},handleDelete(){return this.onDeleteWhenEditing().then(this.handleSuccess)},handleSuccess(){this.$router.push({path:"/teams",hash:"#groups"})}}},_=e=>(J("data-v-5a0533f4"),e=e(),U(),e),w={class:"form-container groups-form"},y={class:"d-flex justify-content-between align-items-center"},R=_(()=>d("div",null,[d("label",{class:"mb-0"},"Mapped Roles")],-1)),v=b(" Add/Edit Roles "),E=_(()=>d("p",{class:"hint mt-4 mb-0"}," Add roles to assign permissions within a workspace for this service directory group. ",-1)),F={key:0,class:"roles-table pb-4"};function D(e,o,a,r,t,s){const i=l("KBreadcrumbs"),S=l("PageHeader"),W=l("KButton"),G=l("WorkspaceTitle"),M=l("BadgeLink"),$=l("KTable"),x=l("NativeEntityForm"),C=l("RolesModal");return m(),u("section",w,[c(i,{items:t.breadcrumbItems},null,8,["items"]),c(S),c(x,{"is-editing":e.isEditing,"entity-name":t.entityName,"resource-endpoint":t.resourceEndpoint,"show-confirmation-dialog":!1,"enable-submit":t.enableSubmit,schema:t.schema,"button-text":e.buttonText,"on-load":s.fetch,"on-submit":s.groupsFormSubmit,"on-delete":s.handleDelete,"redirect-route-after-delete":{path:"/teams",hash:"#groups"},entity:"groups"},{afterFormContainer:p(()=>[d("div",{class:B([{"border-bottom pb-4":s.tableData.length===0},"mb-4 pt-4 border-top roles-section"])},[d("div",y,[R,d("div",null,[c(W,{class:"roles-btn",appearance:"outline",onClick:o[0]||(o[0]=n=>t.isModalVisible=!0)},{default:p(()=>[v]),_:1})])]),E],2),s.tableData.length>0?(m(),u("div",F,[c($,{fetcher:s.tableFetcher,"fetcher-cache-key":t.tableFetcherCacheKey,options:t.tableOptions,"has-side-border":!1,"disable-pagination":""},{workspace:p(({row:{workspace:n}})=>[c(G,L(N(e.getWorkspaceMeta(n))),null,16)]),roles:p(({row:n})=>[n.roles.length>0?(m(!0),u(P,{key:0},H(n.roles,h=>(m(),I(M,{key:h&&h.name,tooltip:h.comment,link:{name:"teams-view-role",params:{id:h.id,workspace:n.workspace}}},{default:p(()=>[b(z(h.name),1)]),_:2},1032,["tooltip","link"]))),128)):f("",!0)]),_:1},8,["fetcher","fetcher-cache-key","options"])])):f("",!0)]),_:1},8,["is-editing","entity-name","resource-endpoint","enable-submit","schema","button-text","on-load","on-submit","on-delete"]),c(C,{"is-visible":t.isModalVisible,"selected-roles":t.workspaceRoles,"modal-proceed-text":"Add/Edit Roles","multi-workspace":"",onConfirm:s.saveGroups,onCancel:o[1]||(o[1]=n=>t.isModalVisible=!1)},null,8,["is-visible","selected-roles","onConfirm"])])}k=K(g,[["render",D],["__scopeId","data-v-5a0533f4"]])});export{he as __tla,k as default};
