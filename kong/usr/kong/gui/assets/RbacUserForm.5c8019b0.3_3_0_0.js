/*
  This software is copyright Kong Inc. and its licensors.
  Use of the software is subject to the agreement between your organization
  and Kong Inc. If there is no such agreement, use is governed by and
  subject to the terms of the Kong Master Software License Agreement found
  at https://konghq.com/enterprisesoftwarelicense/.
*/

import{_ as S,H as T,z as V,Q as F,r as o,c as h,b as i,w as d,o as u,a as l,V as q,h as P,d as c,__tla as H}from"./index.84d84090.3_3_0_0.js";import{E as K,__tla as j}from"./EntityForm.c5492e4f.3_3_0_0.js";import{F as I,__tla as L}from"./FormPage.4b74a91a.3_3_0_0.js";import{R as N,__tla as z}from"./RolesModal.41a9acab.3_3_0_0.js";import{__tla as O}from"./monaco-editor.90904fcf.3_3_0_0.js";import{__tla as Q}from"./ConfirmModalDialog.af276128.3_3_0_0.js";import{__tla as G}from"./EntityDeleteModal.673d985c.3_3_0_0.js";import{__tla as J}from"./EntityMixin.2764673d.3_3_0_0.js";import{__tla as X}from"./EntityButton.1838e0e9.3_3_0_0.js";import{__tla as Y}from"./EntityFilter.bf4158bc.3_3_0_0.js";import"./RedirectMixin.efeb36f2.3_3_0_0.js";import{__tla as Z}from"./MultiChecklist.d117c9be.3_3_0_0.js";let m,ee=Promise.all([(()=>{try{return H}catch{}})(),(()=>{try{return j}catch{}})(),(()=>{try{return L}catch{}})(),(()=>{try{return z}catch{}})(),(()=>{try{return O}catch{}})(),(()=>{try{return Q}catch{}})(),(()=>{try{return G}catch{}})(),(()=>{try{return J}catch{}})(),(()=>{try{return X}catch{}})(),(()=>{try{return Y}catch{}})(),(()=>{try{return Z}catch{}})()]).then(async()=>{const p={name:{type:"input",inputType:"text",label:"Name",required:!0},user_token:{type:"input",inputType:"text",label:"User Token",required:!0},comment:{type:"input",inputType:"text",label:"Comment",styleClasses:"optional"},enabled:{type:"checkbox",default:!0,label:"Enabled",styleClasses:"optional",help:"An RBAC User that is enabled can make API requests"}},b={name:"RbacForm",components:{PageHeader:T,EntityForm:K,RolesModal:N},mixins:[I],data(){return{schema:p,isModalVisible:!1,userId:null,userRoles:[],changedRoles:{added:[],deleted:[]},enableSubmit:!1}},computed:{...V(F,{docsBase:"docsEnterprise"}),workspace(){return this.$route.params.workspace},docsLink(){return`${this.docsBase.url}admin-api/rbac/reference/`},id(){return this.$route.params.id},resourceEndpoint(){return"rbac/users"},tableData(){return{headers:[{label:"Role",key:"name"},{label:"Comment",key:"comment"}],data:this.userRoles.length&&this.userRoles[0].roles||[]}},breadcrumbItems(){const t=this.$route.params.workspace,e=[{key:"teams-overview",to:{path:"/teams",query:{workspace:t},hash:"#rbac-users"},title:"Team RBAC Users",text:"Teams"}];return this.isEditing&&e.push({key:"view-rbac-user",to:{name:"show-rbac-user",params:{workspace:t}},title:`View ${this.id}`,text:this.id}),e}},beforeMount(){this.isEditing&&this.fetchUserRoles()},methods:{fetchUserRoles(){this.$api.query(`${this.workspace}/rbac/users/${this.id}/roles`).then(t=>{this.userRoles=[{workspace:this.workspace,roles:t.data.roles}]})},saveUserRoles(t){const e=[],s=t[this.workspace];if(this.isModalVisible=!1,Object.assign(this.changedRoles,s.added&&{added:s.added},s.deleted&&{deleted:s.deleted}),e.push({workspace:this.workspace,roles:s.added}),this.userRoles[0]&&this.userRoles[0].roles){if(s.added)for(let n=0;n<e[0].roles.length;n++)this.userRoles[0].roles.push(e[0].roles[n]);if(s.deleted){const n=this.changedRoles.deleted.map(r=>r.name);this.userRoles[0].roles=this.userRoles[0].roles.filter(r=>!n.includes(r.name))}}else this.userRoles=e;this.enableSubmit=!0},submitRoles(t){const e=[];return this.userRoles.length===0?this.handleSuccess():(this.changedRoles.added.length&&e.push(this.$api.createRecordWithWorkspace(this.workspace,`rbac/users/${t}/roles`,{roles:this.changedRoles.added.map(s=>s.name).join(",")})),this.changedRoles.deleted.length&&e.push(this.$api.deleteRecordWithWorkspaceAndBody(this.workspace,`rbac/users/${t}/roles`,{roles:this.changedRoles.deleted.map(s=>s.name).join(",")})),Promise.all(e))},createRecord(t){return this.$api.createRecordWithWorkspace(this.workspace,this.resourceEndpoint,t).then(e=>this.submitRoles(e.data.id)).then(this.handleSuccess)},updateRecord(t){return this.$api.updateRecordWithWorkspace(this.workspace,this.resourceEndpoint,this.id,t).then(e=>this.submitRoles(e.data.id)).then(this.handleSuccess)},deleteRecord(){return this.$api.deleteRecordWithWorkspace(this.workspace,this.resourceEndpoint,this.id)},handleDelete(){return this.onDeleteWhenEditing()},handleSuccess(){this.$router.push({path:"/teams",hash:"#rbac-users",query:{workspace:this.workspace}})},rowClickHandler(t,e){this.$router.push({name:"teams-update-role",params:{workspace:this.workspace,id:e.id}})}}},_={class:"rbac-user-form form-container"},k=c(" View docs "),R={class:"d-flex justify-content-between align-items-center"},f=l("div",null,[l("label",{class:"mb-0"},"Roles")],-1),w=c(" Add/Edit Roles "),y=l("p",{class:"hint mt-4 mb-0"}," An RBAC User can belong to only one workspace. ",-1),g={key:0,class:"roles-table pb-4"},E=l("strong",null,"Note:",-1),$=c(" A User can only be added to one workspace at a time. ");function x(t,e,s,n,r,a){const v=o("KBreadcrumbs"),C=o("KExternalLink"),A=o("PageHeader"),W=o("KButton"),U=o("KTable"),M=o("EntityForm"),B=o("RolesModal");return u(),h("section",_,[i(v,{items:a.breadcrumbItems},null,8,["items"]),i(A,null,{default:d(()=>[i(C,{href:a.docsLink},{default:d(()=>[k]),_:1},8,["href"])]),_:1}),i(M,{"is-editing":t.isEditing,"show-confirmation-dialog":!1,schema:r.schema,"button-text":t.buttonText,"on-load":t.onFormLoad,"on-submit":t.onFormSubmit,"enable-submit":r.enableSubmit,"on-delete":a.handleDelete,"resource-endpoint":a.resourceEndpoint,"redirect-route-after-delete":{name:"teams-overview",hash:"#rbac-users"},"entity-name":"User",entity:"rbac/users"},{afterFormContainer:d(()=>[l("div",{class:q([{"border-bottom pb-4":!a.tableData.data.length},"mb-4 pt-4 border-top roles-section"])},[l("div",R,[f,l("div",null,[i(W,{class:"roles-btn",appearance:"outline",onClick:e[0]||(e[0]=D=>r.isModalVisible=!0)},{default:d(()=>[w]),_:1})])]),y],2),a.tableData.data.length?(u(),h("div",g,[i(U,{headers:a.tableData.headers,fetcher:()=>({data:a.tableData.data||[]}),"disable-pagination":!0,"empty-state-title":"No roles assigned","onRow:click":a.rowClickHandler},null,8,["headers","fetcher","onRow:click"])])):P("",!0)]),_:1},8,["is-editing","schema","button-text","on-load","on-submit","enable-submit","on-delete","resource-endpoint"]),i(B,{"is-visible":r.isModalVisible,workspace:a.workspace,"selected-roles":r.userRoles,"modal-proceed-text":`${t.isEditing?"Edit":"Add"} Roles`,onConfirm:a.saveUserRoles,onCancel:e[1]||(e[1]=D=>r.isModalVisible=!1)},{modalAlertMessage:d(()=>[E,$]),_:1},8,["is-visible","workspace","selected-roles","modal-proceed-text","onConfirm"])])}m=S(b,[["render",x]])});export{ee as __tla,m as default};
