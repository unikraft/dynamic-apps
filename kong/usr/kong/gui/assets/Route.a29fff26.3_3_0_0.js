/*
  This software is copyright Kong Inc. and its licensors.
  Use of the software is subject to the agreement between your organization
  and Kong Inc. If there is no such agreement, use is governed by and
  subject to the terms of the Kong Master Software License Agreement found
  at https://konghq.com/enterprisesoftwarelicense/.
*/

import{aH as n,__tla as _}from"./index.84d84090.3_3_0_0.js";import{A as g}from"./ArrayCardContainerFields.468b3825.3_3_0_0.js";import{t as i}from"./typedefs.6c779761.3_3_0_0.js";import{c as T}from"./index.6d4e40f9.3_3_0_0.js";import{a as d}from"./transform.db23dc95.3_3_0_0.js";let f,u,x=Promise.all([(()=>{try{return _}catch{}})()]).then(async()=>{let c,h,m,b;c={type:"object",schema:{fields:[{label:"IP",model:"ip",type:"input",inputType:"text"},{label:"Port",model:"port",type:"input",inputType:"number"}]}},h={"service-id":{label:"Gateway Service",placeholder:"Select a Gateway Service",type:"AutoSuggest",valueType:"object-expand",required:!0,entity:"services",inputValues:{fields:["name","id"]}},name:{label:"Name",type:"input",inputType:"text",placeholder:"Enter a Route Name"},protocols:{label:"Protocols",name:"protocols",array:!0,default:["http","https"],type:"select",selectOptions:{hideNoneSelectedText:!0},required:!0,values:[{name:"grpc",id:["grpc"],group:"grpc"},{name:"grpcs",id:["grpcs"],group:"grpc"},{name:"grpc, grpcs",id:["grpc","grpcs"],group:"grpc"},{name:"http",id:["http"],group:"http",checked:!0},{name:"https",id:["https"],group:"http"},{name:"http, https",id:["http","https"],group:"http"},{name:"tcp",id:["tcp"],group:"tcp"},{name:"tls",id:["tls"],group:"tcp"},{name:"tcp, tls",id:["tcp","tls"],group:"tcp"},{name:"udp",id:["udp"],group:"udp"},{name:"ws",id:["ws"],group:"websocket",checked:!0},{name:"wss",id:["wss"],group:"websocket"},{name:"ws, wss",id:["ws","wss"],group:"websocket"}]},https_redirect_status_code:{label:"HTTPS Redirect Status Code",type:"select",name:"https_redirect_status_code",default:426,selectOptions:{hideNoneSelectedText:!0},values:[426,301,302,307,308]},tags:i.tags,advanced:{label:"Advanced Fields",type:"advanced",inputType:"hidden",styleClasses:"hide-label",fields:[{label:"Strip Path",model:"strip_path",type:"checkbox",submitWhenNull:!0,default:!0,visible:e=>{const t=e&&!n.deepIncludes(["grpc","grpcs"],e.protocols);return t||(e.strip_path=!1),t}},{label:"Preserve Host",model:"preserve_host",type:"checkbox",default:!1},{label:"Request Buffering",model:"request_buffering",type:"checkbox",default:!0},{label:"Response Buffering",model:"response_buffering",type:"checkbox",default:!0}]}},m={snis:{label:"SNI(s)",name:"snis",type:"input",submitWhenNull:!0,inputType:"text",valueType:"array",valueArrayType:"string",placeholder:"Enter an SNI",help:"A list of SNIs (Server Name Indications from a TLS ClientHello) that match this Route, separated by commas.",visible:e=>e&&n.deepIncludes(["https","grpcs","tls","http,https","grpc,grpcs","tcp,tls","wss","ws,wss"],e.protocols)},hosts:{label:"Host(s)",type:"input",submitWhenNull:!0,inputType:"text",valueType:"array",valueArrayType:"string",placeholder:"Enter a Host",help:"A list of domain names that match this Route, separated by commas.",visible:e=>{const t=e&&!n.deepIncludes(["tcp","tls","udp"],e.protocols);return t||(e.hosts=null),t}},sources:{...g,submitWhenNull:!0,newElementButtonLabel:"+ Add Source",label:"Source(s)",placeholder:"Enter a Source",help:"A list of IP sources of incoming connections that match this Route when using stream routing.",visible:e=>{const t=e&&n.deepIncludes(["tcp","tls","udp"],e.protocols);return t||(e.sources=null),t},items:c},destinations:{...g,submitWhenNull:!0,newElementButtonLabel:"+ Add Destination",label:"Destination(s)",help:"A list of IP destinations of incoming connections that match this Route when using stream routing.",visible:e=>{const t=e&&n.deepIncludes(["tcp","tls","udp"],e.protocols);return t||(e.destinations=null),t},items:c},methods:{label:"Method(s)",type:"input",submitWhenNull:!0,inputType:"text",valueType:"array",valueArrayType:"string",placeholder:"Enter a Method",help:"A list of HTTP methods that match this Route, separated by commas.",visible:e=>{const t=e&&n.deepIncludes(["http","https","http,https"],e.protocols);return t||(e.methods=null),t}},paths:{...i.fields.arrayItems({label:"Path(s)",submitWhenNull:!0,newElementButtonLabel:"+ Add Path",inputAttributes:{placeholder:"Enter a Path"},visible:e=>{const t=e&&!n.deepIncludes(["tcp","tls","udp"],e.protocols);return t||(e.paths=null),t}})},headers:{label:"Headers",type:"object-advanced",submitWhenNull:!0,placeholder:"Enter header name",help:"One or more lists of values indexed by header name that will cause this Route to match if present in the request. The Host header cannot be used with this attribute: hosts should be specified using the hosts attribute.",buttonLabel:"Header Values",hintText:"e.g. my-header",fields:[{schema:{type:"input",inputType:"text",valueType:"array",placeholder:"Comma separated list of header values",hint:"e.g. value1, value2, value 3"}}],visible:e=>{const t=e&&!n.deepIncludes(["tcp","tls","udp"],e.protocols);return t||(e.headers=null),t}},advanced:[{label:"Regex Priority",model:"regex_priority",type:"input",inputType:"number",default:0,placeholder:"Set a Regex Priority",styleClasses:"optional",min:0},{label:"Path Handling",model:"path_handling",type:"select",selectOptions:{hideNoneSelectedText:!0},default:"v0",values:[{name:"v0",id:"v0"},{name:"v1",id:"v1"}]}]},b={expression:{label:"Expression",type:"RouteExpression",inputType:"text"},advanced:[{label:"Priority",model:"priority",type:"input",inputType:"number",default:0}]},u=e=>{const{advanced:t,...s}=h,{advanced:r,...a}=e==="expressions"?b:m,l=T(t);l.fields.push(...r);const p={...s,...a,...l.fields.length>0?{advanced:l}:null};return Object.entries(p).forEach(([o,y])=>{o!=="advanced"?d(y,"routes",o):y.fields.forEach(v=>{d(v,"routes",v.model)})}),p},f=e=>{const t=u(e),s={id:i.id,...Object.entries(t).reduce((a,[l,p])=>(l!=="advanced"&&(l==="service-id"?a.service={label:"Gateway Service",entity:"services"}:a[l]=p),a),{})};let r={...s.snis?{snis:s.snis}:null,https_redirect_status_code:s.https_redirect_status_code};return delete s.snis,delete s.https_redirect_status_code,"advanced"in t&&typeof t.advanced=="object"&&t.advanced!==null&&Array.isArray(t.advanced.fields)&&(r={...r,...t.advanced.fields.reduce((a,{model:l,...p})=>(a[l]=p,a),{})},s.strip_path=r.strip_path,s.preserve_host=r.preserve_host,delete r.strip_path,delete r.preserve_host),s.created_at=i.created_at,s.updated_at=i.updated_at,s.advanced=r,Object.entries(s).forEach(([a,l])=>{a!=="advanced"?d(l,"routes",a):Object.entries(s.advanced).forEach(([p,o])=>{d(o,"routes",p)})}),s}});export{x as __tla,f as a,u as g};
