/*
  This software is copyright Kong Inc. and its licensors.
  Use of the software is subject to the agreement between your organization
  and Kong Inc. If there is no such agreement, use is governed by and
  subject to the terms of the Kong Master Software License Agreement found
  at https://konghq.com/enterprisesoftwarelicense/.
*/

import{_ as b,r as o,o as s,l as g,w as r,c as R,U as j,d as y,t as d,R as D,Y as v,m as N,n as w,g as A,a as p,z as F,J as q,b as E,V as U,__tla as J}from"./index.84d84090.3_3_0_0.js";import{C as Y,__tla as G}from"./ConfirmModalDialog.af276128.3_3_0_0.js";let K,S,f,z=Promise.all([(()=>{try{return J}catch{}})(),(()=>{try{return G}catch{}})()]).then(async()=>{const V={name:"EntityTags",props:{tags:{type:Array,default:()=>[]},noCollapse:{type:Boolean,default:!1}},methods:{getTagLabel(e){return typeof e=="object"&&e!==null&&"label"in e?e.label:e},getTagForeground(e){if(typeof e=="object"&&e!==null&&"foreground"in e)return e.foreground},getTagBackground(e){if(typeof e=="object"&&e!==null&&"background"in e)return e.background}}};function B(e,i,a,$,c,t){const l=o("KBadge"),m=o("KTruncate");return s(),g(m,{rows:a.noCollapse?100:1},{default:r(()=>[(s(!0),R(D,null,j(a.tags,n=>(s(),g(l,{key:t.getTagLabel(n),color:t.getTagForeground(n)||"var(--grey-600)","background-color":t.getTagBackground(n)||"var(--grey-200)","truncation-tooltip":n},{default:r(()=>[y(d(t.getTagLabel(n)),1)]),_:2},1032,["color","background-color","truncation-tooltip"]))),128))]),_:1},8,["rows"])}let h,_,k,T;K=b(V,[["render",B]]),h={name:"EntityToggleModal",components:{ConfirmModalDialog:Y},props:{record:{type:Object,default:()=>null},entity:{type:String,required:!0},entityName:{type:String,default:null},fieldKey:{type:String,default:"enabled"},disabled:{type:Boolean,default:!1},loading:{type:Boolean,default:!1}},emits:["update:modelValue","change","transition","update-record","dismiss"],computed:{_entityName(){return this.entityName||this.entity.toLowerCase()},recordName(){return this.record?v(this.record,this.entity):""},nextState(){return this.record&&!this.record[this.fieldKey]}},methods:{...N(w,["notify"]),toggle(){this.$emit("transition","TOGGLE");const e=this.record[this.fieldKey];return this.$api.updateRecord(this.entity,this.record.id,{[this.fieldKey]:!e}).then(i=>{const a=i.data?i.data[this.fieldKey]:e;this.$emit("update-record",this.fieldKey,a),this.$emit("transition","RESOLVE"),this.notify({message:`${this.recordName} ${this._entityName} successfully ${a?"enabled":"disabled"}`,type:"success"})}).catch(i=>{this.$emit("transition","REJECT"),this.notify({message:A(i),type:"danger"})}).finally(()=>{this.dismiss()})},dismiss(){this.$emit("dismiss")}}},_=y("? "),k=p("br",null,null,-1),T=p("br",null,null,-1);function x(e,i,a,$,c,t){const l=o("ConfirmModalDialog");return s(),g(l,{title:`${t.nextState?"Enable":"Disable"} ${t._entityName}`,"entity-name":t._entityName,visible:!!a.record,"proceed-text":`Yes, ${t.nextState?"enable":"disable"} ${t._entityName}`,disabled:a.disabled,"is-loading":a.loading,class:"defaultModal",onOk:t.toggle,onCancel:t.dismiss},{"body-text":r(()=>[y(" Are you sure you want to "+d(t.nextState?"enable":"disable")+" the "+d(t._entityName)+" ",1),p("strong",null,d(t.recordName),1),_,k,T]),_:1},8,["title","entity-name","visible","proceed-text","disabled","is-loading","onOk","onCancel"])}f=b(h,[["render",x]]);const M={name:"EntityToggleBadge",components:{EntityToggleModal:f},inheritAttrs:!1,props:{entity:{type:String,required:!0},entityName:{type:String,default:null},record:{type:Object,required:!0},fieldKey:{type:String,default:"enabled"},disabled:{type:Boolean,default:!1},"onUpdate:modelValue":{type:Function,default:null},onChange:{type:Function,default:null}},emits:["update:modelValue","change","transition","update-record"],data(){return{modalVisible:!1}},computed:{...F(q,["workspace"]),state(){return this.record[this.fieldKey]}},methods:{...N(w,["notify"]),badgeClass(e){return["entity-toggle-badge",this.state?"badge-enabled":"badge-disabled",{clickable:e}]},showModal(){this.modalVisible=!0}}};function L(e,i,a,$,c,t){const l=o("EntityToggleModal"),m=o("KBadge"),n=o("RbacValidate");return s(),g(n,{workspace:e.workspace,restricted:[{path:`/${a.entity}/${a.record?a.record.id:""}`,actions:["update"]}]},{default:r(({isAllowed:C})=>[E(m,{class:U(t.badgeClass(C)),onClick:(...u)=>C&&t.showModal()},{default:r(()=>[y(d(t.state?"Enabled":"Disabled")+" ",1),E(l,{record:c.modalVisible?a.record:null,entity:a.entity,"entity-name":a.entityName,disabled:a.disabled,loading:a.disabled,onTransition:i[0]||(i[0]=u=>e.$emit("transition",u)),onUpdateRecord:i[1]||(i[1]=(u,O)=>e.$emit("update-record",u,O)),onDismiss:i[2]||(i[2]=()=>c.modalVisible=!1)},null,8,["record","entity","entity-name","disabled","loading"])]),_:2},1032,["class","onClick"])]),_:1},8,["workspace","restricted"])}S=b(M,[["render",L]])});export{K as E,z as __tla,S as a,f as b};
