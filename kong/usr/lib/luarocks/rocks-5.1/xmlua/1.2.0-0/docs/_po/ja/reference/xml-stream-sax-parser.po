msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: xmlua.XMLStreamSAXParser\n"
"---"
msgstr ""

msgid "# `xmlua.XMLStreamSAXParser` class"
msgstr "# `xmlua.XMLStreamSAXParser` クラス"

msgid "## Summary"
msgstr "## 概要"

msgid "It's a class for parsing a XML with SAX(Simple API for XML)."
msgstr "このクラスは、SAX(Simple API for XML)を使ってXMLをパースするクラスです。"

msgid ""
"`XMLStreamSAXParser` is different from `XMLSAXParser`, `XMLStreamSAXParser` ca"
"n parse even if there are a number of root elements in the same file."
msgstr "`XMLSAXParser`と異なるのは、`XMLStreamSAXParser`は、１つのファイルにに複数のルート要素があってもパースできることです。"

msgid ""
"You can register your callback method which call when occured events below as "
"with `XMLSAXParser`."
msgstr "`XMLSAXParser`と同じように、以下のイベント発生時に呼び出されるコールバックメソッドを登録できます。"

msgid "Call back event list:"
msgstr "コールバックイベント一覧："

msgid "  * [`start_document`][xml-sax-parser-start-document]"
msgstr ""

msgid "  * [`end_document`][xml-sax-parser-end-document]"
msgstr ""

msgid "  * [`element_declaration`][xml-sax-parser-element-declaration]"
msgstr ""

msgid "  * [`attribute_declaration`][xml-sax-parser-attribute-declaration]"
msgstr ""

msgid "  * [`notation_declaration`][xml-sax-parser-notation-declaration]"
msgstr ""

msgid ""
"  * [`unparsed_entity_declaration`][xml-sax-parser-unparsed-entity-declaration"
"]"
msgstr ""

msgid "  * [`entity_declaration`][xml-sax-parser-entity-declaration]"
msgstr ""

msgid "  * [`internal_subset`][xml-sax-parser-internal-subset]"
msgstr ""

msgid "  * [`external_subset`][xml-sax-parser-external-subset]"
msgstr ""

msgid "  * [`reference`][xml-sax-parser-reference]"
msgstr ""

msgid "  * [`processing_instruction`][xml-sax-parser-processing-instruction]"
msgstr ""

msgid "  * [`cdata_block`][xml-sax-parser-cdata-block]"
msgstr ""

msgid "  * [`ignorable_whitespace`][xml-sax-parser-ignorable-whitespace]"
msgstr ""

msgid "  * [`comment`][xml-sax-parser-comment]"
msgstr ""

msgid "  * [`start_element`][xml-sax-parser-start-element]"
msgstr ""

msgid "  * [`end_element`][xml-sax-parser-end-element]"
msgstr ""

msgid "  * [`text`][xml-sax-parser-text]"
msgstr ""

msgid "  * [`warning`][xml-sax-parser-warning]"
msgstr ""

msgid "  * [`error`][xml-sax-parser-error]"
msgstr ""

msgid ""
"How to register your callback methods are after add your callback methods to `"
"listener`(`listener` is Lua's table), you give `listener` to `XMLStreamSAXPars"
"er` as below."
msgstr ""
"コールバックメソッドの登録方法は、以下のように`listener`(`listener`はLuaのテーブルです。)にコールバックメソッドを追加して、`XML"
"StreamSAXParser`の引数に与えます。"

msgid ""
"```lua\n"
"local listener = {}\n"
"function listener:start_element(local_name,\n"
"                                prefix,\n"
"                                uri,\n"
"                                namespaces,\n"
"  -- You want to execute code\n"
"end\n"
"local parser = xmlua.XMLStreamSAXParser.new(listener)\n"
"local parse_succeeded = parser:parse(xml)\n"
"```"
msgstr ""

msgid "## Class methods"
msgstr "## クラスメソッド"

msgid "### `xmlua.XMLStreamSAXParser.new(listener) -> XMLStreamSAXParser` {#new}"
msgstr ""

msgid "`listener`: The table that registered callback methods."
msgstr "`listener`: コールバックメソッドを登録したテーブル"

msgid "It makes `XMLStreamSAXParser` object."
msgstr "`XMLStreamSAXParser`オブジェクトを作成します。"

msgid "You can make object of `xmlua.XMLStreamSAXParser` class as below example."
msgstr "以下のように`xmlua.XMLStreamSAXParser`クラスのオブジェクトを作成できます。"

msgid "Example:"
msgstr "例："

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")"
msgstr ""

msgid ""
"local listener = {\n"
"  elements = {},\n"
"  errors = {},\n"
"}\n"
"function listener:start_element(local_name, ...)\n"
"  -- You want to execute code\n"
"end\n"
"function listener:error(error)\n"
"  -- You want to execute code\n"
"end\n"
"local parser = xmlua.XMLStreamSAXParser.new(listener)\n"
"```"
msgstr ""
"local listener = {\n"
"  elements = {},\n"
"  errors = {},\n"
"}\n"
"function listener:start_element(local_name, ...)\n"
"  -- 実行したいコード\n"
"end\n"
"function listener:error(error)\n"
"  -- 実行したいコード\n"
"end\n"
"local parser = xmlua.XMLStreamSAXParser.new(listener)\n"
"```"

msgid "## Instance methods"
msgstr "## インスタンスメソッド"

msgid "### `parse(xml) -> boolean` {#parse}"
msgstr ""

msgid "`xml`: XML string to be parsed."
msgstr "`xml`: パース対象のXML文字列"

msgid ""
"It parses the given XML.\n"
"If XML parsing is succeed, this method returns true. If XML parsing is failed,"
" this method returns false."
msgstr "与えられたXMLをパースします。XMLのパースが成功した場合は、このメソッドはtrueを返します。XMLのパースに失敗した場合は、falseを返します。"

msgid ""
"-- XML to be parsed\n"
"  local xml = [[\n"
"<root/>\n"
"<root/>\n"
"<root/>\n"
"]]"
msgstr ""

msgid ""
"-- If you want to parse text in a file,\n"
"-- you need to read file content by yourself."
msgstr ""
"-- ファイル内のテキストをパースしたい場合は\n"
"-- 自分でファイルの内容を読み込む必要があります。"

msgid "-- local xml = io.open(\"example.xml\"):read(\"*all\")"
msgstr ""

msgid ""
"-- register your callback method\n"
"local listener = {\n"
"  elements = {},\n"
"  errors = {},\n"
"}\n"
"function listener:start_element(local_name, ...)\n"
"  table.insert(self.elements, local_name)\n"
"end\n"
"function listener:error(error)\n"
"  table.insert(self.errors, error.message)\n"
"end"
msgstr ""

msgid ""
"-- Parses XML with SAX\n"
"local parser = xmlua.XMLStreamSAXParser.new(listener)\n"
"local parse_succeeded = parser:parse(xml)\n"
"f not success then\n"
"  print(\"Failed to parse XML with SAX\")\n"
"  os.exit(1)\n"
"end\n"
"```"
msgstr ""
"-- SAXを使ってXMLをパースする。\n"
"local parser = xmlua.XMLStreamSAXParser.new(listener)\n"
"local parse_succeeded = parser:parse(xml)\n"
"f not success then\n"
"  print(\"Failed to parse XML with SAX\")\n"
"  os.exit(1)\n"
"end\n"
"```"

msgid "### `finish() -> boolean` {#finish}"
msgstr ""

msgid "It finishes parse XML with SAX."
msgstr "SAXを使ったXMLのパースを終了します。"

msgid "If you started parse with [`parse`][parse], you should call this method."
msgstr "[`parse`][parse]を使ってパースを開始した場合は、パース完了後にこのメソッドを呼ぶ必要があります。"

msgid ""
"If you don't call this method, [`end_document`][xml-sax-parser-end-document] e"
"vent may not be occurred for the last document."
msgstr ""
"このメソッドを呼ばないと、最後のドキュメント用の[`end_document`][xml-sax-parser-end-document]イベントは発生しな"
"いかもしれません。"

msgid ""
"[xml-sax-parser-start-document]:xml-sax-parser.html#start-document\n"
"[xml-sax-parser-end-document]:xml-sax-parser.html#end-document\n"
"[xml-sax-parser-element-declaration]:xml-sax-parser.html#element-declaration\n"
"[xml-sax-parser-attribute-declaration]:xml-sax-parser.html#attribute-declarati"
"on\n"
"[xml-sax-parser-notation-declaration]:xml-sax-parser.html#notation-declaration"
"\n"
"[xml-sax-parser-unparsed-entity-declaration]:xml-sax-parser.html#unparsed-enti"
"ty-declaration\n"
"[xml-sax-parser-entity-declaration]:xml-sax-parser.html#entity-declaration\n"
"[xml-sax-parser-internal-subset]:xml-sax-parser.html#internal-subset\n"
"[xml-sax-parser-external-subset]:xml-sax-parser.html#external-subset\n"
"[xml-sax-parser-reference]:xml-sax-parser.html#reference\n"
"[xml-sax-parser-processing-instruction]:xml-sax-parser.html#processing-instruc"
"tion\n"
"[xml-sax-parser-cdata-block]:xml-sax-parser.html#cdata-block\n"
"[xml-sax-parser-ignorable-whitespace]:xml-sax-parser.html#ignorable-whitespace"
"\n"
"[xml-sax-parser-comment]:xml-sax-parser.html#comment\n"
"[xml-sax-parser-start-element]:xml-sax-parser.html#start-element\n"
"[xml-sax-parser-end-element]:xml-sax-parser.html#end-element\n"
"[xml-sax-parser-text]:xml-sax-parser.html#text\n"
"[xml-sax-parser-warning]:xml-sax-parser.html#warning\n"
"[xml-sax-parser-error]:xml-sax-parser.html#error"
msgstr ""

msgid "[parse]:#parse"
msgstr ""
