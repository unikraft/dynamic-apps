msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: Tutorial\n"
"---"
msgstr ""
"---\n"
"title: チュートリアル\n"
"---"

msgid "# Tutorial"
msgstr "# チュートリアル"

msgid ""
"This document describes how to use XMLua step by step. If you don't install XM"
"Lua yet, [install][install] XMLua before you read this document."
msgstr ""
"このドキュメントは、XMLuaの使い方を段階的に説明しています。まだ、XMLuaをインストールしていない場合は、このドキュメントを読む前にXMLuaを[イン"
"ストール][install]してください。"

msgid "## Parse a document {#parse-document}"
msgstr "## ドキュメントのパース {#parse-document}"

msgid ""
"You need to parse document at first to use XMLua. XMLua supports HTML document"
" and XML document."
msgstr "XMLuaを使うために最初にドキュメントのパースをします。XMLuaはHTMLドキュメントとXMLドキュメントをサポートしています。"

msgid "You can use [`xmlua.HTML.parse`][html-parse] to parse HTML."
msgstr "HTMLをパースするには、[`xmlua.HTML.parse`][html-parse]を使います。"

msgid "Example:"
msgstr "例："

msgid ""
"```lua\n"
"-- Requires \"xmlua\" module\n"
"local xmlua = require(\"xmlua\")"
msgstr ""
"```lua\n"
"-- \"xmlua\"モジュールの読み込み\n"
"local xmlua = require(\"xmlua\")"

msgid ""
"local html = [[\n"
"<html>\n"
"  <head>\n"
"    <title>Hello</title>\n"
"  </head>\n"
"  <body>\n"
"    <p>World</p>\n"
"  </body>\n"
"</html>\n"
"]]"
msgstr ""

msgid ""
"-- Parses HTML\n"
"local document = xmlua.HTML.parse(html)"
msgstr ""
"-- HTMLをパース\n"
"local document = xmlua.HTML.parse(html)"

msgid ""
"-- Serializes as HTML\n"
"print(document:to_html())\n"
"-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w"
"3.org/TR/REC-html40/loose.dtd\">\n"
"-- <html>\n"
"--   <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n"
"--     <title>Hello</title>\n"
"--   </head>\n"
"--   <body>\n"
"--     <p>World</p>\n"
"--   </body>\n"
"-- </html>"
msgstr ""
"-- HTMLへシリアライズ\n"
"print(document:to_html())\n"
"-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w"
"3.org/TR/REC-html40/loose.dtd\">\n"
"-- <html>\n"
"--   <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n"
"--     <title>Hello</title>\n"
"--   </head>\n"
"--   <body>\n"
"--     <p>World</p>\n"
"--   </body>\n"
"-- </html>"

msgid "```"
msgstr ""

msgid "You can use [`xmlua.XML.parse`][xml-parse] to parse XML."
msgstr "XMLをパースするには、[`xmlua.XML.parse`][xml-parse]を使います。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <sub>text1</sub>\n"
"  <sub>text2</sub>\n"
"  <sub>text3</sub>\n"
"</root>\n"
"]]"
msgstr ""

msgid ""
"-- Parses XML\n"
"local document = xmlua.XML.parse(xml)"
msgstr ""
"-- XMLをパース\n"
"local document = xmlua.XML.parse(xml)"

msgid ""
"-- Serializes as XML\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub>text1</sub>\n"
"--   <sub>text2</sub>\n"
"--   <sub>text3</sub>\n"
"-- </root>"
msgstr ""
"-- XMLへシリアライズ\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub>text1</sub>\n"
"--   <sub>text2</sub>\n"
"--   <sub>text3</sub>\n"
"-- </root>"

msgid ""
"You must pass HTML or XML as `string`. If you want to parse HTML or XML in a f"
"ile, you need to read it by yourself."
msgstr ""
"パースするHTMLまたは、XMLは`string`でなければなりません。ファイル内のHTMLやXMLをパースしたい場合は、自分でファイルの内容を読み込む必要"
"があります。"

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")"
msgstr ""

msgid ""
"local xml_file = io.open(\"example.xml\")\n"
"local xml = xml_file:read(\"*all\")\n"
"xml_file:close()"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"```"
msgstr ""

msgid ""
"`xmlua.HTML.parse` and `xmlua.XML.parse` may fail. For example, they fail with"
" invalid document. If they fail, they raises an error."
msgstr ""
"`xmlua.HTML.parse`や`xmlua.XML.parse`は、失敗することがあります。例えば、不正なドキュメントを使った場合に失敗します。`x"
"mlua.HTML.parse`や`xmlua.XML.parse`が失敗した場合は、エラーが発生します。"

msgid ""
"If you need to assume that document may be invalid, you need to handle error w"
"ith `pcall`."
msgstr "不正なドキュメントである可能性がある場合は、`pcall`を使ってエラーを処理する必要があります。"

msgid "local invalid_xml = \"<root>\""
msgstr ""

msgid ""
"-- Parses invalid XML\n"
"local success, document = pcall(xmlua.XML.parse, invalid_xml)"
msgstr ""
"-- 不正なXMLをパース\n"
"local success, document = pcall(xmlua.XML.parse, invalid_xml)"

msgid ""
"if success then\n"
"  print(\"Succeeded to parse XML\")\n"
"else\n"
"  -- If pcall returns not success, the second return value is error\n"
"  -- message not document.\n"
"  local message = document\n"
"  print(\"Failed to parse XML: \" .. message)\n"
"  -- -> Failed to parse XML: ./xmlua/xml.lua:15: Premature end of data in tag "
"root line 1\n"
"end\n"
"```"
msgstr ""
"if success then\n"
"  print(\"Succeeded to parse XML\")\n"
"else\n"
"  -- pcallが成功を返さない場合、パースされたドキュメントではなく\n"
"  -- エラーメッセージになります。\n"
"  local err = document\n"
"  print(\"Failed to parse XML: \" .. err.message)\n"
"  -- -> Failed to parse XML: ./xmlua/xml.lua:15: Premature end of data in tag "
"root line 1\n"
"end\n"
"```"

msgid ""
"Both parsed HTML and parsed XML are [`xmlua.Document`][document] object in XML"
"ua. You can handle both of them in the same way."
msgstr "パースしたHTML、パースしたXMLともにXMLuaの[`xmlua.Document`][document]オブジェクトとなり、同じ方法で操作できます。"

msgid "## Search elements {#search-element}"
msgstr "## 要素の検索 {#search-element}"

msgid ""
"You can use [XPath][xpath] to search elements. You can use [`xmlua.Searchable:"
"search`][searchable-search] method for it."
msgstr ""
"[XPath][xpath]を使って要素の検索ができます。[`xmlua.Searchable:search`][searchable-search]メソッ"
"ドを使って要素の検索ができます。"

msgid "[`xmlua.Document`][document] can use the method."
msgstr ""
"[`xmlua.Document`][document]は[`xmlua.Searchable:search`][searchable-search]メソッ"
"ドを使えます。"

msgid ""
"The method returns a [`xmlua.NodeSet`][node-set] object. It's a normal array w"
"ith convenience methods. You can use normal array features such as `#` and `[]"
"`."
msgstr ""
"このメソッドは、[`xmlua.NodeSet`][node-set]オブジェクトを返します。[`xmlua.NodeSet`][node-set]オブジェ"
"クトは、通常の配列がもつ便利なメソッドが使えます。`#`や`[]`といった、機能を使うこともできます。"

msgid "local document = xmlua.XML.parse(xml)"
msgstr ""

msgid ""
"-- Searches all <sub> elements under the <root> element\n"
"local all_subs = document:search(\"/root/sub\")"
msgstr ""
"-- <root>要素配下の全ての<sub>要素を検索します\n"
"local all_subs = document:search(\"/root/sub\")"

msgid ""
"-- You can use \"#\" for getting the number of matched nodes\n"
"print(#all_subs) -- -> 3"
msgstr ""
"-- \"#\"を使ってマッチしたノードの数を出力できます。\n"
"print(#all_subs) -- -> 3"

msgid ""
"-- You can access the N-th node by \"[]\".\n"
"print(all_subs[1]:to_xml()) -- -> <sub1>text1</sub1>\n"
"print(all_subs[2]:to_xml()) -- -> <sub2>text2</sub2>\n"
"print(all_subs[3]:to_xml()) -- -> <sub3>text3</sub3>\n"
"```"
msgstr ""
"-- \"[]\"を使って、N番目のノードにアクセスできます。\n"
"print(all_subs[1]:to_xml()) -- -> <sub1>text1</sub1>\n"
"print(all_subs[2]:to_xml()) -- -> <sub2>text2</sub2>\n"
"print(all_subs[3]:to_xml()) -- -> <sub3>text3</sub3>\n"
"```"

msgid ""
"[`xmlua.NodeSet`][node-set] object can also use `search` method. It means that"
" you can search against searched result."
msgstr "[`xmlua.NodeSet`][node-set]オブジェクトも`search`メソッドを使えます。つまり、検索結果に対して検索をすることができます。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <sub class=\"A\"><subsub1/></sub>\n"
"  <sub class=\"B\"><subsub2/></sub>\n"
"  <sub class=\"A\"><subsub3/></sub>\n"
"</root>\n"
"]]"
msgstr ""

msgid ""
"-- Searches all <sub class=\"A\"> elements\n"
"local class_a_subs = document:search(\"//sub[@class='A']\")"
msgstr ""
"-- 全ての<sub class=\"A\">要素を検索\n"
"local class_a_subs = document:search(\"//sub[@class='A']\")"

msgid ""
"-- Searches all elements under <sub class=\"A\"> elements\n"
"local subsubs_in_class_a = class_a_subs:search(\"*\")"
msgstr ""
"-- <sub class=\"a\">配下の全ての要素を検索\n"
"local subsubs_in_class_a = class_a_subs:search(\"*\")"

msgid "print(#subsubs_in_class_a) -- -> 2"
msgstr ""

msgid ""
"-- It's /root/sub[@class=\"A\"]/subsub1\n"
"print(subsubs_in_class_a[1]:to_xml())\n"
"-- <subsub1/>"
msgstr ""
"-- /root/sub[@class=\"A\"]/subsub1\n"
"print(subsubs_in_class_a[1]:to_xml())\n"
"-- <subsub1/>"

msgid ""
"-- It's /root/sub[@class=\"A\"]/subsub3\n"
"print(subsubs_in_class_a[2]:to_xml())\n"
"-- <subsub3/>\n"
"```"
msgstr ""
"-- /root/sub[@class=\"A\"]/subsub3\n"
"print(subsubs_in_class_a[2]:to_xml())\n"
"-- <subsub3/>\n"
"```"

msgid ""
"The `search` method is [`xmlua.NodeSet:search`][node-set-search]. It's not [`x"
"mlua.Searchable:search`][searchable-search] method."
msgstr ""
"`search`メソッドは、[`xmlua.NodeSet:search`][node-set-search]メソッドです。[`xmlua.Searchab"
"le:search`][searchable-search]メソッドではありません。"

msgid ""
"You can also use [`xmlua.Searchable:search`][searchable-search] method against"
" element."
msgstr "[`xmlua.Searchable:search`][searchable-search]メソッドは、要素に対しても使えます。"

msgid ""
"-- Searches the <root> element\n"
"local roots = document:search(\"/root\")\n"
"local root = roots[1]"
msgstr ""
"--<root>要素の検索\n"
"local roots = document:search(\"/root\")\n"
"local root = roots[1]"

msgid ""
"-- Searches all <sub> elements under the <root> element\n"
"local all_subs = root:search(\"sub\")"
msgstr ""
"-- <root>要素配下の全ての<sub>要素を検索します\n"
"local all_subs = root:search(\"sub\")"

msgid ""
"`search` may fail. For example. it fails with invalid XPath. If it fails, it r"
"aises an error."
msgstr ""
"`search`メソッドは、失敗することがあります。例えば、不正なXPathを使った場合に失敗します。`search`メソッドが失敗した場合は、エラーが発生"
"します。"

msgid ""
"If you need to assume that XPath may be invalid, you need to handle error with"
" `pcall`."
msgstr "XPathが不正である可能性がある場合は、`pcall`を使ってエラーを処理する必要があります。"

msgid "local xml = \"<root/>\""
msgstr ""

msgid ""
"local invalid_xpath = \"...\"\n"
"local success, node_set = pcall(function()\n"
"  return document:search(invalid_xpath)\n"
"end)"
msgstr ""

msgid ""
"if success then\n"
"  print(\"Succeeded to search by XPath\")\n"
"else\n"
"  -- If pcall returns not success, the second return value is error\n"
"  -- message not node set.\n"
"  local message = node_set\n"
"  print(\"Failed to search by XPath: \" .. message)\n"
"  -- -> Failed to search by XPath: ./xmlua/searchable.lua:57: Invalid expressi"
"on\n"
"end\n"
"```"
msgstr ""
"if success then\n"
"  print(\"Succeeded to search by XPath\")\n"
"else\n"
"  -- pcallが成功を返さない場合、ノードセットではなく\n"
"  -- エラーメッセージになります。\n"
"  local message = node_set\n"
"  print(\"Failed to search by XPath: \" .. message)\n"
"  -- -> Failed to search by XPath: ./xmlua/searchable.lua:57: Invalid expressi"
"on\n"
"end\n"
"```"

msgid "## Get attribute value {#get-attribute-value}"
msgstr "## 属性値の取得 {#get-attribute-value}"

msgid ""
"You need to get [`xmlua.Element`][element] object to get attribute value in el"
"ement."
msgstr "要素の属性値を取得するには、[`xmlua.Element`][element]オブジェクトを取得する必要があります。"

msgid ""
"Normally, you can get `xmlua.Element` by [`xmlua.Document:root`][document-root"
"] or [`xmlua.Searchable:search`][searchable-search]."
msgstr ""
"通常、`xmlua.Element`は[`xmlua.Document:root`][document-root]または、[`xmlua.Searchabl"
"e:search`][searchable-search]を使って取得できます。"

msgid "`xmlua.Document:root` returns the root element of the document."
msgstr "`xmlua.Document:root`は、ドキュメントのルート要素を返します。"

msgid ""
"`xmlua.Searchable:search` returns elements as [`xmlua.NodeSet`][node-set]. You"
" can get the first element by `node_set[1]`."
msgstr ""
"`xmlua.Searchable:search`は、[`xmlua.NodeSet`][node-set]として、複数の要素を返します。`node_set"
"[1]`とすることで、先頭の要素を取得できます。"

msgid "local document = xmlua.XML.parse(\"<root class='A'/>\")"
msgstr ""

msgid ""
"-- Gets the root element: <root>\n"
"local root = document:root()"
msgstr ""
"-- ルート要素の取得\n"
"local root = document:root()"

msgid ""
"-- Gets the root element: <root>\n"
"local root = document:search(\"/root\")[1]\n"
"```"
msgstr ""
"-- ルート要素の取得\n"
"local root = document:search(\"/root\")[1]\n"
"```"

msgid "You can get attribute value by one of the followings:"
msgstr "以下のいずれかを使って、属性値を取得できます。"

msgid "  * `element.attribute_name`: Dot syntax."
msgstr "  * `element.attribute_name`: ドット構文"

msgid "  * `element[\"attribute_name\"]`: `[]` syntax."
msgstr "  * `element[\"attribute_name\"]`: `[]`構文"

msgid "  * `element:get_attribute(\"attribute_name\")`: Method syntax."
msgstr "  * `element:get_attribute(\"attribute_name\")`: メソッド構文"

msgid "Normally, dot syntax and `[]` syntax are recommended."
msgstr "通常は、ドットか`[]`を用いた構文をおすすめします。"

msgid ""
"If attribute name is valid Lua identifier such as \"`class`\", dot syntax is rec"
"ommended."
msgstr "\"`class`\"のように属性名がLuaの識別子である場合は、ドットを用いた構文をおすすめします。"

msgid ""
"If attribute name isn't valid Lua identifier such as \"`xml:lang`\", `[]` syntax"
" is recommended."
msgstr "\"`xml:lang`\"のように属性名がLuaの識別子では無い場合は、`[]`を用いた構文をおすすめします。"

msgid ""
"If attribute name conflicts with method names available in `xmlua.Element` suc"
"h as `search` and `parent`, method syntax is recommended."
msgstr "`search`や`parent`のように`xmlua.Element`で使えるメソッド名と衝突している場合は、メソッドを用いた取得をおすすめします。"

msgid ""
"local document = xmlua.XML.parse(\"<root class='A'/>\")\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- Uses dot syntax to get attribute value\n"
"print(root.class)\n"
"-- -> A"
msgstr ""
"-- ドットを使った属性値の取得\n"
"print(root.class)\n"
"-- -> A"

msgid ""
"-- Uses [] syntax to get attribute value\n"
"print(root[\"class\"])\n"
"-- -> A"
msgstr ""
"-- []を使った属性値の取得\n"
"print(root[\"class\"])\n"
"-- -> A"

msgid ""
"-- Uses get_attribute method to get attribute value\n"
"print(root:get_attribute(\"class\"))\n"
"-- -> A\n"
"```"
msgstr ""
"-- get_attributeメソッドを使った属性値の取得\n"
"print(root:get_attribute(\"class\"))\n"
"-- -> A\n"
"```"

msgid "If the specified attribute doesn't exist, `nil` is returned."
msgstr "指定した属性が存在しない場合は、`nil`を返します。"

msgid ""
"-- Returns nil for nonexistent attribute name\n"
"print(root.nonexistent)\n"
"-- -> nil\n"
"```"
msgstr ""
"-- 属性名が存在しないためnilが返ります。\n"
"print(root.nonexistent)\n"
"-- -> nil\n"
"```"

msgid ""
"If the attribute what you find has namespace, you can use `\"namespace-prefix:l"
"ocal-name\"` syntax attribute name such as `\"xml:lang\"`. In this case, you can'"
"t use dot syntax because `\":\"` is included in attribute name."
msgstr ""
"属性が名前空間を持っている場合、`\"xml:lang\"`のように`\"namespace-prefix:local-name\"`構文を用いた属性名を使うことが"
"できます。このケースでは、`\":\"`が属性名に含まれているため、ドットを用いた構文は使えません。"

msgid ""
"If the specified namespace prefix doesn't exist, the whole specified attribute"
" name is treated as attribute name instead of namespace URI and local name."
msgstr "指定した名前空間プレフィックスが存在しない場合は、指定した名前空間プレフィックス付きの属性名は、名前空間URIやローカル名ではなく属性名として扱われます。"

msgid ""
"local xml = [[\n"
"<root xmlns:example=\"http://example.com/\"\n"
"      example:attribute=\"value-example\"\n"
"      attribute=\"value\"\n"
"      nonexistent-namespace:attribute=\"value-nonexistent-namespace\"/>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- With namespace prefix\n"
"print(root[\"example:attribute\"])\n"
"-- -> value-example"
msgstr ""
"-- 名前空間プレフィックスつき\n"
"print(root[\"example:attribute\"])\n"
"-- -> value-example"

msgid ""
"-- Without namespace prefix\n"
"print(root[\"attribute\"])\n"
"-- -> value"
msgstr ""
"-- 名前空間プレフィックスなし\n"
"print(root[\"attribute\"])\n"
"-- -> value"

msgid ""
"-- With nonexistent namespace prefix\n"
"print(root[\"nonexistent-namespace:attribute\"])\n"
"-- -> value-nonexistent-namespace\n"
"```"
msgstr ""
"-- 存在しない名前空間プレフィックスつき\n"
"print(root[\"nonexistent-namespace:attribute\"])\n"
"-- -> value-nonexistent-namespace\n"
"```"

msgid "## Get text {#get-text}"
msgstr ""

msgid "TODO."
msgstr ""

msgid ""
"See [`xmlua.Element:text`][element-text] and [`xmlua.NodeSet:text`][node-set-t"
"ext] for now."
msgstr ""
"今のところは[`xmlua.Element:text`][element-text]と[`xmlua.NodeSet:text`][node-set-tex"
"t]を参照してください。"

msgid "## Get elements {#get-elements}"
msgstr "## 要素の取得 {#get-elements}"

msgid ""
"You can get the sibling elements by [`xmlua.Element:previous`][element-previou"
"s] and [`xmlua.Element:next`][element-next]."
msgstr ""
"兄弟要素を取得するには[`xmlua.Element:previous`][element-previous]と[`xmlua.Element:next`]"
"[element-next]を使います。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <sub1/>\n"
"  <sub2/>\n"
"  <sub3/>\n"
"</root>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local sub2 = document:search(\"/root/sub2\")[1]"
msgstr ""

msgid ""
"-- Gets the previous sibling element of <sub2>\n"
"print(sub2:previous():to_xml())\n"
"-- <sub1/>"
msgstr ""
"-- <sub2>の1つ前の兄弟要素を取得\n"
"print(sub2:previous():to_xml())\n"
"-- <sub1/>"

msgid ""
"-- Gets the next sibling element of <sub2>\n"
"print(sub2:next():to_xml())\n"
"-- <sub3/>\n"
"```"
msgstr ""
"-- <sub2>の1つ後の兄弟要素を取得\n"
"print(sub2:next():to_xml())\n"
"-- <sub3/>\n"
"```"

msgid "If there are no sibling elements, they returns `nil`."
msgstr "兄弟要素がない場合は`nil`を返します。"

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local sub1 = document:search(\"/root/sub1\")[1]\n"
"local sub3 = document:search(\"/root/sub3\")[1]"
msgstr ""

msgid ""
"-- Gets the previous sibling element of <sub1>\n"
"print(sub1:previous())\n"
"-- nil"
msgstr ""
"-- <sub1>の1つ前の兄弟要素を取得\n"
"print(sub1:previous())\n"
"-- nil"

msgid ""
"-- Gets the next sibling element of <sub3>\n"
"print(sub3:next():to_xml())\n"
"-- nil\n"
"```"
msgstr ""
"-- <sub3>の1つ後の兄弟要素を取得\n"
"print(sub3:next():to_xml())\n"
"-- nil\n"
"```"

msgid "You can get the parent element by [`xmlua.Element:parent`][element-parent]."
msgstr "[`xmlua.Element:parent`][element-parent]で親要素を取得できます。"

msgid ""
"-- Gets the parent element of <sub2>\n"
"print(sub2:parent():to_xml())\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"
msgstr ""
"-- <sub2>の親要素を取得\n"
"print(sub2:parent():to_xml())\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"

msgid "If the element is the root element, it returns [`xmlua.Document`][document]."
msgstr "要素がルート要素のときは[`xmlua.Document`][document]を返します。"

msgid ""
"-- Gets the parent of <root>: xmlua.Document\n"
"print(root:parent():to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"
msgstr ""
"-- <root>の親要素を取得：xmlua.Document\n"
"print(root:parent():to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"

msgid ""
"[`xmlua.Document:parent`][document-parent] also exists. It always returns `nil"
"`. It just exist for consistent API."
msgstr ""
"[`xmlua.Document:parent`][document-parent]もあります。このメソッドは常に`nil`を返します。一貫性のあるAPIに"
"するためだけに存在しています。"

msgid ""
"-- Gets the parent of document\n"
"print(document:parent())\n"
"-- nil\n"
"```"
msgstr ""
"-- ドキュメントの親を取得\n"
"print(document:parent())\n"
"-- nil\n"
"```"

msgid "## Serialize as HTML and XML {#serialize}"
msgstr "## HTML・XMLへシリアライズ {#serialize}"

msgid "You can serialize document and element as HTML and XML."
msgstr "ドキュメントと要素をHTML・XMLへシリアライズできます。"

msgid ""
"[`xmlua.Serializable:to_html`][serializable-to-html] serializes target as HTML"
"."
msgstr "[`xmlua.Serializable:to_html`][serializable-to-html]は対象をHTMLにシリアライズします。"

msgid ""
"local document = xmlua.HTML.parse([[\n"
"<html>\n"
"  <head>\n"
"    <title>Hello</title>\n"
"  </head>\n"
"  <body>World</body>\n"
"</html>\n"
"]])"
msgstr ""

msgid ""
"-- Serializes as HTML\n"
"print(document:to_html())\n"
"-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w"
"3.org/TR/REC-html40/loose.dtd\">\n"
"-- <html>\n"
"--   <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n"
"--     <title>Hello</title>\n"
"--   </head>\n"
"--   <body>World</body>\n"
"-- </html>"
msgstr ""
"-- HTMLへシリアライズ\n"
"print(document:to_html())\n"
"-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w"
"3.org/TR/REC-html40/loose.dtd\">\n"
"-- <html>\n"
"--   <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n"
"--     <title>Hello</title>\n"
"--   </head>\n"
"--   <body>\n"
"--     <p>World</p>\n"
"--   </body>\n"
"-- </html>"

msgid ""
"-- Serializes <body> element as HTML\n"
"print(document:search(\"/html/body\")[1]:to_html())\n"
"-- <body>World</body>"
msgstr ""
"-- <body>要素をHTMLへシリアライズ\n"
"print(document:search(\"/html/body\")[1]:to_html())\n"
"-- <body>World</body>"

msgid "[`xmlua.Serializable:to_xml`][serializable-to-xml] serializes target as XML."
msgstr "[`xmlua.Serializable:to_xml`][serializable-to-xml]は対象をXMLにシリアライズします。"

msgid ""
"local document = xmlua.XML.parse([[\n"
"<root>\n"
"  <sub1>text1</sub1>\n"
"  <sub2>text2</sub2>\n"
"  <sub3>text3</sub3>\n"
"</root>\n"
"]])"
msgstr ""

msgid ""
"-- Serializes as XML\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub1>text1</sub1>\n"
"--   <sub2>text2</sub2>\n"
"--   <sub3>text3</sub3>\n"
"-- </root>"
msgstr ""
"-- XMLへシリアライズ\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub>text1</sub>\n"
"--   <sub>text2</sub>\n"
"--   <sub>text3</sub>\n"
"-- </root>"

msgid ""
"-- Serializes <body> element as XML\n"
"print(document:search(\"/root/sub1\")[1]:to_xml())\n"
"-- <sub1>text1</sub1>"
msgstr ""
"-- <body>要素をXMLへシリアライズ\n"
"print(document:search(\"/root/sub1\")[1]:to_xml())\n"
"-- <sub1>text1</sub1>"

msgid ""
"[`xmlua.NodeSet`][node-set] also has [`to_html`][node-set-to-html] and [`to_xm"
"l`][node-set-to-xml]. They just concatenate serialized strings of nodes in the"
" node set. They are useful just for debug."
msgstr ""
"[`xmlua.NodeSet`][node-set]にも[`to_html`][node-set-to-html]と[`to_xml`][node-set"
"-to-xml]があります。これらはノードセット中の各ノードをシリアライズした文字列を単に連結します。デバッグに便利です。"

msgid ""
"```lua\n"
"local document = xmlua.HTML.parse([[\n"
"<html>\n"
"  <head>\n"
"    <title>Hello</title>\n"
"  </head>\n"
"  <body>World</body>\n"
"</html>\n"
"]])"
msgstr ""

msgid ""
"-- All elements under <html> (<head> and <body>)\n"
"local node_set = document:search(\"/html/*\")"
msgstr ""
"-- <html>配下の全ての要素 (<head> and <body>)\n"
"local node_set = document:search(\"/html/*\")"

msgid ""
"-- Serializes all elements as HTML and concatenates serialized HTML\n"
"print(node_set:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head><body>World</body>"
msgstr ""
"-- 全ての要素をHTMLへシリアライズし、シリアライズしたHTMLを結合します。\n"
"print(node_set:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head><body>World</body>"

msgid ""
"-- FYI: <head> serialization\n"
"print(node_set[1]:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head>"
msgstr ""
"-- 参考: <head>要素のシリアライズ\n"
"print(node_set[1]:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head>"

msgid ""
"-- FYI: <body> serialization\n"
"print(node_set[2]:to_html())\n"
"-- <body>World</body>\n"
"```"
msgstr ""
"-- 参考: <body>要素のシリアライズ\n"
"print(node_set[2]:to_html())\n"
"-- <body>World</body>\n"
"```"

msgid ""
"-- All elements under <root> (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")"
msgstr ""
"-- <root>配下の全ての要素 (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")"

msgid ""
"-- Serializes all elements as XML and concatenates serialized XML\n"
"print(node_set:to_xml())\n"
"-- <sub1>text1</sub1><sub2>text2</sub2><sub3>text3</sub3>"
msgstr ""
"-- 全ての要素をXMLへシリアライズし、シリアライズしたXMLを結合します。\n"
"print(node_set:to_xml())\n"
"-- <sub1>text1</sub1><sub2>text2</sub2><sub3>text3</sub3>"

msgid ""
"-- FYI: <sub1> serialization\n"
"print(node_set[1]:to_xml())\n"
"-- <sub1>text1</sub1>"
msgstr ""
"-- 参考: <sub1>要素のシリアライズ\n"
"print(node_set[1]:to_xml())\n"
"-- <sub1>text1</sub1>"

msgid ""
"-- FYI: <sub2> serialization\n"
"print(node_set[2]:to_xml())\n"
"-- <sub2>text2</sub2>"
msgstr ""
"-- 参考: <sub2>要素のシリアライズ\n"
"print(node_set[2]:to_xml())\n"
"-- <sub2>text2</sub2>"

msgid ""
"-- FYI: <sub3> serialization\n"
"print(node_set[3]:to_xml())\n"
"-- <sub3>text3</sub3>\n"
"```"
msgstr ""
"-- 参考: <sub3>要素のシリアライズ\n"
"print(node_set[3]:to_xml())\n"
"-- <sub3>text3</sub3>\n"
"```"

msgid "## Multithread {#multithread}"
msgstr "## マルチスレッド {#multithread}"

msgid "You can use XMLua with multiple threads. But you need more codes to do it."
msgstr "複数のスレッドでXMLuaを使えます。複数のスレッドで使うためのコードを追加する必要があります。"

msgid ""
"You must call [`xmlua.init`][xmlua-init] in the main thread before you create "
"any threads that use XMLua."
msgstr "XMLuaを使うスレッドを作る前に、メインスレッドで[`xmlua.init`][xmlua-init]を呼ばなければいけません。"

msgid ""
"-- You must call xmlua.init in main thread before you create threads\n"
"-- when you use XMLua with multiple threads.\n"
"xmlua.init()"
msgstr ""
"-- 複数のスレッドでXMLuaを使う場合は\n"
"-- スレッドを作る前にメインスレッドでxmlua.initを呼ばないといけません。\n"
"xmlua.init()"

msgid ""
"local thread = require(\"cqueues.thread\")\n"
"-- ...\n"
"```"
msgstr ""

msgid ""
"You can call [`xmlua.cleanup`][xmlua-cleanup] in the main thread after you fin"
"ish all threads that use XMLua and you finish all MXLua use."
msgstr ""
"XMLuaを使っているすべてのスレッドを終了し、XMLuaをもう使わない状態になった後なら、メインスレッドで[`xmlua.cleanup`][xmlua-"
"cleanup]を呼べます。"

msgid "xmlua.init()"
msgstr ""

msgid ""
"local thread = require(\"cqueues.thread\")\n"
"-- ..."
msgstr ""

msgid ""
"-- You can call xmlua.cleanup in main thread to free all resources\n"
"-- used by XMLua. You must ensure that all threads are finished and\n"
"-- all XMLua related objects aren't used anymore.\n"
"xmlua.cleanup()"
msgstr ""
"-- XMLuaが使っているすべてのリソースを開放するために\n"
"-- メインスレッドでxmlua.cleanupを呼べます。\n"
"-- 呼ぶときは、すべてのスレッドを終了して、XMLua関連のオブジェクトを今後\n"
"-- 絶対使わないようにしてください。\n"
"xmlua.cleanup()"

msgid ""
"os.exit()\n"
"```"
msgstr ""

msgid ""
"If you work on GNU/Linux and your LuaJIT isn't linked with pthread, `require(\""
"xmlua\")` isn't thread safe. Here are solutions:"
msgstr ""
"GNU/Linux上でpthreadにリンクしていないLuaJITを動かすときは、`require(\"xmlua\")`はスレッドセーフではありません。解決策"
"は次の通りです。"

msgid "  * Link `libpthread.so.0` by `LD_PRELOAD` environment variable."
msgstr "  * `LD_PRELOAD`環境変数を使って`libpthread.so.0`をリンクする。"

msgid "  * Don't execute `require(\"xmlua\")` at the same time."
msgstr "  * 同時に`require(\"xmlua\")`を実行しない。"

msgid "Here are example command lines to use `LD_PRELOAD`."
msgstr "`LD_PRELOAD`を使うコマンドライン例は次の通りです。"

msgid "Debian GNU/Linux and Ubuntu:"
msgstr "Debian GNU/LinuxとUbuntuの場合："

msgid ""
"```console\n"
"% LD_PRELOAD=/lib/x86_64-linux-gnu/libpthread.so.o luajit XXX.lua\n"
"```"
msgstr ""

msgid "CentOS:"
msgstr "CentOSの場合："

msgid ""
"```console\n"
"% LD_PRELOAD=/lib64/libpthread.so.o luajit XXX.lua\n"
"```"
msgstr ""

msgid ""
"If you use [cqueues][cqueues], you can use connection returned by `cqueues.thr"
"ead.start` to prevent executing `require(\"xmlua\")` at the same time."
msgstr ""
"[cqueues][cqueues]を使っている場合は、同時に`require(\"xmlua\")`を実行するのを防ぐために`cqueues.thread.s"
"tart`が返すコネクションを使えます。"

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")\n"
"xmlua.init()"
msgstr ""

msgid "local thread = require(\"cqueues.thread\")"
msgstr ""

msgid "local n = 10"
msgstr ""

msgid ""
"local workers = {}\n"
"local connections = {}"
msgstr ""

msgid ""
"for i = 1, n do\n"
"  local worker, connection = thread.start(function(connection)"
msgstr ""

msgid ""
"    -- require(\"xmlua\") isn't thread safe\n"
"    local xmlua = require(\"xmlua\")"
msgstr ""
"    -- require(\"xmlua\")はスレッドセーフではない\n"
"    local xmlua = require(\"xmlua\")"

msgid ""
"    -- Notify that require(\"xmlua\") is finished\n"
"    connection:write(\"ready\n"
"\")"
msgstr ""
"    -- require(\"xmlua\")が完了したことを通知\n"
"    connection:write(\"ready\n"
"\")"

msgid ""
"    for job in connection:lines(\"*l\") do\n"
"      -- local html = ...\n"
"      -- local document = xmlua.HTML.parse(html)\n"
"      -- document:search(\"...\")\n"
"    end\n"
"  end)"
msgstr ""

msgid ""
"  -- Wait until require(\"xmlua\") is finished\n"
"  connection:read(\"*l\")"
msgstr ""
"  -- require(\"xmlua\")が終了するまで待つ\n"
"  connection:read(\"*l\")"

msgid ""
"  table.insert(workers, worker)\n"
"  table.insert(connections, connection)\n"
"end"
msgstr ""

msgid "for _, connection in ipairs(connections) do"
msgstr ""

msgid ""
"  -- Put jobs to workers\n"
"  connection:write(\"Job1\n"
"\")\n"
"  connection:write(\"Job2\n"
"\")\n"
"  -- ..."
msgstr ""
"  -- ワーカーにジョブを投入\n"
"  connection:write(\"Job1\n"
"\")\n"
"  connection:write(\"Job2\n"
"\")\n"
"  -- ..."

msgid "end"
msgstr ""

msgid ""
"  -- Finish providing jobs\n"
"  connection:close()"
msgstr ""
"  -- ジョブの投入を終了\n"
"  connection:close()"

msgid ""
"for _, worker in ipairs(workers) do\n"
"  worker:join()\n"
"end"
msgstr ""

msgid ""
"xmlua.cleanup()\n"
"```"
msgstr ""

msgid "## Next step {#next-step}"
msgstr "## 次のステップ {#next-step}"

msgid ""
"Now, you knew all major XMLua features! If you want to understand each feature"
", see [reference manual][reference] for each feature."
msgstr ""
"これでXMLuaのすべての主な機能を学びました！それぞれの機能をより理解したい場合は、各機能の[リファレンスマニュアル][reference]を見てください"
"。"

msgid "[install]:../install/"
msgstr ""

msgid "[html-parse]:../reference/html.html#parse"
msgstr ""

msgid "[xml-parse]:../reference/xml.html#parse"
msgstr ""

msgid "[document]:../reference/document.html"
msgstr ""

msgid "[xpath]:https://www.w3.org/TR/xpath/"
msgstr ""

msgid "[searchable-search]:../reference/searchable.html#search"
msgstr ""

msgid "[node-set]:../reference/node-set.html"
msgstr ""

msgid "[node-set-search]:../reference/node-set.html#search"
msgstr ""

msgid "[element]:../reference/element.html"
msgstr ""

msgid "[document-root]:../reference/document.html#root"
msgstr ""

msgid "[element-text]:../reference/element.html#text"
msgstr ""

msgid "[node-set-text]:../reference/node-set.html#text"
msgstr ""

msgid "[element-previous]:../reference/element.html#previous"
msgstr ""

msgid "[element-next]:../reference/element.html#next"
msgstr ""

msgid "[element-parent]:../reference/element.html#parent"
msgstr ""

msgid "[document-parent]:../reference/document.html#parent"
msgstr ""

msgid "[serializable-to-html]:../reference/serializable.html#to-html"
msgstr ""

msgid "[serializable-to-xml]:../reference/serializable.html#to-xml"
msgstr ""

msgid "[node-set-to-html]:../reference/node-set.html#to-html"
msgstr ""

msgid "[node-set-to-xml]:../reference/node-set.html#to-xml"
msgstr ""

msgid "[xmlua-init]:../reference/xmlua.html#init"
msgstr ""

msgid "[xmlua-cleanup]:../reference/xmlua.html#cleanup"
msgstr ""

msgid "[cqueues]:http://25thandclement.com/~william/projects/cqueues.html"
msgstr ""

msgid "[reference]:../reference/"
msgstr ""
