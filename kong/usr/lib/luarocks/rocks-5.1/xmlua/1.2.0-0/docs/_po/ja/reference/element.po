msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: xmlua.Element\n"
"---"
msgstr ""

msgid "# `xmlua.Element` class"
msgstr "# `xmlua.Element`クラス"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"It's a class for element node. You can get element object by [`xmlua.Document:"
"root`][document-root] and [`xmlua.NodeSet`][node-set]'s `[]`."
msgstr ""
"要素ノードのためのクラスです。[`xmlua.Document:root`][document-root]と[`xmlua.NodeSet`][node-s"
"et]の`[]`を使って、要素オブジェクトを取得することができます。"

msgid "Example:"
msgstr "例："

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")"
msgstr ""

msgid "local document = xmlua.XML.parse(\"<root><sub/></root>\")"
msgstr ""

msgid ""
"document:root() -- -> xmlua.Element\n"
"document:search(\"/root\")[1] -- -> xmlua.Element\n"
"```"
msgstr ""

msgid "It has methods of the following modules:"
msgstr "このクラスのオブジェクトは以下のモジュールのメソッドを使えます。"

msgid ""
"  * [`xmlua.Serializable`][serializable]: Provides HTML and XML serialization "
"related methods."
msgstr "  * [`xmlua.Serializable`][serializable]: HTML・XMLへのシリアライズ関連のメソッドを提供します。"

msgid "  * [`xmlua.Searchable`][searchable]: Provides node search related methods."
msgstr "  * [`xmlua.Searchable`][searchable]: ノード検索関連のメソッドを提供します。"

msgid "It means that you can use methods in the modules."
msgstr "つまり、このクラスのオブジェクトで上述のモジュールのメソッドを使えます。"

msgid "## Instance methods"
msgstr "## インスタンスメソッド"

msgid "### `name() -> string` {#name}"
msgstr ""

msgid "It returns name of the element as `string`."
msgstr "要素の名前を`string`で返します。"

msgid ""
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- <root>'s name is \"root\"\n"
"print(root:name()) -- -> root\n"
"```"
msgstr ""
"-- <root>要素の名前は\"root\"\n"
"print(root:name()) -- -> root\n"
"```"

msgid "### `content() -> string` {#content}"
msgstr ""

msgid "It returns content of the element as `string`."
msgstr "この要素の内容を`string`で返します。"

msgid "The content is all texts under the element."
msgstr "内容とはこの要素以下のすべてのテキストです。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  text1\n"
"  <child1>child1 text</child1>\n"
"  text2\n"
"  <child2>child2 text</child2>\n"
"  text3\n"
"</root>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- The <root>'s content. Spaces are also the <root>'s content.\n"
"print(root:content())\n"
"--\n"
"--  text1\n"
"--  child1 text\n"
"--  text2\n"
"--  child2 text\n"
"--  text3\n"
"--\n"
"```"
msgstr ""
"-- <root>要素の内容。空白も含めて<root>要素の内容。\n"
"print(root:content())\n"
"--\n"
"--  text1\n"
"--  child1 text\n"
"--  text2\n"
"--  child2 text\n"
"--  text3\n"
"--\n"
"```"

msgid "### `text() -> string` {#text}"
msgstr ""

msgid "It's an alias of [`content`](#content)."
msgstr "[`content`](#content)のエイリアス。"

msgid "### `path() -> string` {#path}"
msgstr ""

msgid "It returns XPath of the element as `string`."
msgstr "要素のXPathを`string`で返します。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <child1>child1 text</child1>\n"
"  <child2>child2 text</child2>\n"
"</root>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"-- Gets all child elements of <root> (<child1> and <child2>)\n"
"local children = root:children()"
msgstr ""
"local xml = [[\n"
"<root>\n"
"  <child1>child1 text</child1>\n"
"  <child2>child2 text</child2>\n"
"</root>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"-- <root>の全ての子要素を取得します。 (<child1> と <child2>)\n"
"local children = root:children()"

msgid ""
"-- Returns XPath of <root>'s all child elements.\n"
"for i = 1, #children do\n"
"  print(children[i]:path())\n"
"  --/root/child1\n"
"  --/root/child2\n"
"end\n"
"```"
msgstr ""
"-- <root>の全ての子要素のXPathを取得します。\n"
"for i = 1, #children do\n"
"  print(children[i]:path())\n"
"  --/root/child1\n"
"  --/root/child2\n"
"end\n"
"```"

msgid "### `append_element(name, attributes=nil) -> xmlua.Element` {#append-element}"
msgstr ""

msgid ""
"Make an element with the specified name and append it the last child element o"
"f `xmlua.Element` of the receiver.\n"
"If you specify attributes, it set the attribute to the appended element.\n"
"It returns appended element.\n"
"If `name` is `namespace_prefix:local_name`, it set the namespace to the append"
" element."
msgstr ""
"指定された名前の要素を作成し、それをレシーバーの`xmlua.Element`の最後の子要素にします。属性が指定された場合は、追加する要素に属性を設定します"
"。このメソッドは、追加した要素を返します。`name`が`namespace_prefix:local_name`の場合は追加した要素に名前空間を設定します"
"。"

msgid ""
"--append node.\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_element(\"child\")\n"
"print(child:to_xml())\n"
"-- <child/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child/>\n"
"-- </root>"
msgstr ""
"--要素の追加\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_element(\"child\")\n"
"print(child:to_xml())\n"
"-- <child/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child/>\n"
"-- </root>"

msgid ""
"-- appned node with attirbute\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_element(\"child\", {id=\"1\", class=\"A\"})"
msgstr ""
"--属性を持った要素の追加\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_element(\"child\", {id=\"1\", class=\"A\"})"

msgid ""
"print(child:to_xml())\n"
"-- <child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child class=\"A\" id=\"1\"/>\n"
"-- </root>"
msgstr ""

msgid ""
"-- appned node with namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local child = root:append_element(\"xhtml:child\", {id=\"1\", class=\"A\"})\n"
"print(child:to_xml())\n"
"-- <xhtml:child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n"
"--   <xhtml:child class=\"A\" id=\"1\"/>\n"
"-- </xhtml:html>\n"
"```"
msgstr ""
"-- 名前空間を持った要素の追加\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local child = root:append_element(\"xhtml:child\", {id=\"1\", class=\"A\"})\n"
"print(child:to_xml())\n"
"-- <xhtml:child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n"
"--   <xhtml:child class=\"A\" id=\"1\"/>\n"
"-- </xhtml:html>\n"
"```"

msgid ""
"### `insert_element(position, name, attributes=nil) -> xmlua.Element` {#insert"
"-element}"
msgstr ""

msgid ""
"Make an element with the specified name and append it the `position`th child e"
"lement of `xmlua.Element` of the receiver.\n"
"`position` is 1 origin.\n"
"If you specify attributes, it set the attribute to the appended element.\n"
"It returns appended element.\n"
"If `name` is `namespace_prefix:local_name`, it set the namespace to the append"
" element."
msgstr ""
"指定された名前の要素を作成し、それをレシーバーの`xmlua.Element`の`position`番目の子要素にします。属性が指定された場合は、追加する要"
"素に属性を設定します。このメソッドは、追加した要素を返します。`name`が`namespace_prefix:local_name`の場合は追加した要素に"
"名前空間を設定します。"

msgid ""
"-- insert element\n"
"local document = xmlua.XML.parse([[<root><child1/><child2/></root>]])\n"
"local root = document:root()\n"
"local child = root:insert_element(2, \"new-child\")\n"
"print(child)\n"
"-- <new-child/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child1/>\n"
"--   <new-child/>\n"
"--   <child2/>\n"
"-- </root>"
msgstr ""
"--要素の挿入\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_element(\"child\")\n"
"print(child:to_xml())\n"
"-- <child/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child/>\n"
"-- </root>"

msgid ""
"-- Insert element with attribute\n"
"local document = xmlua.XML.parse([[<root><child1/><child2/></root>]])\n"
"local root = document:root()\n"
"local child = root:insert_element(2, \"new-child\", {id=\"1\", class=\"A\"})\n"
"print(child)\n"
"-- <new-child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child1/>\n"
"--   <new-child class=\"A\" id=\"1\"/>\n"
"--   <child2/>\n"
"-- </root>"
msgstr ""
"-- 属性を持つ要素の挿入\n"
"local document = xmlua.XML.parse([[<root><child1/><child2/></root>]])\n"
"local root = document:root()\n"
"local child = root:insert_element(2, \"new-child\", {id=\"1\", class=\"A\"})\n"
"print(child)\n"
"-- <new-child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <child1/>\n"
"--   <new-child class=\"A\" id=\"1\"/>\n"
"--   <child2/>\n"
"-- </root>"

msgid ""
"-- Insert element with namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n"
"  <xhtml:child1/>\n"
"  <xhtml:child2/>\n"
"</xhtml:html>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local child = root:insert_element(2,\n"
"                                  \"xhtml:new-child\",\n"
"                                  {id=\"1\", class=\"A\"})\n"
"print(child)\n"
"-- <xhtml:new-child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n"
"--   <xhtml:child1/>\n"
"--   <xhtml:new-child class=\"A\" id=\"1\"/><xhtml:child2/>\n"
"-- </xhtml:html>\n"
"```"
msgstr ""
"-- 名前空間を持った要素の挿入\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local child = root:append_element(\"xhtml:child\", {id=\"1\", class=\"A\"})\n"
"print(child:to_xml())\n"
"-- <xhtml:child class=\"A\" id=\"1\"/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n"
"--   <xhtml:child class=\"A\" id=\"1\"/>\n"
"-- </xhtml:html>\n"
"```"

msgid "### `append_text(text_content) -> xmlua.Text` {#append-text}"
msgstr ""

msgid ""
"Make an text element with the specified text content and append it the last ch"
"ild element of `xmlua.Element` of the receiver.\n"
"It returns appended text element."
msgstr ""
"指定された名前のテキスト要素を作成し、それをレシーバーの`xmlua.Element`の最後の子要素にします。このメソッドは、追加したテキスト要素を返します"
"。"

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")\n"
"--append text node.\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_text(\"This is Text element.\")\n"
"print(child:text())\n"
"-- This is Text element.\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>This is Text element.</root>\n"
"```"
msgstr ""
"```lua\n"
"local xmlua = require(\"xmlua\")\n"
"--要素の追加\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"local child = root:append_text(\"This is Text element.\")\n"
"print(child:text())\n"
"-- This is Text element.\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>This is Text element.</root>\n"
"```"

msgid "### `add_child(child_node) -> void` {#add_child}"
msgstr ""

msgid ""
"Add a new node to receiver, at the end of child.\n"
"If new node is attribute node, it is added into propertoes instead of children"
"."
msgstr "レシーバーの要素の新しい要素を最後の子要素として追加します。新しいノードが属性ノードの場合は、子要素ではなく、レシーバーのプロパティに追加されます。"

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")\n"
"--append CDATASection node.\n"
"local document = xmlua.XML.build({\"root\"})\n"
"local cdata_section_node =\n"
"  document:create_cdata_section(\"This is <CDATA>\")\n"
"local root = document:root()\n"
"print(document:to_xml())\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<root><![CDATA[This is <CDATA>]]></root>\n"
"```"
msgstr ""

msgid "### `add_previous_sibling(node) -> void` {#add_previous_sibling}"
msgstr ""

msgid ""
"Add a new node as the previous sibling receiver.\n"
"If the new node was already inserted in a document it is first unlinked from i"
"ts existing context.\n"
"If the new node is ATTRIBUTE, it is added into properties instead of sibling."
msgstr ""
"新しいノードをレシーバーの要素の前に兄弟要素として追加します。新しいノードが既にドキュメント内に挿入されている場合は、最初に既存のコンテキストからリンクが解"
"除されます。新しいノードが属性ノードの場合、兄弟要素ではなくレシーバーのプロパティとして追加されます。"

msgid ""
"```lua\n"
"local document = xmlua.XML.parse([[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root>\n"
"  <child/>\n"
"</root>\n"
"]])"
msgstr ""

msgid ""
"--append comment node.\n"
"local root = document:root()\n"
"local comment_node =\n"
"  document:create_comment(\"This is comment!\")\n"
"local child = root:children()[1]\n"
"child:add_previous_sibling(comment_node)\n"
"print(document:to_xml())\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<root>\n"
"--  <!--This is comment!--><child/>\n"
"--</root>\n"
"```"
msgstr ""

msgid "### `append_sibling(node) -> void` {#append_sibling}"
msgstr ""

msgid ""
"Add a new node to a receiver as the end of a sibling.\n"
"If the new node was already inserted in a document it is first unlinked from i"
"ts existing context."
msgstr ""
"新しいノードをレシーバーの最後の兄弟要素として追加します。\n"
"新しいノードが既にドキュメント内に挿入されている場合は、最初に既存のコンテキストからリンクが解除されます。"

msgid ""
"```lua\n"
"local document = xmlua.XML.parse([[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root>\n"
"  <child/>\n"
"</root>\n"
"]])\n"
"local root = document:root()\n"
"local comment_node =\n"
"  document:create_comment(\"This is comment!\")\n"
"local child = root:children()[1]\n"
"child:append_sibling(comment_node)\n"
"print(document:to_xml())\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<root>\n"
"--  <child/>\n"
"--<!--This is comment!--></root>\n"
"```"
msgstr ""

msgid "### `add_next_sibling(node) -> void` {#add_next_sibling}"
msgstr ""

msgid ""
"Add a new node to a receiver as the next sibling.\n"
"If the new node was already inserted in a document it is first unlinked from i"
"ts existing context."
msgstr ""
"新しいノードをレシーバーの次の兄弟要素として追加します。\n"
"新しいノードが既にドキュメント内に挿入されている場合は、最初に既存のコンテキストからリンクが解除されます。"

msgid ""
"```lua\n"
"local document = xmlua.XML.parse([[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root>\n"
"  <child/>\n"
"</root>\n"
"]])\n"
"local root = document:root()\n"
"local comment_node =\n"
"  document:create_comment(\"This is comment!\")\n"
"local child = root:children()[1]\n"
"child:add_next_sibling(comment_node)\n"
"print(document:to_xml()\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<root>\n"
"--  <child/><!--This is comment!-->\n"
"--</root>\n"
"```"
msgstr ""

msgid "### `unlink() -> xmlua.Element` {#unlink}"
msgstr ""

msgid "It remove receiver from document tree."
msgstr "レシーバーをドキュメントツリーから削除します。"

msgid ""
"local document = xmlua.XML.parse([[<root><child/></root>]])\n"
"local child = document:css_select(\"child\")[1]\n"
"-- unlink element from document tree\n"
"local unlinked_node = child:unlink()"
msgstr ""
"local document = xmlua.XML.parse([[<root><child/></root>]])\n"
"local child = document:css_select(\"child\")[1]\n"
"-- ドキュメントツリーから要素を削除します。\n"
"local unlinked_node = child:unlink()"

msgid ""
"print(unlinked_node:to_xml())\n"
"-- <child/>\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>\n"
"```"
msgstr ""

msgid "### `get_attribute(name) -> string` {#get-attribute}"
msgstr ""

msgid ""
"It gets attribute value of the given attribute name. If the attribute name doe"
"sn't exist, it returns `nil`."
msgstr "与えられた属性の属性値を取得します。属性が存在しない場合は`nil`を返します。"

msgid ""
"Normally, you can use `element.attribute_name` or `element[\"attribute-name\"]` "
"form. They are easy to use than `element:get_attribute(\"attribute-name\")` beca"
"use they are shorter."
msgstr ""
"通常、`element.attribute_name`または`element[\"attribute-name\"]`の形式で使います。`element:get"
"_attribute(\"attribute-name\")`の形式より短く簡単に使えるためです。"

msgid ""
"local document = xmlua.XML.parse(\"<root class='A'/>\")\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- Uses dot syntax to get attribute value\n"
"print(root.class)\n"
"-- -> A"
msgstr ""
"-- ドットを使った属性値の取得\n"
"print(root.class)\n"
"-- -> A"

msgid ""
"-- Uses [] syntax to get attribute value\n"
"print(root[\"class\"])\n"
"-- -> A"
msgstr ""
"-- []を使った属性値の取得\n"
"print(root[\"class\"])\n"
"-- -> A"

msgid ""
"-- Uses get_attribute method to get attribute value\n"
"print(root:get_attribute(\"class\"))\n"
"-- -> A\n"
"```"
msgstr ""
"-- get_attributeメソッドを使った属性値の取得\n"
"print(root:get_attribute(\"class\"))\n"
"-- -> A\n"
"```"

msgid ""
"You can use namespace by specifying attribute name with namespace prefix. If y"
"ou specify nonexistent namespace prefix, whole name is processed as attribute "
"name."
msgstr ""
"名前空間プレフィックスと一緒に属性名を指定することで名前空間を使うことができます。存在しない名前空間プレフィックスを指定した場合は、属性名として処理されます"
"。"

msgid ""
"local xml = [[\n"
"<root xmlns:example=\"http://example.com/\"\n"
"      example:attribute=\"value-example\"\n"
"      attribute=\"value\"\n"
"      nonexistent-namespace:attribute=\"value-nonexistent-namespace\"/>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()"
msgstr ""

msgid ""
"-- With namespace prefix\n"
"print(root[\"example:attribute\"])\n"
"-- -> value-example"
msgstr ""
"-- 名前空間プレフィックスつき\n"
"print(root[\"example:attribute\"])\n"
"-- -> value-example"

msgid ""
"-- Without namespace prefix\n"
"print(root[\"attribute\"])\n"
"-- -> value"
msgstr ""
"-- 名前空間プレフィックスなし\n"
"print(root[\"attribute\"])\n"
"-- -> value"

msgid ""
"-- With nonexistent namespace prefix\n"
"print(root[\"nonexistent-namespace:attribute\"])\n"
"-- -> value-nonexistent-namespace\n"
"```"
msgstr ""
"-- 存在しない名前空間プレフィックスつき\n"
"print(root[\"nonexistent-namespace:attribute\"])\n"
"-- -> value-nonexistent-namespace\n"
"```"

msgid "### `set_attribute(name, value) -> void` {#set-attribute}"
msgstr ""

msgid ""
"It set specify attribute to element.\n"
"If attribute already exist, it overrides attribute.\n"
"If attribute not exist, it makes attribute.\n"
"If `name` is `namespace_prefix:local_name`, it set the namespace to the attrib"
"ute.\n"
"You can write not only `element:set_attribute(name, value)` but also `element."
"name = value`."
msgstr ""
"指定した属性を要素へ設定します。\n"
"既に存在する属性の場合は、値を上書きします属性が存在しない場合は、作成します。\n"
"`name`が`namespace_prefix:local_name`の場合は、名前空間を設定します。\n"
"`element:set_attribute(name, value)`という書き方だけではなく、`element.name = value`という書き方も"
"できます。\n"

msgid ""
"-- set attribute\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"root:set_attribute(\"class\", \"A\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root class=\"A\"/>"
msgstr ""
"-- 属性を設定します。\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"root:set_attribute(\"class\", \"A\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root class=\"A\"/>"

msgid ""
"-- set attribute another way write\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"root.class = \"A\"\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root class=\"A\"/>"
msgstr ""
"-- 別の書き方で属性を設定します。\n"
"local document = xmlua.XML.parse(\"<root/>\")\n"
"local root = document:root()\n"
"root.class = \"A\"\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root class=\"A\"/>"

msgid ""
"-- set attribute update\n"
"local document = xmlua.XML.parse(\"<root value='1'/>\")\n"
"local root = document:root()\n"
"root.value = \"2\"\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root value=\"2\"/>"
msgstr ""
"-- 属性を上書きします。\n"
"local document = xmlua.XML.parse(\"<root value='1'/>\")\n"
"local root = document:root()\n"
"root.value = \"2\"\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root value=\"2\"/>"

msgid ""
"-- set attribute with namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:set_attribute(\"xhtml:class\", \"top-level\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:class=\"top-lev"
"el\"/>"
msgstr ""
"-- 名前空間を持った属性を設定します。\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:set_attribute(\"xhtml:class\", \"top-level\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:class=\"top-lev"
"el\"/>"

msgid ""
"-- set attribute update with namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html\n"
"  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n"
"  xhtml:class=\"top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:set_attribute(\"xhtml:class\", \"top-level-updated\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:class=\"top-lev"
"el-updated\"/>\n"
"```"
msgstr ""
"-- 名前空間を持つ属性を上書きします。\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html\n"
"  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n"
"  xhtml:class=\"top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:set_attribute(\"xhtml:class\", \"top-level-updated\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xhtml:class=\"top-lev"
"el-updated\"/>\n"
"```"

msgid "### `remove_attribute(name) -> void` {#remove-attribute}"
msgstr ""

msgid ""
"It removes attribute wiht specified name.\n"
"If `name` is `xmlns:local_name`, it remove the namespace."
msgstr ""
"指定した名前の属性を削除します。\n"
"`name`が`xmlns:local_name`の場合は、名前空間を削除します。"

msgid ""
"-- Remove attribute\n"
"local document = xmlua.XML.parse(\"<root class=\\\"A\\\"/>\")\n"
"local node_set = document:search(\"/root\")\n"
"node_set[1]:remove_attribute(\"class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>"
msgstr ""
"-- 属性を削除します。\n"
"local document = xmlua.XML.parse(\"<root class=\\\"A\\\"/>\")\n"
"local node_set = document:search(\"/root\")\n"
"node_set[1]:remove_attribute(\"class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>"

msgid ""
"--Remove attribute with namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html\n"
"  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n"
"  xhtml:class=\"xhtml-top-level\"\n"
"  xmlns:example=\"http://example.com/\"\n"
"  example:class=\"example-top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xhtml:class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:example=\"http:"
"//example.com/\" example:class=\"example-top-level\"/>"
msgstr ""
"-- 名前空間を持つ属性の削除\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html\n"
"  xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"\n"
"  xhtml:class=\"xhtml-top-level\"\n"
"  xmlns:example=\"http://example.com/\"\n"
"  example:class=\"example-top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xhtml:class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:example=\"http:"
"//example.com/\" example:class=\"example-top-level\"/>"

msgid ""
"-- Remove attribute with default namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<html\n"
"  xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"  class=\"top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <html xmlns=\"http://www.w3.org/1999/xhtml\"/>"
msgstr ""
"-- デフォルト名前空間の属性を削除\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<html\n"
"  xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"  class=\"top-level\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"class\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <html xmlns=\"http://www.w3.org/1999/xhtml\"/>"

msgid ""
"-- Remove namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root xmlns:example=\"http://example.com/\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xmlns:example\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>"
msgstr ""
"-- 名前空間を削除\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root xmlns:example=\"http://example.com/\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xmlns:example\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>"

msgid ""
"-- Remove default namespace\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root xmlns=\"http://example.com/\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xmlns\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>\n"
"```"
msgstr ""
"-- デフォルト名前空間の削除\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<root xmlns=\"http://example.com/\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"root:remove_attribute(\"xmlns\")\n"
"print(document:to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root/>\n"
"```"

msgid "### `previous() -> xmlua.Element` {#previous}"
msgstr ""

msgid ""
"It returns the previous sibling element as `xmlua.Element`. If there is no pre"
"vious sibling element, it returns `nil`."
msgstr "前の兄弟要素を`xmlua.Element`として返します。前の兄弟要素が存在しない場合は、`nil`を返します。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <sub1/>\n"
"  <sub2/>\n"
"  <sub3/>\n"
"</root>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local sub2 = document:search(\"/root/sub2\")[1]"
msgstr ""

msgid ""
"-- Gets the previous sibling element of <sub2>\n"
"print(sub2:previous():to_xml())\n"
"-- <sub1/>"
msgstr ""
"-- <sub2>の1つ前の兄弟要素を取得\n"
"print(sub2:previous():to_xml())\n"
"-- <sub1/>"

msgid "local sub1 = sub2:previous()"
msgstr ""

msgid ""
"-- Gets the previous sibling element of <sub1>\n"
"print(sub1:previous())\n"
"-- nil\n"
"```"
msgstr ""
"-- <sub1>の前の兄弟要素を取得\n"
"print(sub1:previous())\n"
"-- nil\n"
"```"

msgid "### `next() -> xmlua.Element` {#next}"
msgstr ""

msgid ""
"It returns the next sibling element as `xmlua.Element`. If there is no next si"
"bling element, it returns `nil`."
msgstr "次の兄弟要素を`xmlua.Element`として返します。次の兄弟要素が無い場合は、`nil`を返します。"

msgid ""
"-- Gets the next sibling element of <sub2>\n"
"print(sub2:next():to_xml())\n"
"-- <sub3/>"
msgstr ""
"-- <sub2>の次の兄弟要素を取得\n"
"print(sub2:next():to_xml())\n"
"-- <sub3/>"

msgid "local sub3 = sub2:next()"
msgstr ""

msgid ""
"-- Gets the next sibling element of <sub3>\n"
"print(sub3:next())\n"
"-- nil\n"
"```"
msgstr ""
"-- <sub3>の次の兄弟要素を取得\n"
"print(sub3:next())\n"
"-- nil\n"
"```"

msgid "### `root() -> xmlua.Element` {#root}"
msgstr ""

msgid "It returns the root element as `xmlua.Element`."
msgstr "root要素を`xmlua.Element`として返します。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <child>\n"
"    <grandchild/>\n"
"  </child>\n"
"</root>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local grandchild = document:search(\"/root/child/grandchild\")[1]"
msgstr ""

msgid ""
"-- Gets the root element of <grandchild>\n"
"print(grandchild:root():name())\n"
"-- \"root\""
msgstr ""

msgid "### `parent() -> xmlua.Element` {#parent}"
msgstr ""

msgid ""
"It returns the parent element as `xmlua.Element`. If the element is root eleme"
"nt, it returns [`xmlua.Document`][document]."
msgstr "親要素を`xmlua.Element`として返します。要素がルート要素の場合は、[`xmlua.Document`][document]を返します。"

msgid ""
"-- Gets the parent element of <sub2>\n"
"print(sub2:parent():to_xml())\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"
msgstr ""
"-- <sub2>の親要素を取得\n"
"print(sub2:parent():to_xml())\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"

msgid "local root = sub2:parent()"
msgstr ""

msgid ""
"-- Gets the parent element of <root>: xmlua.Document\n"
"print(root:parent():to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"
msgstr ""
"-- <root>要素の親要素を取得: xmlua.Document\n"
"print(root:parent():to_xml())\n"
"-- <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"-- <root>\n"
"--   <sub1/>\n"
"--   <sub2/>\n"
"--   <sub3/>\n"
"-- </root>"

msgid "local document = root:parent()"
msgstr ""

msgid ""
"-- Gets the parent of document\n"
"print(document:parent())\n"
"-- nil\n"
"```"
msgstr ""
"-- ドキュメントの親を取得\n"
"print(document:parent())\n"
"-- nil\n"
"```"

msgid "### `children() -> [xmlua.Element]` {#children}"
msgstr ""

msgid "It returns the child elements as an array of `xmlua.Element`."
msgstr "子要素を`xmlua.Element`の配列として返す。"

msgid ""
"-- Gets all child elements of <root> (<sub1>, <sub2> and <sub3>)\n"
"local subs = root:children()"
msgstr ""
"-- <root>の全ての子要素を取得(<sub1>, <sub2> and <sub3>)\n"
"local subs = root:children()"

msgid ""
"print(#subs)\n"
"-- 3\n"
"print(subs[1]:to_xml())\n"
"-- <sub1/>\n"
"print(subs[2]:to_xml())\n"
"-- <sub2/>\n"
"print(subs[3]:to_xml())\n"
"-- <sub3/>\n"
"```"
msgstr ""

msgid "### `find_namespace(prefix, href) -> [xmlua.Namespace]` {#find_namespace}"
msgstr ""

msgid ""
"You can search namespace registered for a document.\n"
"If a prefix is a nil and href is exist, this method search namespace by href.\n"
"IF a prefix and href is exist, this method search namespace by prefix.\n"
"If prefix and href are nil, this method search default namespace.\n"
"It returns found namespace or nil.\n"
"If a return value is a nil, the search of a namespace is a failure."
msgstr ""
"ドキュメントに登録されている名前空間を検索することができます。prefixがnilで、hrefが存在する場合、このメソッドは名前空間をhrefで検索します。"
"prefixとhrefがnilの場合、このメソッドはデフォルトの名前空間を検索します。見つかった名前空間またはnilを返します。戻り値がnilの場合は、名前"
"空間の検索は失敗です。"

msgid ""
"```lua\n"
"--search by prefix\n"
"local xmlua = require(\"xmlua\")"
msgstr ""
"```lua\n"
"--prefixによる検索\n"
"local xmlua = require(\"xmlua\")"

msgid ""
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local namespace = root:find_namespace(\"xhtml\")\n"
"print(namespace:prefix()) --\"xhtml\"\n"
"print(namespace:href()) --\"http://www.w3.org/1999/xhtml\"\n"
"```"
msgstr ""

msgid ""
"```lua\n"
"--search by href\n"
"local xmlua = require(\"xmlua\")"
msgstr ""
"```lua\n"
"--hrefによる検索\n"
"local xmlua = require(\"xmlua\")"

msgid ""
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<xhtml:html xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"/>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local namespace = root:find_namespace(nil, \"http://www.w3.org/1999/xhtml\")\n"
"print(namespace:prefix()) --\"xhtml\"\n"
"print(namespace:href()) --\"http://www.w3.org/1999/xhtml\"\n"
"```"
msgstr ""

msgid ""
"```lua\n"
"--search of default namespace\n"
"local xmlua = require(\"xmlua\")"
msgstr ""
"```lua\n"
"--デフォルトネームスペースの検索\n"
"local xmlua = require(\"xmlua\")"

msgid ""
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<test xmlns='http://www.test.org/xhtml'\n"
"      xmlns:xhtml='http://www.w3.org/1999/xhtml'>\n"
"</test>\n"
"]]\n"
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local namespace = root:find_namespace()\n"
"print(namespace:href()) --\"http://www.test.org/xhtml\"\n"
"```"
msgstr ""

msgid "## `namespaces() -> [xmlua.Namespace][]` {#namespaces}"
msgstr ""

msgid ""
"You can get namespaces registered for a document.\n"
"This method returns an array of [`xmlua.Namespace`][namespace].\n"
"If a return value is an empty array, a document hasn't namespaces."
msgstr ""
"ドキュメントに登録されているネームスペースを取得できます。このメソッドは、 [`xmlua.Namespace`][namespace] の配列を返します。"
"戻り値が空の配列の場合は、ドキュメントにネームスペースがありません。"

msgid ""
"```lua\n"
"local xml = [[\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<html xmlns=\"http://www.w3.org/1999/xhtml\"\n"
"      xmlns:svg=\"http://www.w3.org/2000/svg\"/>\n"
"]]"
msgstr ""

msgid ""
"local document = xmlua.XML.parse(xml)\n"
"local root = document:root()\n"
"local namespaces = root:namespaces()"
msgstr ""

msgid ""
"print(namespaces[1]:prefix()) -- nil\n"
"print(namespaces[1]:href()) -- \"http://www.w3.org/1999/xhtml\"\n"
"print(namespaces[2]:prefix()) -- \"svg\"\n"
"print(namespaces[2]:href()) -- \"http://www.w3.org/2000/svg\"\n"
"```"
msgstr ""

msgid "## See also"
msgstr "## 参照"

msgid "  * [`xmlua.HTML`][html]: The class for parsing HTML."
msgstr "  * [`xmlua.HTML`][html]: HTMLをパースするクラスです。"

msgid "  * [`xmlua.XML`][xml]: The class for parsing XML."
msgstr "  * [`xmlua.XML`][xml]: XMLをパースするクラスです。"

msgid ""
"  * [`xmlua.Document`][document]: The class for HTML document and XML document"
"."
msgstr "  * [`xmlua.Document`][document]: HTMLドキュメントとXMLドキュメント用のクラスです。"

msgid "  * [`xmlua.Namespace`][namespace]: The class for namespace nodes."
msgstr ""

msgid "  * [`xmlua.NodeSet`][node-set]: The class for multiple nodes."
msgstr "  * [`xmlua.NodeSet`][node-set]: 複数ノードを扱うためのクラスです。"

msgid "[document-root]:document.html#root"
msgstr ""

msgid "[node-set]:node-set.html"
msgstr ""

msgid "[html]:html.html"
msgstr ""

msgid "[xml]:xml.html"
msgstr ""

msgid "[document]:document.html"
msgstr ""

msgid "[serializable]:serializable.html"
msgstr ""

msgid "[searchable]:searchable.html"
msgstr ""

msgid "[namespace]:namespace.html"
msgstr ""
