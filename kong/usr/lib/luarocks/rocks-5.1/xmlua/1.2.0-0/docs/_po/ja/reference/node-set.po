msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: xmlua.NodeSet\n"
"---"
msgstr ""

msgid "# `xmlua.NodeSet` class"
msgstr "# `xmlua.NodeSet`クラス"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"It's a class to manage multiple nodes. Normally, it's used as return object fo"
"r [`xmlua.Searchable:search`][searchable-search]."
msgstr ""
"複数ノードを管理するクラスです。通常、[`xmlua.Searchable:search`][searchable-search]で返却されるオブジェクトを"
"使います。"

msgid "Example:"
msgstr "例："

msgid ""
"```lua\n"
"local xmlua = require(\"xmlua\")"
msgstr ""

msgid "local document = xmlua.XML.parse(\"<root><sub/></root>\")"
msgstr ""

msgid ""
"document:search(\"/root\") -- -> xmlua.NodeSet\n"
"```"
msgstr ""

msgid ""
"For now, it contains only element node ([`xmlua.Element`][element]). We will s"
"upport other node such as text node in the future."
msgstr "今の所、要素ノード([`xmlua.Element`][element])のみを扱います。将来的にはテキストノードのように他のノードもサポートする予定です。"

msgid "## Instance methods"
msgstr "## インスタンスメソッド"

msgid ""
"It's based on normal table. It means that you can use normal table features su"
"ch as `#node_set` (getting the number of nodes in the node set) and `node_set["
"1]` (getting the 1st node in the node set)."
msgstr ""
"このクラスは、通常のテーブルに基づいています。つまり、`#node_set`(ノードセットが持つノードの数を取得する)や`node_set[1]`(ノードセ"
"ットの最初のノードを取得する)のような通常のテーブルの機能が使えます。"

msgid "### `to_html(options=nil) -> string` {#to-html}"
msgstr ""

msgid ""
"It serializes all nodes in the node set as HTML by [`xmlua.Serializable:to_htm"
"l`][serializable-to-html] and concatenates serialized strings."
msgstr ""
"ノードセット内の全てのノードを[`xmlua.Serializable:to_html`][serializable-to-html]を使ってHTMLへシリ"
"アライズし、シリアライズした文字列を結合します。"

msgid "`options`: Here are available options:"
msgstr "`options`: 利用可能なオプションは以下の通りです。"

msgid "  * `encoding`: The output encoding as `string`."
msgstr "  * `encoding`: 出力のエンコーディングを`string`で指定します。"

msgid "    * Example: `\"UTF-8'`"
msgstr "    * 例: `\"UTF-8'`"

msgid "If serialization is failed, it raises an error."
msgstr "シリアライズに失敗した場合は、エラーが発生します。"

msgid ""
"local document = xmlua.HTML.parse([[\n"
"<html>\n"
"  <head>\n"
"    <title>Hello</title>\n"
"  </head>\n"
"  <body>World</body>\n"
"</html>\n"
"]])"
msgstr ""

msgid ""
"-- All elements under <html> (<head> and <body>)\n"
"local node_set = document:search(\"/html/*\")"
msgstr ""
"-- <html>配下の全ての要素 (<head> and <body>)\n"
"local node_set = document:search(\"/html/*\")"

msgid ""
"-- Serializes all elements as HTML and concatenates serialized HTML\n"
"print(node_set:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head><body>World</body>"
msgstr ""
"-- 全ての要素をHTMLへシリアライズし、シリアライズしたHTMLを結合します。\n"
"print(node_set:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head><body>World</body>"

msgid ""
"-- FYI: <head> serialization\n"
"print(node_set[1]:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head>"
msgstr ""
"-- 参考: <head>要素のシリアライズ\n"
"print(node_set[1]:to_html())\n"
"-- <head>\n"
"-- <meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-JP\">\n"
"--    <title>Hello</title>\n"
"--  </head>"

msgid ""
"-- FYI: <body> serialization\n"
"print(node_set[2]:to_html())\n"
"-- <body>World</body>\n"
"```"
msgstr ""
"-- 参考: <body>要素のシリアライズ\n"
"print(node_set[2]:to_html())\n"
"-- <body>World</body>\n"
"```"

msgid "### `to_xml(options=nil) -> string` {#to-xml}"
msgstr ""

msgid ""
"It serializes all nodes in the node set as XML by [`xmlua.Serializable:to_xml`"
"][serializable-to-xml] and concatenates serialized strings."
msgstr ""
"ノードセット内の全てのノードを[`xmlua.Serializable:to_xml`][serializable-to-xml]を使ってXMLへシリアライ"
"ズし、シリアライズした文字列を結合します。"

msgid ""
"local document = xmlua.XML.parse([[\n"
"<root>\n"
"  <sub1>text1</sub1>\n"
"  <sub2>text2</sub2>\n"
"  <sub3>text3</sub3>\n"
"</root>\n"
"]])"
msgstr ""

msgid ""
"-- All elements under <root> (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")"
msgstr ""
"-- <root>配下の全ての要素 (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")"

msgid ""
"-- Serializes all elements as XML and concatenates serialized XML\n"
"print(node_set:to_xml())\n"
"-- <sub1>text1</sub1><sub2>text2</sub2><sub3>text3</sub3>"
msgstr ""
"-- 全ての要素をXMLへシリアライズし、シリアライズしたXMLを結合します。\n"
"print(node_set:to_xml())\n"
"-- <sub1>text1</sub1><sub2>text2</sub2><sub3>text3</sub3>"

msgid ""
"-- FYI: <sub1> serialization\n"
"print(node_set[1]:to_xml())\n"
"-- <sub1>text1</sub1>"
msgstr ""
"-- 参考: <sub1>要素のシリアライズ\n"
"print(node_set[1]:to_xml())\n"
"-- <sub1>text1</sub1>"

msgid ""
"-- FYI: <sub2> serialization\n"
"print(node_set[2]:to_xml())\n"
"-- <sub2>text2</sub2>"
msgstr ""
"-- 参考: <sub2>要素のシリアライズ\n"
"print(node_set[2]:to_xml())\n"
"-- <sub2>text2</sub2>"

msgid ""
"-- FYI: <sub3> serialization\n"
"print(node_set[3]:to_xml())\n"
"-- <sub3>text3</sub3>\n"
"```"
msgstr ""
"-- 参考: <sub3>要素のシリアライズ\n"
"print(node_set[3]:to_xml())\n"
"-- <sub3>text3</sub3>\n"
"```"

msgid "### `search(xpath) -> xmlua.NodeSet` {#search}"
msgstr ""

msgid "It searches nodes by XPath and returns as [`xmlua.NodeSet`][node-set] object."
msgstr "XPathを使ってノードを検索し[`xmlua.NodeSet`][node-set]オブジェクトを返します。"

msgid ""
"It calls [`xmlua.Searchable:search`][searchable-search] against each node in t"
"he node set, collects matched nodes into one `xmlua.NodeSet` and returns the `"
"xmlua.NodeSet`."
msgstr ""
"ノードセット内のそれぞれのノードに対して、[`xmlua.Searchable:search`][searchable-search]を実行し、`xmlua"
".NodeSet`内でマッチしたノードを収集し、`xmlua.NodeSet`を返します。"

msgid ""
"local xml = [[\n"
"<root>\n"
"  <sub class=\"A\"><subsub1/></sub>\n"
"  <sub class=\"B\"><subsub2/></sub>\n"
"  <sub class=\"A\"><subsub3/></sub>\n"
"</root>\n"
"]]"
msgstr ""

msgid "local document = xmlua.XML.parse(xml)"
msgstr ""

msgid ""
"-- Searches all <sub class=\"A\"> elements\n"
"local class_a_subs = document:search(\"//sub[@class='A']\")"
msgstr ""
"-- 全ての<sub class=\"A\">要素を検索\n"
"local class_a_subs = document:search(\"//sub[@class='A']\")"

msgid ""
"-- Searches all elements under <sub class=\"A\"> elements\n"
"local subsubs_in_class_a = class_a_subs:search(\"*\")"
msgstr ""
"-- <sub class=\"a\">配下の全ての要素を検索\n"
"local subsubs_in_class_a = class_a_subs:search(\"*\")"

msgid "print(#subsubs_in_class_a) -- -> 2"
msgstr ""

msgid ""
"-- It's /root/sub[@class=\"A\"]/subsub1\n"
"print(subsubs_in_class_a[1]:to_xml())\n"
"-- <subsub1/>"
msgstr ""
"-- /root/sub[@class=\"A\"]/subsub1\n"
"print(subsubs_in_class_a[1]:to_xml())\n"
"-- <subsub1/>"

msgid ""
"-- It's /root/sub[@class=\"A\"]/subsub3\n"
"print(subsubs_in_class_a[2]:to_xml())\n"
"-- <subsub3/>\n"
"```"
msgstr ""
"-- /root/sub[@class=\"A\"]/subsub3\n"
"print(subsubs_in_class_a[2]:to_xml())\n"
"-- <subsub3/>\n"
"```"

msgid "### `content() -> string` {#content}"
msgstr ""

msgid "It gets contents of all nodes in the node set and concatenates them."
msgstr "このノードセット内のすべてのノードの内容を取得してそれらを連結します。"

msgid ""
"-- Gets all contents and concatenates them\n"
"print(node_set:content())\n"
"-- text1text2text3\n"
"```"
msgstr ""
"-- すべての内容を取得して連結\n"
"print(node_set:content())\n"
"-- text1text2text3\n"
"```"

msgid "### `text() -> string` {#text}"
msgstr ""

msgid "It's an alias of [`content`](#content)."
msgstr "[`content`](#content)のエイリアス。"

msgid "### `paths() -> {path1, path2, ...}` {#paths}"
msgstr ""

msgid "It returns XPath of all nodes in the node set."
msgstr "このノードセット内の全てのノードのXPathを返します。"

msgid ""
"-- All elements under <root> (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")\n"
"-- Returns XPath of all elements under <root> (<sub1>, <sub2> and <sub3>)\n"
"for _, path in ipairs(node_set:paths()) do\n"
"  print(path)\n"
"  --/root/sub1\n"
"  --/root/sub2\n"
"  --/root/sub3\n"
"end\n"
"```"
msgstr ""
"-- <root>配下の全ての要素 (<sub1>, <sub2> and <sub3>)\n"
"local node_set = document:search(\"/root/*\")\n"
"-- <root>配下の全ての要素 (<sub1>, <sub2> and <sub3>)のXPathを返します。\n"
"for _, path in ipairs(node_set:paths()) do\n"
"  print(path)\n"
"  --/root/sub1\n"
"  --/root/sub2\n"
"  --/root/sub3\n"
"end\n"
"```"

msgid "### `insert([position,] node) -> void` {#insert}"
msgstr ""

msgid ""
"It inserts `Node` to [`xmlua.NodeSet`][node-set]. However,it does not insert t"
"o document tree.\n"
"If you insert the same node, it's ignored.\n"
"You can insert not only [`xmlua.Element`][element] but also anything for `Node"
"`."
msgstr ""
"`Node`を[`xmlua.NodeSet`][node-set]に挿入します。ただし、ドキュメントツリーには追加しません。\n"
"同じノードが挿入された場合は無視されます。\n"
"[`xmlua.Element`][element]だけではなく、`Node`ならなんでも挿入できます。"

msgid ""
"If you want to specify insert position, you specify the position in the first "
"argument of this method."
msgstr "挿入位置を指定したい場合は、このメソッドの第一引数の挿入位置を指定してください。"

msgid ""
"local document = xmlua.XML.parse([[\n"
"<xml>\n"
"  <header>\n"
"    <title>This is test</title>\n"
"  </header>\n"
"  <contents>\n"
"    <sub1>sub1</sub1>\n"
"    <sub2>sub2</sub2>\n"
"    <sub3>sub3</sub3>\n"
"  </contents>\n"
"</xml>\n"
"]])"
msgstr ""

msgid ""
"--Insert node\n"
"local inserted_node_set = document:search(\"//title\")\n"
"-- <title>This is test</title>\n"
"local insert_node = document:search(\"//xml/contents/sub1\")[1]\n"
"-- <sub1>sub1</sub1>\n"
"inserted_node_set:insert(insert_node)"
msgstr ""
"--nodeの挿入\n"
"local inserted_node_set = document:search(\"//title\")\n"
"-- <title>This is test</title>\n"
"local insert_node = document:search(\"//xml/contents/sub1\")[1]\n"
"-- <sub1>sub1</sub1>\n"
"inserted_node_set:insert(insert_node)"

msgid ""
"print(inserted_node_set:to_xml())\n"
"-- <title>This is test</title><sub1>sub1</sub1>"
msgstr ""

msgid ""
"-- Insert node with position\n"
"local inserted_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local insert_node = document:search(\"//title\")[1]\n"
"-- <title>This is test</title>\n"
"inserted_node_set:insert(1, insert_node)"
msgstr ""
"-- 挿入位置を指定して挿入\n"
"local inserted_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local insert_node = document:search(\"//title\")[1]\n"
"-- <title>This is test</title>\n"
"inserted_node_set:insert(1, insert_node)"

msgid ""
"print(inserted_node_set:to_xml())\n"
"-- <title>This is test</title>\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"```"
msgstr ""

msgid "### `remove(node_or_position) -> xmlua.Node` {#remove}"
msgstr ""

msgid ""
"It remove `Node` in [`xmlua.NodeSet`][node-set]. However,it does not remove fr"
"om document tree.\n"
"It returns removed node. If it fail remove, it returns nil."
msgstr ""
"`Node`を[`xmlua.NodeSet`][node-set]から削除します. ただし、ドキュメントツリーからは削除しません。\n"
"削除した`Node`を返します。削除出来なかった場合は、`nil`を返します。"

msgid ""
"If you want to specify remove position, you specify the position in the first "
"argument of this method.\n"
"If you want to specify the node to be removed, you specify the `Node` in the f"
"irst argument of this method."
msgstr ""
"削除するノードの位置を指定したい場合は、このメソッドの第一引数に削除する位置を指定してください。\n"
"削除するノードを指定したい場合は、このメソッドの第一引数に削除するノードを指定して下さい。"

msgid ""
"-- Remove node\n"
"local removed_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local remove_node = removed_node_set:remove(removed_node_set[1])\n"
"print(remove_node:to_xml())\n"
"-- <sub1>sub1</sub1>\n"
"print(removed_node_set:to_xml())\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>"
msgstr ""
"-- ノードを削除する。\n"
"local removed_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local remove_node = removed_node_set:remove(removed_node_set[1])\n"
"print(remove_node:to_xml())\n"
"-- <sub1>sub1</sub1>\n"
"print(removed_node_set:to_xml())\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>"

msgid ""
"-- Remove node with position\n"
"local removed_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local remove_node = removed_node_set:remove(1)\n"
"print(remove_node:to_xml())\n"
"-- <sub1>sub1</sub1>\n"
"print(removed_node_set:to_xml())\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"```"
msgstr ""
"-- 位置を指定してノードを削除する。\n"
"local removed_node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local remove_node = removed_node_set:remove(1)\n"
"print(remove_node:to_xml())\n"
"-- <sub1>sub1</sub1>\n"
"print(removed_node_set:to_xml())\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"```"

msgid "### `merge(node_set) -> xmlua.NodeSet` {#merge}"
msgstr ""

msgid ""
"It returns a new node set which merged nodes in receiver and nodes in the argu"
"ment node set.\n"
"You can write not only `node_set1:merge(node_set2)` but also `node_set1 + node"
"_set2`.\n"
"Remove duplicate node."
msgstr ""
"レシーバー内のノードと引数のノードセット内のノードをマージして新しいノードセットを返します。`node_set1:merge(node_set2)`という書"
"き方だけでなく、`node_set1 + node_set2`という書き方もできます。重複したノードは削除します。"

msgid ""
"local document = xmlua.XML.parse([[\n"
"<xml>\n"
"  <header>\n"
"    <title>This is test</title>\n"
"  </header>\n"
"  <contents>\n"
"    <sub1>sub1</sub1>\n"
"    <sub2>sub2</sub2>\n"
"    <sub3>sub3</sub3>\n"
"  </contents>\n"
"</xml>\n"
"]])\n"
"-- Merge nodes\n"
"local node_set1 = document:search(\"//title\")\n"
"-- <title>This is test</title>\n"
"local node_set2 = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local merged_node_set = node_set1:merge(node_set2)\n"
"print(merged_node_set:to_xml())\n"
"-- <title>This is test</title>\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>"
msgstr ""
"local document = xmlua.XML.parse([[\n"
"<xml>\n"
"  <header>\n"
"    <title>This is test</title>\n"
"  </header>\n"
"  <contents>\n"
"    <sub1>sub1</sub1>\n"
"    <sub2>sub2</sub2>\n"
"    <sub3>sub3</sub3>\n"
"  </contents>\n"
"</xml>\n"
"]])\n"
"-- ノードをマージする\n"
"local node_set1 = document:search(\"//title\")\n"
"-- <title>This is test</title>\n"
"local node_set2 = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"local merged_node_set = node_set1:merge(node_set2)\n"
"print(merged_node_set:to_xml())\n"
"-- <title>This is test</title>\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>"

msgid ""
"-- Merge nodes another way write.\n"
"local merged_node_set = node_set1 + node_set2\n"
"print(merged_node_set:to_xml())\n"
"-- <title>This is test</title>\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"```"
msgstr ""
"-- 別の書き方でノードをマージする\n"
"local merged_node_set = node_set1 + node_set2\n"
"print(merged_node_set:to_xml())\n"
"-- <title>This is test</title>\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"```"

msgid "### `unlink() -> void` {#unlink}"
msgstr ""

msgid "It remove all node in node set from document tree."
msgstr "ノードセット内の全てのノードをドキュメントツリーから削除します。"

msgid ""
"-- remove all nodes in node set\n"
"local node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"node_set:unlink()\n"
"print(document:to_xml())\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<xml>\n"
"--  <header>\n"
"--    <title>This is test</title>\n"
"--  </header>\n"
"--  <contents>\n"
"--\n"
"--\n"
"--\n"
"--  </contents>\n"
"--</xml>\n"
"```"
msgstr ""
"--  ノードセット内の全てのノードを削除する。\n"
"local node_set = document:search(\"//xml/contents/*\")\n"
"-- <sub1>sub1</sub1>\n"
"-- <sub2>sub2</sub2>\n"
"-- <sub3>sub3</sub3>\n"
"node_set:unlink()\n"
"print(document:to_xml())\n"
"--<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"--<xml>\n"
"--  <header>\n"
"--    <title>This is test</title>\n"
"--  </header>\n"
"--  <contents>\n"
"--\n"
"--\n"
"--\n"
"--  </contents>\n"
"--</xml>\n"
"```"

msgid "## See also"
msgstr "## 参照"

msgid "  * [`xmlua.Element`][element]: The class for element node."
msgstr "  * [`xmlua.Element`][element]: 要素ノード用のクラスです。"

msgid ""
"  * [`xmlua.Serializable`][serializable]: Provides HTML and XML serialization "
"related methods."
msgstr "  * [`xmlua.Serializable`][serializable]: HTML・XMLへのシリアライズ関連のメソッドを提供します。"

msgid "  * [`xmlua.Searchable`][searchable]: Provides node search related methods."
msgstr "  * [`xmlua.Searchable`][searchable]: ノード検索関連のメソッドを提供します。"

msgid "[searchable-search]:searchable.html#search"
msgstr ""

msgid "[element]:element.html"
msgstr ""

msgid "[serializable-to-html]:serializable.html#to-html"
msgstr ""

msgid "[serializable-to-xml]:serializable.html#to-xml"
msgstr ""

msgid "[node-set]:node-set.html"
msgstr ""

msgid "[serializable]:serializable.html"
msgstr ""

msgid "[searchable]:searchable.html"
msgstr ""
