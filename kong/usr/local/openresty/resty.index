dist nginx
  modules accept_failed beginners_guide chunked_encoding_from_backend configure configuring_https_servers contributing_changes control converting_rewrite_rules daemon_master_process_off debugging_log development_guide events example faq freebsd_tuning hash howto_build_on_win32 install license_copyright load_balancing nginx nginx_dtrace_pid_provider ngx_core_module ngx_google_perftools_module ngx_http_access_module ngx_http_addition_module ngx_http_api_module_head ngx_http_auth_basic_module ngx_http_auth_jwt_module ngx_http_auth_request_module ngx_http_autoindex_module ngx_http_browser_module ngx_http_charset_module ngx_http_core_module ngx_http_dav_module ngx_http_empty_gif_module ngx_http_f4f_module ngx_http_fastcgi_module ngx_http_flv_module ngx_http_geo_module ngx_http_geoip_module ngx_http_grpc_module ngx_http_gunzip_module ngx_http_gzip_module ngx_http_gzip_static_module ngx_http_headers_module ngx_http_hls_module ngx_http_image_filter_module ngx_http_index_module ngx_http_js_module ngx_http_keyval_module ngx_http_limit_conn_module ngx_http_limit_req_module ngx_http_log_module ngx_http_map_module ngx_http_memcached_module ngx_http_mirror_module ngx_http_mp4_module ngx_http_perl_module ngx_http_proxy_module ngx_http_random_index_module ngx_http_realip_module ngx_http_referer_module ngx_http_rewrite_module ngx_http_scgi_module ngx_http_secure_link_module ngx_http_session_log_module ngx_http_slice_module ngx_http_spdy_module ngx_http_split_clients_module ngx_http_ssi_module ngx_http_ssl_module ngx_http_status_module ngx_http_stub_status_module ngx_http_sub_module ngx_http_upstream_conf_module ngx_http_upstream_hc_module ngx_http_upstream_module ngx_http_userid_module ngx_http_uwsgi_module ngx_http_v2_module ngx_http_xslt_module ngx_mail_auth_http_module ngx_mail_core_module ngx_mail_imap_module ngx_mail_pop3_module ngx_mail_proxy_module ngx_mail_realip_module ngx_mail_smtp_module ngx_mail_ssl_module ngx_stream_access_module ngx_stream_core_module ngx_stream_geo_module ngx_stream_geoip_module ngx_stream_js_module ngx_stream_keyval_module ngx_stream_limit_conn_module ngx_stream_log_module ngx_stream_map_module ngx_stream_proxy_module ngx_stream_realip_module ngx_stream_return_module ngx_stream_set_module ngx_stream_split_clients_module ngx_stream_ssl_module ngx_stream_ssl_preread_module ngx_stream_upstream_hc_module ngx_stream_upstream_module ngx_stream_zone_sync_module request_processing server_names stream_processing switches syntax sys_errlist syslog variables_in_config websocket welcome_nginx_facebook windows

module accept_failed
  section 18 652 name

module beginners_guide
  section 18 1416 name
  section 1416 3769 starting, stopping, and reloading configuration
  section 3769 4787 configuration fileâ€™s structure
  section 4787 8623 serving static content
  section 8623 12076 setting up a simple proxy server
  section 12076 13454 setting up fastcgi proxying

module chunked_encoding_from_backend
  section 18 883 name

module configure
  section 18 25619 name

module configuring_https_servers
  section 18 1734 name
  section 1734 3242 https server optimization
  section 3242 6922 ssl certificate chains
  section 6922 7754 a single http/https server
  section 7754 11984 name-based https servers
  section 9049 10382 an ssl certificate with several names
  section 10382 11984 server name indication
  section 11984 13298 compatibility

module contributing_changes
  section 18 78 name
  section 78 314 getting sources
  section 314 2243 formatting changes
  section 2243 2840 before submitting
  section 2840 3110 submitting changes
  section 3110 3246 license

module control
  section 18 899 name
  section 899 3107 changing configuration
  section 3107 3731 rotating log-files
  section 3731 7796 upgrading executable on the fly

module converting_rewrite_rules
  section 18 86 name
  section 86 1951 a redirect to a main site
  section 1951 2913 converting mongrel rules

module daemon_master_process_off
  section 18 929 name

module debugging_log
  section 18 1494 name
  section 1494 1787 debugging log for selected clients
  section 1787 2386 logging to a cyclic memory buffer

module development_guide
  section 18 72 name
  section 72 3391 introduction
  section 94 801 code layout
  section 801 1206 include files
  section 1206 1384 integers
  section 1384 2060 common return codes
  section 2060 3391 error handling
  section 3391 11744 strings
  section 3408 6020 overview
  section 6020 7113 formatting
  section 7113 8175 numeric conversion
  section 8175 11744 regular expressions
  section 11744 14118 time
  section 14118 27846 containers
  section 14138 15681 array
  section 15681 18010 list
  section 18010 19779 queue
  section 19779 22802 red-black tree
  section 22802 27846 hash
  section 25604 27846 wildcard matching
  section 27846 36805 memory management
  section 27873 28688 heap
  section 28688 32097 pool
  section 32097 36805 shared memory
  section 36805 39939 logging
  section 39939 44126 cycle
  section 44126 47861 buffer
  section 47861 51113 networking
  section 47881 51113 connection
  section 51113 58493 events
  section 51129 53078 event
  section 53078 54162 i/o events
  section 54162 54966 timer events
  section 54966 56706 posted events
  section 56706 58493 event loop
  section 58493 63299 processes
  section 63299 67573 threads
  section 67573 85484 modules
  section 67590 71021 adding new modules
  section 71021 77448 core modules
  section 77448 85484 configuration directives
  section 85484 169288 http
  section 85498 88418 connection
  section 88418 98233 request
  section 98233 103817 configuration
  section 103817 111014 phases
  section 111014 118674 variables
  section 111033 113975 accessing existing variables
  section 113975 118674 creating variables
  section 118674 121070 complex values
  section 121070 124505 request redirection
  section 124505 131515 subrequests
  section 131515 133492 request finalization
  section 133492 138206 request body
  section 138206 143928 request body filters
  section 143928 149272 response
  section 144303 145627 response header
  section 145627 149272 header filters
  section 149272 150760 response body
  section 150760 156082 response body filters
  section 156082 157215 building filter modules
  section 157215 160767 buffer reuse
  section 160767 169288 load balancing
  section 169288 169420 examples
  section 169420 183508 code style
  section 169440 170365 general rules
  section 170365 171625 files
  section 171625 172086 comments
  section 172086 173142 preprocessor
  section 173142 175412 types
  section 175412 176930 variables
  section 176930 178712 functions
  section 178712 180756 expressions
  section 180756 183023 conditionals and loops
  section 183023 183508 labels
  section 183508 184748 debugging memory issues
  section 184748 189507 common pitfalls
  section 184773 185439 writing a c module
  section 185439 185916 c strings
  section 185916 186600 global variables
  section 186600 187067 manual memory management
  section 187067 187648 threads
  section 187648 188125 blocking libraries
  section 188125 189507 http requests to external services

module events
  section 18 1854 name

module example
  section 18 4369 name

module faq
  section 18 325 name

module freebsd_tuning
  section 18 83 name
  section 83 302 syncache and syncookies
  section 302 1826 listen queues
  section 1826 1877 sockets and files
  section 1877 3863 socket buffers
  section 3863 7821 mbufs, mbuf clusters, etc.
  section 7821 7961 proxying
  section 7961 8042 finalizing connection
  section 8042 8099 i386 specific tuning
  section 8099 8189 minor optimizations

module hash
  section 18 1414 name

module howto_build_on_win32
  section 18 108 name
  section 108 809 prerequisites
  section 809 2397 build steps
  section 2397 2462 see also

module install
  section 18 146 name
  section 146 254 installation on linux
  section 254 679 installation on freebsd
  section 679 949 building from sources

module license_copyright
  section 18 729 name

module load_balancing
  section 18 85 name
  section 85 529 introduction
  section 529 1038 load balancing methods
  section 1038 2291 default load balancing configuration
  section 2291 3072 least connected load balancing
  section 3072 4215 session persistence
  section 4215 5439 weighted load balancing
  section 5439 6439 health checks
  section 6439 7570 further reading

module nginx
  section 18 62 name
  section 62 861 introduction
  section 861 1213 how-to
  section 1213 1327 development
  section 1327 6949 modules reference

module nginx_dtrace_pid_provider
  section 18 5021 name
  section 5021 5287 see also

module ngx_core_module
  section 17 71 name
  section 71 297 example configuration
  section 297 14866 directives
  section 316 930 accept_mutex
  section 930 1262 accept_mutex_delay
  section 1262 1457 daemon
  section 1457 2371 debug_connection
  section 2371 2766 debug_points
  section 2766 4064 env
  section 4064 5726 error_log
  section 5726 5908 events
  section 5908 6243 include
  section 6243 6472 load_module
  section 6472 6917 lock_file
  section 6917 7145 master_process
  section 7145 7596 multi_accept
  section 7596 8255 pcre_jit
  section 8255 8441 pid
  section 8441 8584 ssl_engine
  section 8584 9377 thread_pool
  section 9377 10052 timer_resolution
  section 10052 10313 use
  section 10313 10590 user
  section 10590 11003 worker_aio_requests
  section 11003 11584 worker_connections
  section 11584 12748 worker_cpu_affinity
  section 12748 13102 worker_priority
  section 13102 13683 worker_processes
  section 13683 13946 worker_rlimit_core
  section 13946 14218 worker_rlimit_nofile
  section 14218 14560 worker_shutdown_timeout
  section 14560 14866 working_directory

module ngx_google_perftools_module
  section 17 560 name
  section 560 736 example configuration
  section 736 1072 directives
  section 755 1072 google_perftools_profiles

module ngx_http_access_module
  aliases ngx_access
  section 17 484 name
  section 484 1060 example configuration
  section 1060 1847 directives
  section 1079 1464 allow
  section 1464 1847 deny

module ngx_http_addition_module
  aliases ngx_addition
  section 17 325 name
  section 325 471 example configuration
  section 471 1583 directives
  section 490 839 add_before_body
  section 839 1185 add_after_body
  section 1185 1583 addition_types

module ngx_http_api_module_head
  section 17 840 name
  section 840 2987 example configuration
  section 2987 4537 directives
  section 3006 3750 api
  section 3750 4537 status_zone
  section 4537 5617 compatibility

module ngx_http_auth_basic_module
  aliases ngx_auth_basic
  section 17 568 name
  section 568 723 example configuration
  section 723 2737 directives
  section 742 1278 auth_basic
  section 1278 2737 auth_basic_user_file

module ngx_http_auth_jwt_module
  aliases ngx_auth_jwt
  section 17 994 name
  section 994 1922 supported algorithms
  section 1922 2072 example configuration
  section 2072 7994 directives
  section 2091 2929 auth_jwt
  section 2929 3681 auth_jwt_claim_set
  section 3681 4183 auth_jwt_header_set
  section 4183 4614 auth_jwt_key_cache
  section 4614 5281 auth_jwt_key_file
  section 5281 6520 auth_jwt_key_request
  section 6520 6965 auth_jwt_leeway
  section 6965 7427 auth_jwt_type
  section 7427 7994 auth_jwt_require
  section 7994 8928 embedded variables
  section 8105 8248 $jwt_header_i<name>
  section 8248 8703 $jwt_claim_i<name>
  section 8703 8928 $jwt_payload

module ngx_http_auth_request_module
  aliases ngx_auth_request
  section 17 1139 name
  section 1139 1446 example configuration
  section 1446 2122 directives
  section 1465 1759 auth_request
  section 1759 2122 auth_request_set

module ngx_http_autoindex_module
  aliases ngx_autoindex
  section 17 413 name
  section 413 502 example configuration
  section 502 2023 directives
  section 521 742 autoindex
  section 742 1091 autoindex_exact_size
  section 1091 1714 autoindex_format
  section 1714 2023 autoindex_localtime

module ngx_http_browser_module
  aliases ngx_browser
  section 17 618 name
  section 243 378 $modern_browser
  section 378 516 $ancient_browser
  section 516 618 $msie
  section 618 1322 example configuration
  section 1322 3117 directives
  section 1341 1731 ancient_browser
  section 1731 1966 ancient_browser_value
  section 1966 2885 modern_browser
  section 2885 3117 modern_browser_value

module ngx_http_charset_module
  aliases ngx_charset
  section 17 511 name
  section 511 653 example configuration
  section 653 4967 directives
  section 672 2022 charset
  section 2022 3190 charset_map
  section 3190 3856 charset_types
  section 3856 4628 override_charset
  section 4628 4967 source_charset

module ngx_http_core_module
  aliases ngx_core
  section 17 85 name
  section 85 66081 directives
  section 104 472 absolute_redirect
  section 472 2923 aio
  section 2923 3347 aio_write
  section 3347 4352 alias
  section 4352 4817 auth_delay
  section 4817 5197 chunked_transfer_encoding
  section 5197 5716 client_body_buffer_size
  section 5716 6441 client_body_in_file_only
  section 6441 6857 client_body_in_single_buffer
  section 6857 7489 client_body_temp_path
  section 7489 7976 client_body_timeout
  section 7976 8702 client_header_buffer_size
  section 8702 9049 client_header_timeout
  section 9049 9554 client_max_body_size
  section 9554 10042 connection_pool_size
  section 10042 10356 default_type
  section 10356 10971 directio
  section 10971 11347 directio_alignment
  section 11347 13532 disable_symlinks
  section 11732 11842 off
  section 11842 11942 on
  section 11942 12122 if_not_owner
  section 12122 13532 from=part
  section 13532 15687 error_page
  section 15687 15992 etag
  section 15992 16148 http
  section 16148 16821 if_modified_since
  section 16544 16631 off
  section 16631 16666 exact
  section 16666 16821 before
  section 16821 17399 ignore_invalid_headers
  section 17399 18710 internal
  section 18710 19541 keepalive_disable
  section 19541 20205 keepalive_requests
  section 20205 20616 keepalive_time
  section 20616 21291 keepalive_timeout
  section 21291 22238 large_client_header_buffers
  section 22238 23078 limit_except
  section 23078 24309 limit_rate
  section 24309 24837 limit_rate_after
  section 24837 25840 lingering_close
  section 25840 26254 lingering_time
  section 26254 26818 lingering_timeout
  section 26818 35707 listen
  section 35707 39873 location
  section 39873 40136 log_not_found
  section 40136 40389 log_subrequest
  section 40389 40841 max_ranges
  section 40841 41875 merge_slashes
  section 41875 42190 msie_padding
  section 42190 42444 msie_refresh
  section 42444 43701 open_file_cache
  section 43701 43969 open_file_cache_errors
  section 43969 44361 open_file_cache_min_uses
  section 44361 44618 open_file_cache_valid
  section 44618 44959 output_buffers
  section 44959 45335 port_in_redirect
  section 45335 45683 postpone_output
  section 45683 46251 read_ahead
  section 46251 46567 recursive_error_pages
  section 46567 46856 request_pool_size
  section 46856 47627 reset_timedout_connection
  section 47627 49328 resolver
  section 49328 49583 resolver_timeout
  section 49583 50294 root
  section 50294 50985 satisfy
  section 50985 51471 send_lowat
  section 51471 51891 send_timeout
  section 51891 52905 sendfile
  section 52905 53307 sendfile_max_chunk
  section 53307 53819 server
  section 53819 56553 server_name
  section 56553 57157 server_name_in_redirect
  section 57157 57537 server_names_hash_bucket_size
  section 57537 57824 server_names_hash_max_size
  section 57824 58556 server_tokens
  section 58556 59205 subrequest_output_buffer_size
  section 59205 59634 tcp_nodelay
  section 59634 60185 tcp_nopush
  section 60185 63234 try_files
  section 63234 64105 types
  section 64105 64528 types_hash_bucket_size
  section 64528 64845 types_hash_max_size
  section 64845 65464 underscores_in_headers
  section 65464 65740 variables_hash_bucket_size
  section 65740 66081 variables_hash_max_size
  section 66081 73225 embedded variables
  section 66398 66470 $arg_i<name>
  section 66470 66522 $args
  section 66522 66676 $binary_remote_addr
  section 66676 66875 $body_bytes_sent
  section 66875 66951 $bytes_sent
  section 66951 67019 $connection
  section 67019 67124 $connection_requests
  section 67124 67225 $connection_time
  section 67225 67296 $content_length
  section 67296 67363 $content_type
  section 67363 67420 $cookie_i<name>
  section 67420 67517 $document_root
  section 67517 67563 $document_uri
  section 67563 67737 $host
  section 67737 67773 $hostname
  section 67773 67949 $http_i<name>
  section 67949 68049 $https
  section 68049 68147 $is_args
  section 68147 68248 $limit_rate
  section 68248 68342 $msec
  section 68342 68387 $nginx_version
  section 68387 68434 $pid
  section 68434 68530 $pipe
  section 68530 68744 $proxy_protocol_addr
  section 68744 68955 $proxy_protocol_port
  section 68955 69176 $proxy_protocol_server_addr
  section 69176 69394 $proxy_protocol_server_port
  section 69394 69441 $query_string
  section 69441 69628 $realpath_root
  section 69628 69672 $remote_addr
  section 69672 69713 $remote_port
  section 69713 69791 $remote_user
  section 69791 69843 $request
  section 69843 70131 $request_body
  section 70131 70787 $request_body_file
  section 70787 70892 $request_completion
  section 70892 71028 $request_filename
  section 71028 71138 $request_id
  section 71138 71252 $request_length
  section 71252 71338 $request_method
  section 71338 71511 $request_time
  section 71511 71583 $request_uri
  section 71583 71655 $scheme
  section 71655 71837 $sent_http_i<name>
  section 71837 72047 $sent_trailer_i<name>
  section 72047 72303 $server_addr
  section 72303 72376 $server_name
  section 72376 72449 $server_port
  section 72449 72601 $server_protocol
  section 72601 72861 $status
  section 72861 72950 $time_iso8601
  section 72950 73030 $time_local
  section 73030 73225 $uri

module ngx_http_dav_module
  aliases ngx_dav
  section 17 516 name
  section 516 916 example configuration
  section 916 3322 directives
  section 935 1281 create_full_put_path
  section 1281 1731 dav_access
  section 1731 2783 dav_methods
  section 2783 3322 min_delete_depth

module ngx_http_empty_gif_module
  aliases ngx_empty_gif
  section 17 185 name
  section 185 278 example configuration
  section 278 408 directives
  section 297 408 empty_gif

module ngx_http_f4f_module
  aliases ngx_f4f
  section 17 699 name
  section 699 797 example configuration
  section 797 1170 directives
  section 816 923 f4f
  section 923 1170 f4f_buffer_size

module ngx_http_fastcgi_module
  aliases ngx_fastcgi
  section 17 188 name
  section 188 628 example configuration
  section 628 40317 directives
  section 647 1912 fastcgi_bind
  section 1912 2409 fastcgi_buffer_size
  section 2409 3673 fastcgi_buffering
  section 3673 4106 fastcgi_buffers
  section 4106 4781 fastcgi_busy_buffers_size
  section 4781 5191 fastcgi_cache
  section 5191 5681 fastcgi_cache_background_update
  section 5681 6260 fastcgi_cache_bypass
  section 6260 6514 fastcgi_cache_key
  section 6514 7155 fastcgi_cache_lock
  section 7155 7570 fastcgi_cache_lock_age
  section 7570 8027 fastcgi_cache_lock_timeout
  section 8027 8432 fastcgi_cache_max_range_offset
  section 8432 8977 fastcgi_cache_methods
  section 8977 9237 fastcgi_cache_min_uses
  section 9237 14387 fastcgi_cache_path
  section 14387 15764 fastcgi_cache_purge
  section 15764 16147 fastcgi_cache_revalidate
  section 16147 17958 fastcgi_cache_use_stale
  section 17958 19848 fastcgi_cache_valid
  section 19848 20467 fastcgi_catch_stderr
  section 20467 20796 fastcgi_connect_timeout
  section 20796 21185 fastcgi_force_ranges
  section 21185 21677 fastcgi_hide_header
  section 21677 22025 fastcgi_ignore_client_abort
  section 22025 23144 fastcgi_ignore_headers
  section 23144 23848 fastcgi_index
  section 23848 24263 fastcgi_intercept_errors
  section 24263 24811 fastcgi_keep_conn
  section 24811 25444 fastcgi_limit_rate
  section 25444 26237 fastcgi_max_temp_file_size
  section 26237 28745 fastcgi_next_upstream
  section 26756 26900 error
  section 26900 27051 timeout
  section 27051 27128 invalid_header
  section 27128 27199 http_500
  section 27199 27270 http_503
  section 27270 27341 http_403
  section 27341 27412 http_404
  section 27412 27493 http_429
  section 27493 27819 non_idempotent
  section 27819 28745 off
  section 28745 29102 fastcgi_next_upstream_timeout
  section 29102 29462 fastcgi_next_upstream_tries
  section 29462 30012 fastcgi_no_cache
  section 30012 31539 fastcgi_param
  section 31539 32354 fastcgi_pass
  section 32354 32598 fastcgi_pass_header
  section 32598 32934 fastcgi_pass_request_body
  section 32934 33290 fastcgi_pass_request_headers
  section 33290 33742 fastcgi_read_timeout
  section 33742 34422 fastcgi_request_buffering
  section 34422 34934 fastcgi_send_lowat
  section 34934 35384 fastcgi_send_timeout
  section 35384 35910 fastcgi_socket_keepalive
  section 35910 36812 fastcgi_split_path_info
  section 36812 38482 fastcgi_store
  section 38482 38972 fastcgi_store_access
  section 38972 39545 fastcgi_temp_file_write_size
  section 39545 40317 fastcgi_temp_path
  section 40317 40785 parameters passed to a fastcgi server
  section 40785 41945 embedded variables
  section 40964 41755 $fastcgi_script_name
  section 41755 41945 $fastcgi_path_info

module ngx_http_flv_module
  aliases ngx_flv
  section 17 542 name
  section 542 629 example configuration
  section 629 753 directives
  section 648 753 flv

module ngx_http_geo_module
  aliases ngx_geo
  section 17 197 name
  section 197 428 example configuration
  section 428 3843 directives
  section 447 3843 geo
  section 1419 1482 delete
  section 1482 1809 default
  section 1809 1909 include
  section 1909 2271 proxy
  section 2271 2717 proxy_recursive
  section 2717 3843 ranges

module ngx_http_geoip_module
  aliases ngx_geoip
  section 17 620 name
  section 620 903 example configuration
  section 903 4564 directives
  section 922 1511 geoip_country
  section 1173 1273 $geoip_country_code
  section 1273 1379 $geoip_country_code3
  section 1379 1511 $geoip_country_name
  section 1511 3202 geoip_city
  section 1774 2058 $geoip_area_code
  section 2058 2164 $geoip_city_country_code
  section 2164 2275 $geoip_city_country_code3
  section 2275 2397 $geoip_city_country_name
  section 2397 2615 $geoip_dma_code
  section 2615 2655 $geoip_latitude
  section 2655 2697 $geoip_longitude
  section 2697 2862 $geoip_region
  section 2862 3048 $geoip_region_name
  section 3048 3138 $geoip_city
  section 3138 3202 $geoip_postal_code
  section 3202 3603 geoip_org
  section 3493 3603 $geoip_org
  section 3603 3964 geoip_proxy
  section 3964 4564 geoip_proxy_recursive

module ngx_http_grpc_module
  aliases ngx_grpc
  section 17 259 name
  section 259 423 example configuration
  section 423 15482 directives
  section 442 1596 grpc_bind
  section 1596 1953 grpc_buffer_size
  section 1953 2273 grpc_connect_timeout
  section 2273 2760 grpc_hide_header
  section 2760 3380 grpc_ignore_headers
  section 3380 3786 grpc_intercept_errors
  section 3786 6489 grpc_next_upstream
  section 4351 4495 error
  section 4495 4646 timeout
  section 4646 4723 invalid_header
  section 4723 4794 http_500
  section 4794 4865 http_502
  section 4865 4936 http_503
  section 4936 5007 http_504
  section 5007 5078 http_403
  section 5078 5149 http_404
  section 5149 5220 http_429
  section 5220 5537 non_idempotent
  section 5537 6489 off
  section 6489 6795 grpc_next_upstream_timeout
  section 6795 7104 grpc_next_upstream_tries
  section 7104 8138 grpc_pass
  section 8138 8373 grpc_pass_header
  section 8373 8813 grpc_read_timeout
  section 8813 9251 grpc_send_timeout
  section 9251 9931 grpc_set_header
  section 9931 10448 grpc_socket_keepalive
  section 10448 10790 grpc_ssl_certificate
  section 10790 11315 grpc_ssl_certificate_key
  section 11315 11712 grpc_ssl_ciphers
  section 11712 12509 grpc_ssl_conf_command
  section 12509 12782 grpc_ssl_crl
  section 12782 13198 grpc_ssl_name
  section 13198 13526 grpc_ssl_password_file
  section 13526 13874 grpc_ssl_protocols
  section 13874 14287 grpc_ssl_server_name
  section 14287 14674 grpc_ssl_session_reuse
  section 14674 14976 grpc_ssl_trusted_certificate
  section 14976 15228 grpc_ssl_verify
  section 15228 15482 grpc_ssl_verify_depth

module ngx_http_gunzip_module
  aliases ngx_gunzip
  section 17 516 name
  section 516 622 example configuration
  section 622 1515 directives
  section 641 1131 gunzip
  section 1131 1515 gunzip_buffers

module ngx_http_gzip_module
  aliases ngx_gzip
  section 17 423 name
  section 423 709 example configuration
  section 709 5236 directives
  section 728 964 gzip
  section 964 1419 gzip_buffers
  section 1419 1689 gzip_comp_level
  section 1689 2223 gzip_disable
  section 2223 2487 gzip_http_version
  section 2487 2799 gzip_min_length
  section 2799 4471 gzip_proxied
  section 3428 3522 off
  section 3522 3653 expired
  section 3653 3793 no-cache
  section 3793 3933 no-store
  section 3933 4071 private
  section 4071 4190 no_last_modified
  section 4190 4291 no_etag
  section 4291 4389 auth
  section 4389 4471 any
  section 4471 4883 gzip_types
  section 4883 5236 gzip_vary
  section 5236 5416 embedded variables
  section 5275 5416 $gzip_ratio

module ngx_http_gzip_static_module
  aliases ngx_gzip_static
  section 17 388 name
  section 388 510 example configuration
  section 510 1436 directives
  section 529 1436 gzip_static

module ngx_http_headers_module
  aliases ngx_headers
  section 17 252 name
  section 252 489 example configuration
  section 489 3898 directives
  section 508 1242 add_header
  section 1242 1979 add_trailer
  section 1979 3898 expires

module ngx_http_hls_module
  aliases ngx_hls
  section 17 1284 name
  section 1284 1850 example configuration
  section 1850 5661 directives
  section 1869 1972 hls
  section 1972 2256 hls_buffers
  section 2256 4600 hls_forward_args
  section 4600 4863 hls_fragment
  section 4863 5124 hls_mp4_buffer_size
  section 5124 5661 hls_mp4_max_buffer_size

module ngx_http_image_filter_module
  aliases ngx_image_filter
  section 17 673 name
  section 673 939 example configuration
  section 939 5420 directives
  section 958 3019 image_filter
  section 1448 1523 off
  section 1523 1689 test
  section 1689 1900 size
  section 1900 2160 rotate
  section 2160 2560 resize
  section 2560 3019 crop
  section 3019 3345 image_filter_buffer
  section 3345 3698 image_filter_interlace
  section 3698 4160 image_filter_jpeg_quality
  section 4160 4498 image_filter_sharpen
  section 4498 4949 image_filter_transparency
  section 4949 5420 image_filter_webp_quality

module ngx_http_index_module
  aliases ngx_index
  section 17 379 name
  section 379 488 example configuration
  section 488 1322 directives
  section 507 1322 index

module ngx_http_js_module
  aliases ngx_js
  section 17 308 name
  section 308 3001 example configuration
  section 3001 11218 directives
  section 3020 4707 js_body_filter
  section 3440 3495 r
  section 3495 3630 data
  section 3630 3699 flags
  section 3699 4707 last
  section 4707 4981 js_content
  section 4981 5299 js_fetch_buffer_size
  section 5299 5763 js_fetch_ciphers
  section 5763 6096 js_fetch_max_response_buffer_size
  section 6096 6472 js_fetch_protocols
  section 6472 6933 js_fetch_timeout
  section 6933 7304 js_fetch_trusted_certificate
  section 7304 7625 js_fetch_verify
  section 7625 7951 js_fetch_verify_depth
  section 7951 8533 js_header_filter
  section 8533 9183 js_import
  section 9183 9702 js_include
  section 9702 9874 js_path
  section 9874 10845 js_set
  section 10845 11218 js_var
  section 11218 11325 request argument

module ngx_http_keyval_module
  aliases ngx_keyval
  section 17 494 name
  section 494 878 example configuration
  section 878 3569 directives
  section 897 1294 keyval
  section 1294 3569 keyval_zone
  section 2530 2670 type=string
  section 2670 2897 type=ip
  section 2897 3569 type=prefix

module ngx_http_limit_conn_module
  aliases ngx_limit_conn
  section 17 452 name
  section 452 714 example configuration
  section 714 5030 directives
  section 733 2015 limit_conn
  section 2015 2427 limit_conn_dry_run
  section 2427 2802 limit_conn_log_level
  section 2802 3088 limit_conn_status
  section 3088 4648 limit_conn_zone
  section 4648 5030 limit_zone
  section 5030 5229 embedded variables
  section 5069 5229 $limit_conn_status

module ngx_http_limit_req_module
  aliases ngx_limit_req
  section 17 362 name
  section 362 639 example configuration
  section 639 5935 directives
  section 658 2580 limit_req
  section 2580 2986 limit_req_dry_run
  section 2986 3576 limit_req_log_level
  section 3576 3860 limit_req_status
  section 3860 5935 limit_req_zone
  section 5935 6167 embedded variables
  section 5974 6167 $limit_req_status

module ngx_http_log_module
  aliases ngx_log
  section 17 384 name
  section 384 713 example configuration
  section 713 8364 directives
  section 732 4083 access_log
  section 4083 7158 log_format
  section 5228 5293 $bytes_sent
  section 5293 5346 $connection
  section 5346 5450 $connection_requests
  section 5450 5548 $msec
  section 5548 5628 $pipe
  section 5628 5726 $request_length
  section 5726 5949 $request_time
  section 5949 5989 $status
  section 5989 6062 $time_iso8601
  section 6062 7158 $time_local
  section 7158 8364 open_log_file_cache
  section 7606 7756 max
  section 7756 7904 inactive
  section 7904 8077 min_uses
  section 8077 8216 valid
  section 8216 8364 off

module ngx_http_map_module
  aliases ngx_map
  section 17 199 name
  section 199 576 example configuration
  section 576 3859 directives
  section 595 3228 map
  section 1949 2157 default value
  section 2157 2493 hostnames
  section 2493 2590 include file
  section 2590 3228 volatile
  section 3228 3584 map_hash_bucket_size
  section 3584 3859 map_hash_max_size

module ngx_http_memcached_module
  aliases ngx_memcached
  section 17 329 name
  section 329 657 example configuration
  section 657 7804 directives
  section 676 1956 memcached_bind
  section 1956 2328 memcached_buffer_size
  section 2328 2663 memcached_connect_timeout
  section 2663 3058 memcached_force_ranges
  section 3058 3455 memcached_gzip_flag
  section 3455 5059 memcached_next_upstream
  section 3845 3989 error
  section 3989 4140 timeout
  section 4140 4219 invalid_response
  section 4219 4283 not_found
  section 4283 5059 off
  section 5059 5420 memcached_next_upstream_timeout
  section 5420 5784 memcached_next_upstream_tries
  section 5784 6354 memcached_pass
  section 6354 6814 memcached_read_timeout
  section 6814 7272 memcached_send_timeout
  section 7272 7804 memcached_socket_keepalive
  section 7804 7949 embedded variables
  section 7843 7949 $memcached_key

module ngx_http_mirror_module
  aliases ngx_mirror
  section 17 281 name
  section 281 513 example configuration
  section 513 1714 directives
  section 532 827 mirror
  section 827 1714 mirror_request_body

module ngx_http_mp4_module
  aliases ngx_mp4
  section 17 3232 name
  section 3232 3455 example configuration
  section 3455 6082 directives
  section 3474 3579 mp4
  section 3579 3824 mp4_buffer_size
  section 3824 4349 mp4_max_buffer_size
  section 4349 5128 mp4_limit_rate
  section 5128 5546 mp4_limit_rate_after
  section 5546 6082 mp4_start_key_frame

module ngx_http_perl_module
  aliases ngx_perl
  section 17 514 name
  section 514 1950 known issues
  section 1950 2905 example configuration
  section 2905 3688 directives
  section 2924 3121 perl
  section 3121 3258 perl_modules
  section 3258 3484 perl_require
  section 3484 3688 perl_set
  section 3688 3930 calling perl from ssi
  section 3930 8828 the $r request object methods
  section 3980 4036 $r->args
  section 4036 5093 $r->filename
  section 5093 5185 $r->allow_ranges
  section 5185 5275 $r->discard_request_body
  section 5275 5386 $r->header_in(field)
  section 5386 5932 $r->header_only
  section 5932 6153 c<$r->log_error(errno,
  section 6153 6225 $r->print(text, ...)
  section 6225 6524 $r->request_body
  section 6524 6760 $r->request_body_file
  section 6760 6839 $r->request_method
  section 6839 6906 $r->remote_addr
  section 6906 7558 $r->flush
  section 7558 8513 $r->status(code)
  section 8513 8604 $r->unescape(text)
  section 8604 8828 $r->uri

module ngx_http_proxy_module
  aliases ngx_proxy
  section 17 180 name
  section 180 386 example configuration
  section 386 56054 directives
  section 405 1662 proxy_bind
  section 1662 2155 proxy_buffer_size
  section 2155 3358 proxy_buffering
  section 3358 3787 proxy_buffers
  section 3787 4454 proxy_busy_buffers_size
  section 4454 4860 proxy_cache
  section 4860 5346 proxy_cache_background_update
  section 5346 5914 proxy_cache_bypass
  section 5914 6354 proxy_cache_convert_head
  section 6354 6779 proxy_cache_key
  section 6779 7412 proxy_cache_lock
  section 7412 7823 proxy_cache_lock_age
  section 7823 8274 proxy_cache_lock_timeout
  section 8274 8675 proxy_cache_max_range_offset
  section 8675 9214 proxy_cache_methods
  section 9214 9470 proxy_cache_min_uses
  section 9470 14597 proxy_cache_path
  section 14597 15952 proxy_cache_purge
  section 15952 16331 proxy_cache_revalidate
  section 16331 18165 proxy_cache_use_stale
  section 18165 20037 proxy_cache_valid
  section 20037 20362 proxy_connect_timeout
  section 20362 22032 proxy_cookie_domain
  section 22032 23419 proxy_cookie_flags
  section 23419 24979 proxy_cookie_path
  section 24979 25364 proxy_force_ranges
  section 25364 25761 proxy_headers_hash_bucket_size
  section 25761 26153 proxy_headers_hash_max_size
  section 26153 26657 proxy_hide_header
  section 26657 27103 proxy_http_version
  section 27103 27447 proxy_ignore_client_abort
  section 27447 28562 proxy_ignore_headers
  section 28562 28966 proxy_intercept_errors
  section 28966 29595 proxy_limit_rate
  section 29595 30378 proxy_max_temp_file_size
  section 30378 30703 proxy_method
  section 30703 33427 proxy_next_upstream
  section 31270 31414 error
  section 31414 31565 timeout
  section 31565 31642 invalid_header
  section 31642 31713 http_500
  section 31713 31784 http_502
  section 31784 31855 http_503
  section 31855 31926 http_504
  section 31926 31997 http_403
  section 31997 32068 http_404
  section 32068 32149 http_429
  section 32149 32475 non_idempotent
  section 32475 33427 off
  section 33427 33780 proxy_next_upstream_timeout
  section 33780 34136 proxy_next_upstream_tries
  section 34136 34676 proxy_no_cache
  section 34676 37676 proxy_pass
  section 37676 37916 proxy_pass_header
  section 37916 38460 proxy_pass_request_body
  section 38460 39020 proxy_pass_request_headers
  section 39020 39468 proxy_read_timeout
  section 39468 42283 proxy_redirect
  section 42283 43166 proxy_request_buffering
  section 43166 43674 proxy_send_lowat
  section 43674 44120 proxy_send_timeout
  section 44120 44403 proxy_set_body
  section 44403 46069 proxy_set_header
  section 46069 46591 proxy_socket_keepalive
  section 46591 46985 proxy_ssl_certificate
  section 46985 47570 proxy_ssl_certificate_key
  section 47570 48019 proxy_ssl_ciphers
  section 48019 48825 proxy_ssl_conf_command
  section 48825 49150 proxy_ssl_crl
  section 49150 49622 proxy_ssl_name
  section 49622 49997 proxy_ssl_password_file
  section 49997 50397 proxy_ssl_protocols
  section 50397 50862 proxy_ssl_server_name
  section 50862 51254 proxy_ssl_session_reuse
  section 51254 51608 proxy_ssl_trusted_certificate
  section 51608 51912 proxy_ssl_verify
  section 51912 52218 proxy_ssl_verify_depth
  section 52218 54251 proxy_store
  section 54251 54733 proxy_store_access
  section 54733 55296 proxy_temp_file_write_size
  section 55296 56054 proxy_temp_path
  section 56054 56811 embedded variables
  section 56235 56341 $proxy_host
  section 56341 56811 $proxy_port

module ngx_http_random_index_module
  aliases ngx_random_index
  section 17 515 name
  section 515 607 example configuration
  section 607 822 directives
  section 626 822 random_index

module ngx_http_realip_module
  aliases ngx_realip
  section 17 366 name
  section 366 586 example configuration
  section 586 2635 directives
  section 605 1126 set_real_ip_from
  section 1126 1965 real_ip_header
  section 1965 2635 real_ip_recursive
  section 2635 2841 embedded variables
  section 2674 2752 $realip_remote_addr
  section 2752 2841 $realip_remote_port

module ngx_http_referer_module
  aliases ngx_referer
  section 17 626 name
  section 626 876 example configuration
  section 876 3136 directives
  section 895 1246 referer_hash_bucket_size
  section 1246 1599 referer_hash_max_size
  section 1599 3136 valid_referers
  section 2088 2164 none
  section 2164 2411 blocked
  section 2411 2510 server_names
  section 2510 2729 arbitrary string
  section 2729 3136 regular expression
  section 3136 3323 embedded variables
  section 3175 3323 $invalid_referer

module ngx_http_rewrite_module
  aliases ngx_rewrite
  section 17 852 name
  section 852 8301 directives
  section 871 1258 break
  section 1258 3394 if
  section 3394 4881 return
  section 4881 7402 rewrite
  section 5598 5758 last
  section 5758 5887 break
  section 5887 6087 redirect
  section 6087 7402 permanent
  section 7402 7744 rewrite_log
  section 7744 8007 set
  section 8007 8301 uninitialized_variable_warn
  section 8301 9968 internal implementation

module ngx_http_scgi_module
  aliases ngx_scgi
  section 17 177 name
  section 177 309 example configuration
  section 309 35558 directives
  section 328 1528 scgi_bind
  section 1528 2016 scgi_buffer_size
  section 2016 3202 scgi_buffering
  section 3202 3626 scgi_buffers
  section 3626 4286 scgi_busy_buffers_size
  section 4286 4690 scgi_cache
  section 4690 5174 scgi_cache_background_update
  section 5174 5738 scgi_cache_bypass
  section 5738 5983 scgi_cache_key
  section 5983 6610 scgi_cache_lock
  section 6610 7013 scgi_cache_lock_age
  section 7013 7458 scgi_cache_lock_timeout
  section 7458 7854 scgi_cache_max_range_offset
  section 7854 8344 scgi_cache_methods
  section 8344 8598 scgi_cache_min_uses
  section 8598 13719 scgi_cache_path
  section 13719 15075 scgi_cache_purge
  section 15075 15452 scgi_cache_revalidate
  section 15452 17240 scgi_cache_use_stale
  section 17240 19103 scgi_cache_valid
  section 19103 19424 scgi_connect_timeout
  section 19424 19804 scgi_force_ranges
  section 19804 20282 scgi_hide_header
  section 20282 20622 scgi_ignore_client_abort
  section 20622 21732 scgi_ignore_headers
  section 21732 22141 scgi_intercept_errors
  section 22141 22759 scgi_limit_rate
  section 22759 23534 scgi_max_temp_file_size
  section 23534 26036 scgi_next_upstream
  section 24047 24191 error
  section 24191 24342 timeout
  section 24342 24419 invalid_header
  section 24419 24490 http_500
  section 24490 24561 http_503
  section 24561 24632 http_403
  section 24632 24703 http_404
  section 24703 24784 http_429
  section 24784 25110 non_idempotent
  section 25110 26036 off
  section 26036 26387 scgi_next_upstream_timeout
  section 26387 26741 scgi_next_upstream_tries
  section 26741 27276 scgi_no_cache
  section 27276 28211 scgi_param
  section 28211 29009 scgi_pass
  section 29009 29245 scgi_pass_header
  section 29245 29569 scgi_pass_request_body
  section 29569 29913 scgi_pass_request_headers
  section 29913 30353 scgi_read_timeout
  section 30353 31184 scgi_request_buffering
  section 31184 31622 scgi_send_timeout
  section 31622 32140 scgi_socket_keepalive
  section 32140 33777 scgi_store
  section 33777 34255 scgi_store_access
  section 34255 34810 scgi_temp_file_write_size
  section 34810 35558 scgi_temp_path

module ngx_http_secure_link_module
  aliases ngx_secure_link
  section 17 1102 name
  section 1102 5074 directives
  section 1121 2479 secure_link
  section 2479 3856 secure_link_md5
  section 3856 5074 secure_link_secret
  section 5074 5387 embedded variables
  section 5113 5229 $secure_link
  section 5229 5387 $secure_link_expires

module ngx_http_session_log_module
  aliases ngx_session_log
  section 17 346 name
  section 346 790 example configuration
  section 790 2805 directives
  section 809 1161 session_log
  section 1161 1559 session_log_format
  section 1559 2805 session_log_zone
  section 2805 3071 embedded variables
  section 2920 2972 $session_log_id
  section 2972 3071 $session_log_binary_id

module ngx_http_slice_module
  aliases ngx_slice
  section 17 427 name
  section 427 883 example configuration
  section 883 1646 directives
  section 902 1646 slice
  section 1646 1952 embedded variables
  section 1764 1952 $slice_range

module ngx_http_spdy_module
  aliases ngx_spdy
  section 17 718 name
  section 718 1190 known issues
  section 1190 1651 example configuration
  section 1651 2535 directives
  section 1670 2199 spdy_chunk_size
  section 2199 2535 spdy_headers_comp
  section 2535 2870 embedded variables
  section 2652 2748 $spdy
  section 2748 2870 $spdy_request_priority

module ngx_http_split_clients_module
  aliases ngx_split_clients
  section 17 239 name
  section 239 590 example configuration
  section 590 1350 directives
  section 609 1350 split_clients

module ngx_http_ssi_module
  aliases ngx_ssi
  section 17 288 name
  section 288 383 example configuration
  section 383 2489 directives
  section 402 654 ssi
  section 654 1236 ssi_last_modified
  section 1236 1556 ssi_min_file_chunk
  section 1556 1895 ssi_silent_errors
  section 1895 2253 ssi_types
  section 2253 2489 ssi_value_length
  section 2489 7932 ssi commands
  section 2683 2865 block
  section 2865 2992 name
  section 2992 3079 config
  section 3079 3275 errmsg
  section 3275 3536 timefmt
  section 3536 3639 echo
  section 3639 3678 var
  section 3678 3811 encoding
  section 3811 4227 default
  section 4227 4545 if
  section 4545 5386 expr
  section 5386 5515 include
  section 5515 5626 file
  section 5626 5972 virtual
  section 5972 6397 stub
  section 6397 6633 wait
  section 6633 7658 set
  section 7658 7755 set
  section 7755 7794 var
  section 7794 7932 value
  section 7932 8311 embedded variables
  section 8038 8177 $date_local
  section 8177 8311 $date_gmt

module ngx_http_ssl_module
  aliases ngx_ssl
  section 17 375 name
  section 375 1461 example configuration
  section 1461 19729 directives
  section 1480 1751 ssl
  section 1751 2219 ssl_buffer_size
  section 2219 4249 ssl_certificate
  section 4249 5077 ssl_certificate_key
  section 5077 5622 ssl_ciphers
  section 5622 6051 ssl_client_certificate
  section 6051 6865 ssl_conf_command
  section 6865 7128 ssl_crl
  section 7128 7509 ssl_dhparam
  section 7509 8242 ssl_early_data
  section 8242 9163 ssl_ecdh_curve
  section 9163 9845 ssl_ocsp
  section 9845 10356 ssl_ocsp_cache
  section 10356 10875 ssl_ocsp_responder
  section 10875 11678 ssl_password_file
  section 11678 11965 ssl_prefer_server_ciphers
  section 11965 12454 ssl_protocols
  section 12454 13177 ssl_reject_handshake
  section 13177 14580 ssl_session_cache
  section 13543 13679 off
  section 13679 13860 none
  section 13860 14095 builtin
  section 14095 14580 shared
  section 14580 15491 ssl_session_ticket_key
  section 15491 15817 ssl_session_tickets
  section 15817 16042 ssl_session_timeout
  section 16042 16825 ssl_stapling
  section 16825 17247 ssl_stapling_file
  section 17247 17739 ssl_stapling_responder
  section 17739 18233 ssl_stapling_verify
  section 18233 18706 ssl_trusted_certificate
  section 18706 19520 ssl_verify_client
  section 19520 19729 ssl_verify_depth
  section 19729 20301 error processing
  section 20301 24772 embedded variables
  section 20403 20541 $ssl_alpn_protocol
  section 20541 20640 $ssl_cipher
  section 20640 21045 $ssl_ciphers
  section 21045 21192 $ssl_client_escaped_cert
  section 21192 21551 $ssl_client_cert
  section 21551 21689 $ssl_client_fingerprint
  section 21689 21899 $ssl_client_i_dn
  section 21899 22115 $ssl_client_i_dn_legacy
  section 22115 22237 $ssl_client_raw_cert
  section 22237 22448 $ssl_client_s_dn
  section 22448 22665 $ssl_client_s_dn_legacy
  section 22665 22787 $ssl_client_serial
  section 22787 22878 $ssl_client_v_end
  section 22878 22989 $ssl_client_v_remain
  section 22989 23084 $ssl_client_v_start
  section 23084 23378 $ssl_client_verify
  section 23378 23741 $ssl_curve
  section 23741 24172 $ssl_curves
  section 24172 24315 $ssl_early_data
  section 24315 24400 $ssl_protocol
  section 24400 24543 $ssl_server_name
  section 24543 24640 $ssl_session_id
  section 24640 24772 $ssl_session_reused

module ngx_http_status_module
  aliases ngx_status
  section 17 364 name
  section 364 2668 example configuration
  section 2668 3734 directives
  section 2687 2881 status
  section 2881 3439 status_format
  section 3439 3734 status_zone
  section 3734 16158 data
  section 3805 3889 version
  section 3889 3937 nginx_version
  section 3937 3986 nginx_build
  section 3986 4066 address
  section 4066 4147 generation
  section 4147 4249 load_timestamp
  section 4249 4317 timestamp
  section 4317 4395 pid
  section 4395 4478 ppid
  section 4478 4511 processes
  section 4511 4622 respawned
  section 4622 4657 connections
  section 4657 4731 accepted
  section 4731 4803 dropped
  section 4803 4875 active
  section 4875 4955 idle
  section 4955 4982 ssl
  section 4982 5056 handshakes
  section 5056 5133 handshakes_failed
  section 5133 5233 session_reuses
  section 5233 5265 requests
  section 5265 5324 total
  section 5324 5399 current
  section 5399 5461 server_zones
  section 5461 5554 processing
  section 5554 5638 requests
  section 5638 5671 responses
  section 5671 5877 total
  section 5877 5970 discarded
  section 5970 6044 received
  section 6044 6120 sent
  section 6120 6203 slabs
  section 6203 6232 pages
  section 6232 6294 used
  section 6294 6368 free
  section 6368 6483 slots
  section 6483 6545 used
  section 6545 6607 free
  section 6607 6695 reqs
  section 6695 6815 fails
  section 6815 6978 upstreams
  section 6978 7078 peers
  section 7078 7119 id
  section 7119 7196 server
  section 7196 7296 name
  section 7296 7414 service
  section 7414 7524 backup
  section 7524 7597 weight
  section 7597 7761 state
  section 7761 7826 active
  section 7826 7906 max_conns
  section 7906 7993 requests
  section 7993 8026 responses
  section 8026 8242 total
  section 8242 8310 sent
  section 8310 8388 received
  section 8388 8484 fails
  section 8484 8693 unavail
  section 8693 8730 health_checks
  section 8730 8832 checks
  section 8832 8890 fails
  section 8890 8987 unhealthy
  section 8987 9143 last_passed
  section 9143 9269 downtime
  section 9269 9417 downstart
  section 9417 9545 selected
  section 9545 9791 header_time
  section 9791 10049 response_time
  section 10049 10143 keepalive
  section 10143 10265 zombies
  section 10265 10403 zone
  section 10403 10511 queue
  section 10511 10577 size
  section 10577 10676 max_size
  section 10676 10791 overflows
  section 10791 10892 caches
  section 10892 10944 size
  section 10944 11044 max_size
  section 11044 11263 cold
  section 11263 11413 responses
  section 11413 11559 bytes
  section 11559 11718 responses
  section 11718 11796 bytes
  section 11796 11882 responses_written
  section 11882 11984 bytes_written
  section 11984 12014 stream
  section 12014 12076 server_zones
  section 12076 12172 processing
  section 12172 12255 connections
  section 12255 12287 sessions
  section 12287 12501 total
  section 12501 12597 discarded
  section 12597 12671 received
  section 12671 12747 sent
  section 12747 12914 upstreams
  section 12914 13015 peers
  section 13015 13056 id
  section 13056 13136 server
  section 13136 13238 name
  section 13238 13360 service
  section 13360 13472 backup
  section 13472 13547 weight
  section 13547 13692 state
  section 13692 13750 active
  section 13750 13832 max_conns
  section 13832 13925 connections
  section 13925 14128 connect_time
  section 14128 14334 first_byte_time
  section 14334 14537 response_time
  section 14537 14605 sent
  section 14605 14683 received
  section 14683 14779 fails
  section 14779 14993 unavail
  section 14993 15030 health_checks
  section 15030 15134 checks
  section 15134 15192 fails
  section 15192 15289 unhealthy
  section 15289 15447 last_passed
  section 15447 15573 downtime
  section 15573 15721 downstart
  section 15721 15856 selected
  section 15856 15981 zombies
  section 15981 16158 zone
  section 16158 18036 compatibility

module ngx_http_stub_status_module
  aliases ngx_stub_status
  section 17 331 name
  section 331 678 example configuration
  section 678 994 directives
  section 697 994 stub_status
  section 994 1851 data
  section 1065 1182 active connections
  section 1182 1255 accepts
  section 1255 1468 handled
  section 1468 1530 requests
  section 1530 1631 reading
  section 1631 1745 writing
  section 1745 1851 waiting
  section 1851 2275 embedded variables
  section 1984 2061 $connections_active
  section 2061 2128 $connections_reading
  section 2128 2195 $connections_writing
  section 2195 2275 $connections_waiting

module ngx_http_sub_module
  aliases ngx_sub
  section 17 337 name
  section 337 595 example configuration
  section 595 2297 directives
  section 614 1197 sub_filter
  section 1197 1678 sub_filter_last_modified
  section 1678 1933 sub_filter_once
  section 1933 2297 sub_filter_types

module ngx_http_upstream_conf_module
  aliases ngx_upstream_conf
  section 17 581 name
  section 581 873 example configuration
  section 873 6811 directives
  section 892 6811 upstream_conf
  section 4291 6811 drain=

module ngx_http_upstream_hc_module
  aliases ngx_upstream_hc
  section 17 878 name
  section 878 2528 example configuration
  section 2528 7998 directives
  section 2547 5378 health_check
  section 5378 7998 match
  section 5606 5646 status 200;
  section 5646 5692 status ! 500;
  section 5692 5743 status 200 204;
  section 5743 5805 status ! 301 302;
  section 5805 5874 status 200-399;
  section 5874 5949 status ! 400-599;
  section 5949 6042 status 301-303 307;
  section 6042 6157 header content-type = text/html;
  section 6157 6284 header content-type != text/html;
  section 6284 6405 header connection ~ close;
  section 6405 6531 header connection !~ close;
  section 6531 6582 header host;
  section 6582 6676 header ! x-accel-redirect;
  section 6676 6779 body ~ welcome to nginx!;
  section 6779 6910 body !~ welcome to nginx!;
  section 6910 7998 require

module ngx_http_upstream_module
  aliases ngx_upstream
  section 17 387 name
  section 387 1639 example configuration
  section 1639 29089 directives
  section 1658 2738 upstream
  section 2738 8259 server
  section 8259 9088 zone
  section 9088 9981 state
  section 9981 11110 hash
  section 11110 12311 ip_hash
  section 12311 14740 keepalive
  section 14740 15357 keepalive_requests
  section 15357 15721 keepalive_time
  section 15721 15994 keepalive_timeout
  section 15994 17296 ntlm
  section 17296 17732 least_conn
  section 17732 18697 least_time
  section 18697 19596 queue
  section 19596 20613 random
  section 20613 21900 resolver
  section 21900 22239 resolver_timeout
  section 22239 28669 sticky
  section 22962 24604 cookie
  section 24604 24901 expires=time
  section 24901 25039 domain=domain
  section 25039 25119 httponly
  section 25119 25308 samesite=strict e<verbar>
  section 25308 25384 secure
  section 25384 25558 path=path
  section 25558 26956 route
  section 26956 28669 learn
  section 28669 29089 sticky_cookie_insert
  section 29089 33087 embedded variables
  section 29210 29896 $upstream_addr
  section 29896 30110 $upstream_bytes_received
  section 30110 30314 $upstream_bytes_sent
  section 30314 30559 $upstream_cache_status
  section 30559 30897 $upstream_connect_time
  section 30897 31124 $upstream_cookie_i<name>
  section 31124 31414 $upstream_header_time
  section 31414 31832 $upstream_http_i<name>
  section 31832 32096 $upstream_queue_time
  section 32096 32356 $upstream_response_length
  section 32356 32632 $upstream_response_time
  section 32632 32942 $upstream_status
  section 32942 33087 $upstream_trailer_i<name>

module ngx_http_userid_module
  aliases ngx_userid
  section 17 390 name
  section 390 637 example configuration
  section 637 4593 directives
  section 656 1341 userid
  section 944 1041 on
  section 1041 1138 v1
  section 1138 1236 log
  section 1236 1341 off
  section 1341 1640 userid_domain
  section 1640 2083 userid_expires
  section 2083 2488 userid_flags
  section 2488 3311 userid_mark
  section 3311 3496 userid_name
  section 3496 3864 userid_p3p
  section 3864 4074 userid_path
  section 4074 4593 userid_service
  section 4593 5128 embedded variables
  section 4712 4785 $uid_got
  section 4785 5046 $uid_reset
  section 5046 5128 $uid_set

module ngx_http_uwsgi_module
  aliases ngx_uwsgi
  section 17 180 name
  section 180 315 example configuration
  section 315 42378 directives
  section 334 1539 uwsgi_bind
  section 1539 2030 uwsgi_buffer_size
  section 2030 3227 uwsgi_buffering
  section 3227 3654 uwsgi_buffers
  section 3654 4319 uwsgi_busy_buffers_size
  section 4319 4725 uwsgi_cache
  section 4725 5211 uwsgi_cache_background_update
  section 5211 5780 uwsgi_cache_bypass
  section 5780 6028 uwsgi_cache_key
  section 6028 6659 uwsgi_cache_lock
  section 6659 7066 uwsgi_cache_lock_age
  section 7066 7515 uwsgi_cache_lock_timeout
  section 7515 7914 uwsgi_cache_max_range_offset
  section 7914 8407 uwsgi_cache_methods
  section 8407 8663 uwsgi_cache_min_uses
  section 8663 13788 uwsgi_cache_path
  section 13788 15151 uwsgi_cache_purge
  section 15151 15530 uwsgi_cache_revalidate
  section 15530 17325 uwsgi_cache_use_stale
  section 17325 19197 uwsgi_cache_valid
  section 19197 19520 uwsgi_connect_timeout
  section 19520 19903 uwsgi_force_ranges
  section 19903 20385 uwsgi_hide_header
  section 20385 20727 uwsgi_ignore_client_abort
  section 20727 21840 uwsgi_ignore_headers
  section 21840 22251 uwsgi_intercept_errors
  section 22251 22875 uwsgi_limit_rate
  section 22875 23656 uwsgi_max_temp_file_size
  section 23656 23976 uwsgi_modifier1
  section 23976 24296 uwsgi_modifier2
  section 24296 26800 uwsgi_next_upstream
  section 24811 24955 error
  section 24955 25106 timeout
  section 25106 25183 invalid_header
  section 25183 25254 http_500
  section 25254 25325 http_503
  section 25325 25396 http_403
  section 25396 25467 http_404
  section 25467 25548 http_429
  section 25548 25874 non_idempotent
  section 25874 26800 off
  section 26800 27153 uwsgi_next_upstream_timeout
  section 27153 27509 uwsgi_next_upstream_tries
  section 27509 28049 uwsgi_no_cache
  section 28049 28992 uwsgi_param
  section 28992 30098 uwsgi_pass
  section 30098 30336 uwsgi_pass_header
  section 30336 30664 uwsgi_pass_request_body
  section 30664 31012 uwsgi_pass_request_headers
  section 31012 31456 uwsgi_read_timeout
  section 31456 32290 uwsgi_request_buffering
  section 32290 32732 uwsgi_send_timeout
  section 32732 33252 uwsgi_socket_keepalive
  section 33252 33646 uwsgi_ssl_certificate
  section 33646 34231 uwsgi_ssl_certificate_key
  section 34231 34680 uwsgi_ssl_ciphers
  section 34680 35486 uwsgi_ssl_conf_command
  section 35486 35811 uwsgi_ssl_crl
  section 35811 36286 uwsgi_ssl_name
  section 36286 36661 uwsgi_ssl_password_file
  section 36661 37061 uwsgi_ssl_protocols
  section 37061 37526 uwsgi_ssl_server_name
  section 37526 37967 uwsgi_ssl_session_reuse
  section 37967 38321 uwsgi_ssl_trusted_certificate
  section 38321 38625 uwsgi_ssl_verify
  section 38625 38931 uwsgi_ssl_verify_depth
  section 38931 40579 uwsgi_store
  section 40579 41061 uwsgi_store_access
  section 41061 41622 uwsgi_temp_file_write_size
  section 41622 42378 uwsgi_temp_path

module ngx_http_v2_module
  aliases ngx_v2
  section 17 412 name
  section 412 782 known issues
  section 782 1453 example configuration
  section 1453 6750 directives
  section 1472 1807 http2_body_preread_size
  section 1807 2210 http2_chunk_size
  section 2210 2556 http2_idle_timeout
  section 2556 2843 http2_max_concurrent_pushes
  section 2843 3091 http2_max_concurrent_streams
  section 3091 3707 http2_max_field_size
  section 3707 4180 http2_max_header_size
  section 4180 4946 http2_max_requests
  section 4946 5712 http2_push
  section 5712 6175 http2_push_preload
  section 6175 6376 http2_recv_buffer_size
  section 6376 6750 http2_recv_timeout
  section 6750 7050 embedded variables
  section 6865 7050 $http2

module ngx_http_xslt_module
  aliases ngx_xslt
  section 17 455 name
  section 455 672 example configuration
  section 672 4689 directives
  section 691 1268 xml_entities
  section 1268 1863 xslt_last_modified
  section 1863 2523 xslt_param
  section 2523 3129 xslt_string_param
  section 3129 4239 xslt_stylesheet
  section 4239 4689 xslt_types

module ngx_mail_auth_http_module
  section 17 95 name
  section 95 1290 directives
  section 114 307 auth_http
  section 307 684 auth_http_header
  section 684 1074 auth_http_pass_client_cert
  section 1074 1290 auth_http_timeout
  section 1290 5739 protocol

module ngx_mail_core_module
  section 17 206 name
  section 206 1219 example configuration
  section 1219 9652 directives
  section 1238 5538 listen
  section 5538 5694 mail
  section 5694 5948 max_errors
  section 5948 6681 protocol
  section 6681 8579 resolver
  section 8579 8807 resolver_timeout
  section 8807 8913 server
  section 8913 9454 server_name
  section 9454 9652 timeout

module ngx_mail_imap_module
  section 17 85 name
  section 85 2406 directives
  section 104 1122 imap_auth
  section 330 468 plain
  section 468 572 login
  section 572 736 cram-md5
  section 736 1122 external
  section 1122 2072 imap_capabilities
  section 2072 2406 imap_client_buffer

module ngx_mail_pop3_module
  section 17 85 name
  section 85 2247 directives
  section 104 1243 pop3_auth
  section 330 560 plain
  section 560 711 apop
  section 711 875 cram-md5
  section 875 1243 external
  section 1243 2247 pop3_capabilities

module ngx_mail_proxy_module
  section 17 87 name
  section 87 3735 directives
  section 106 407 proxy_buffer
  section 407 1363 proxy_pass_error_message
  section 1363 1683 proxy_protocol
  section 1683 2072 proxy_smtp_auth
  section 2072 2398 proxy_timeout
  section 2398 3735 xclient

module ngx_mail_realip_module
  section 17 365 name
  section 365 556 example configuration
  section 556 923 directives
  section 575 923 set_real_ip_from

module ngx_mail_smtp_module
  section 17 85 name
  section 85 2631 directives
  section 104 1156 smtp_auth
  section 390 472 plain
  section 472 576 login
  section 576 740 cram-md5
  section 740 838 external
  section 838 1156 none
  section 1156 2000 smtp_capabilities
  section 2000 2334 smtp_client_buffer
  section 2334 2631 smtp_greeting_delay

module ngx_mail_ssl_module
  section 17 428 name
  section 428 1391 example configuration
  section 1391 13607 directives
  section 1410 1681 ssl
  section 1681 3078 ssl_certificate
  section 3078 3768 ssl_certificate_key
  section 3768 4313 ssl_ciphers
  section 4313 4738 ssl_client_certificate
  section 4738 5552 ssl_conf_command
  section 5552 5816 ssl_crl
  section 5816 6197 ssl_dhparam
  section 6197 7118 ssl_ecdh_curve
  section 7118 7923 ssl_password_file
  section 7923 8213 ssl_prefer_server_ciphers
  section 8213 8702 ssl_protocols
  section 8702 10097 ssl_session_cache
  section 9068 9204 off
  section 9204 9385 none
  section 9385 9620 builtin
  section 9620 10097 shared
  section 10097 11008 ssl_session_ticket_key
  section 11008 11334 ssl_session_tickets
  section 11334 11559 ssl_session_timeout
  section 11559 11983 ssl_trusted_certificate
  section 11983 12918 ssl_verify_client
  section 12918 13173 ssl_verify_depth
  section 13173 13607 starttls
  section 13344 13462 on
  section 13462 13534 off
  section 13534 13607 only

module ngx_stream_access_module
  section 17 206 name
  section 206 673 example configuration
  section 673 1336 directives
  section 692 1015 allow
  section 1015 1336 deny

module ngx_stream_core_module
  section 17 283 name
  section 283 1262 example configuration
  section 1262 10928 directives
  section 1281 6996 listen
  section 6996 7264 preread_buffer_size
  section 7264 7529 preread_timeout
  section 7529 7895 proxy_protocol_timeout
  section 7895 9305 resolver
  section 9305 9685 resolver_timeout
  section 9685 9793 server
  section 9793 9955 stream
  section 9955 10278 tcp_nodelay
  section 10278 10602 variables_hash_bucket_size
  section 10602 10928 variables_hash_max_size
  section 10928 13876 embedded variables
  section 11037 11191 $binary_remote_addr
  section 11191 11271 $bytes_received
  section 11271 11332 $bytes_sent
  section 11332 11385 $connection
  section 11385 11421 $hostname
  section 11421 11500 $msec
  section 11500 11545 $nginx_version
  section 11545 11592 $pid
  section 11592 11690 $protocol
  section 11690 11904 $proxy_protocol_addr
  section 11904 12115 $proxy_protocol_port
  section 12115 12336 $proxy_protocol_server_addr
  section 12336 12554 $proxy_protocol_server_port
  section 12554 12598 $remote_addr
  section 12598 12639 $remote_port
  section 12639 12898 $server_addr
  section 12898 12974 $server_port
  section 12974 13073 $session_time
  section 13073 13726 $status
  section 13726 13799 $time_iso8601
  section 13799 13876 $time_local

module ngx_stream_geo_module
  section 17 212 name
  section 212 443 example configuration
  section 443 2859 directives
  section 462 2859 geo
  section 1341 1395 delete
  section 1395 1722 default
  section 1722 1822 include
  section 1822 2859 ranges

module ngx_stream_geoip_module
  section 17 612 name
  section 612 1006 example configuration
  section 1006 3667 directives
  section 1025 1616 geoip_country
  section 1278 1378 $geoip_country_code
  section 1378 1484 $geoip_country_code3
  section 1484 1616 $geoip_country_name
  section 1616 3309 geoip_city
  section 1881 2165 $geoip_area_code
  section 2165 2271 $geoip_city_country_code
  section 2271 2382 $geoip_city_country_code3
  section 2382 2504 $geoip_city_country_name
  section 2504 2722 $geoip_dma_code
  section 2722 2762 $geoip_latitude
  section 2762 2804 $geoip_longitude
  section 2804 2969 $geoip_region
  section 2969 3155 $geoip_region_name
  section 3155 3245 $geoip_city
  section 3245 3309 $geoip_postal_code
  section 3309 3667 geoip_org
  section 3557 3667 $geoip_org

module ngx_stream_js_module
  section 17 292 name
  section 292 2338 example configuration
  section 2338 8592 directives
  section 2357 2653 js_access
  section 2653 2947 js_fetch_buffer_size
  section 2947 3390 js_fetch_ciphers
  section 3390 3699 js_fetch_max_response_buffer_size
  section 3699 4054 js_fetch_protocols
  section 4054 4491 js_fetch_timeout
  section 4491 4838 js_fetch_trusted_certificate
  section 4838 5135 js_fetch_verify
  section 5135 5437 js_fetch_verify_depth
  section 5437 5669 js_filter
  section 5669 6327 js_import
  section 6327 6895 js_include
  section 6895 7069 js_path
  section 7069 7368 js_preread
  section 7368 8338 js_set
  section 8338 8592 js_var
  section 8592 8717 session object properties

module ngx_stream_keyval_module
  section 17 422 name
  section 422 999 example configuration
  section 999 3694 directives
  section 1018 1417 keyval
  section 1417 3694 keyval_zone
  section 2655 2795 type=string
  section 2795 3022 type=ip
  section 3022 3694 type=prefix

module ngx_stream_limit_conn_module
  section 17 297 name
  section 297 575 example configuration
  section 575 3257 directives
  section 594 1345 limit_conn
  section 1345 1733 limit_conn_dry_run
  section 1733 2038 limit_conn_log_level
  section 2038 3257 limit_conn_zone
  section 3257 3456 embedded variables
  section 3296 3456 $limit_conn_status

module ngx_stream_log_module
  section 17 191 name
  section 191 461 example configuration
  section 461 5435 directives
  section 480 2944 access_log
  section 2944 4253 log_format
  section 4253 5435 open_log_file_cache
  section 4677 4827 max
  section 4827 4975 inactive
  section 4975 5148 min_uses
  section 5148 5287 valid
  section 5287 5435 off

module ngx_stream_map_module
  section 17 214 name
  section 214 431 example configuration
  section 431 3592 directives
  section 450 2957 map
  section 1678 1886 default value
  section 1886 2222 hostnames
  section 2222 2319 include file
  section 2319 2957 volatile
  section 2957 3315 map_hash_bucket_size
  section 3315 3592 map_hash_max_size

module ngx_stream_proxy_module
  section 17 229 name
  section 229 722 example configuration
  section 722 14181 directives
  section 741 1930 proxy_bind
  section 1930 2285 proxy_buffer_size
  section 2285 2515 proxy_connect_timeout
  section 2515 3283 proxy_download_rate
  section 3283 3673 proxy_half_close
  section 3673 4072 proxy_next_upstream
  section 4072 4348 proxy_next_upstream_timeout
  section 4348 4638 proxy_next_upstream_tries
  section 4638 5434 proxy_pass
  section 5434 5762 proxy_protocol
  section 5762 6340 proxy_requests
  section 6340 6932 proxy_responses
  section 6932 7753 proxy_session_drop
  section 7753 8251 proxy_socket_keepalive
  section 8251 8469 proxy_ssl
  section 8469 8788 proxy_ssl_certificate
  section 8788 9114 proxy_ssl_certificate_key
  section 9114 9491 proxy_ssl_ciphers
  section 9491 10267 proxy_ssl_conf_command
  section 10267 10517 proxy_ssl_crl
  section 10517 10985 proxy_ssl_name
  section 10985 11291 proxy_ssl_password_file
  section 11291 11619 proxy_ssl_protocols
  section 11619 12009 proxy_ssl_server_name
  section 12009 12377 proxy_ssl_session_reuse
  section 12377 12656 proxy_ssl_trusted_certificate
  section 12656 12885 proxy_ssl_verify
  section 12885 13116 proxy_ssl_verify_depth
  section 13116 13444 proxy_timeout
  section 13444 14181 proxy_upload_rate

module ngx_stream_realip_module
  section 17 501 name
  section 501 694 example configuration
  section 694 1063 directives
  section 713 1063 set_real_ip_from
  section 1063 1252 embedded variables
  section 1102 1172 $realip_remote_addr
  section 1172 1252 $realip_remote_port

module ngx_stream_return_module
  section 17 235 name
  section 235 350 example configuration
  section 350 564 directives
  section 369 564 return

module ngx_stream_set_module
  section 17 185 name
  section 185 294 example configuration
  section 294 530 directives
  section 313 530 set

module ngx_stream_split_clients_module
  section 17 254 name
  section 254 643 example configuration
  section 643 1405 directives
  section 662 1405 split_clients

module ngx_stream_ssl_module
  section 17 362 name
  section 362 1329 example configuration
  section 1329 13796 directives
  section 1348 1923 ssl_alpn
  section 1923 3690 ssl_certificate
  section 3690 4504 ssl_certificate_key
  section 4504 4940 ssl_ciphers
  section 4940 5367 ssl_client_certificate
  section 5367 6183 ssl_conf_command
  section 6183 6449 ssl_crl
  section 6449 6787 ssl_dhparam
  section 6787 7620 ssl_ecdh_curve
  section 7620 7834 ssl_handshake_timeout
  section 7834 8584 ssl_password_file
  section 8584 8876 ssl_prefer_server_ciphers
  section 8876 9350 ssl_protocols
  section 9350 10747 ssl_session_cache
  section 9718 9854 off
  section 9854 10035 none
  section 10035 10270 builtin
  section 10270 10747 shared
  section 10747 11615 ssl_session_ticket_key
  section 11615 11898 ssl_session_tickets
  section 11898 12125 ssl_session_timeout
  section 12125 12551 ssl_trusted_certificate
  section 12551 13539 ssl_verify_client
  section 13539 13796 ssl_verify_depth
  section 13796 17290 embedded variables
  section 13904 14042 $ssl_alpn_protocol
  section 14042 14141 $ssl_cipher
  section 14141 14546 $ssl_ciphers
  section 14546 14738 $ssl_client_cert
  section 14738 14877 $ssl_client_fingerprint
  section 14877 15087 $ssl_client_i_dn
  section 15087 15218 $ssl_client_raw_cert
  section 15218 15429 $ssl_client_s_dn
  section 15429 15560 $ssl_client_serial
  section 15560 15651 $ssl_client_v_end
  section 15651 15762 $ssl_client_v_remain
  section 15762 15857 $ssl_client_v_start
  section 15857 16056 $ssl_client_verify
  section 16056 16419 $ssl_curve
  section 16419 16850 $ssl_curves
  section 16850 16935 $ssl_protocol
  section 16935 17070 $ssl_server_name
  section 17070 17167 $ssl_session_id
  section 17167 17290 $ssl_session_reused

module ngx_stream_ssl_preread_module
  section 17 648 name
  section 648 1891 example configuration
  section 1891 2164 directives
  section 1910 2164 ssl_preread
  section 2164 2542 embedded variables
  section 2203 2307 $ssl_preread_protocol
  section 2307 2382 $ssl_preread_server_name
  section 2382 2542 $ssl_preread_alpn_protocols

module ngx_stream_upstream_hc_module
  section 17 752 name
  section 752 2231 example configuration
  section 2231 6374 directives
  section 2250 4437 health_check
  section 4437 4662 health_check_timeout
  section 4662 6374 match

module ngx_stream_upstream_module
  section 17 264 name
  section 264 1528 example configuration
  section 1528 14347 directives
  section 1547 2641 upstream
  section 2641 7389 server
  section 7389 8173 zone
  section 8173 9066 state
  section 9066 10205 hash
  section 10205 10554 least_conn
  section 10554 11593 least_time
  section 11593 12720 random
  section 12720 14008 resolver
  section 14008 14347 resolver_timeout
  section 14347 15961 embedded variables
  section 14470 14854 $upstream_addr
  section 14854 15057 $upstream_bytes_received
  section 15057 15250 $upstream_bytes_sent
  section 15250 15495 $upstream_connect_time
  section 15495 15743 $upstream_first_byte_time
  section 15743 15961 $upstream_session_time

module ngx_stream_zone_sync_module
  section 17 745 name
  section 745 2155 example configuration
  section 2155 10326 directives
  section 2174 2411 zone_sync
  section 2411 2891 zone_sync_buffers
  section 2891 3144 zone_sync_connect_retry_interval
  section 3144 3385 zone_sync_connect_timeout
  section 3385 3602 zone_sync_interval
  section 3602 4068 zone_sync_recv_buffer_size
  section 4068 5372 zone_sync_server
  section 5372 5604 zone_sync_ssl
  section 5604 5864 zone_sync_ssl_certificate
  section 5864 6131 zone_sync_ssl_certificate_key
  section 6131 6522 zone_sync_ssl_ciphers
  section 6522 7318 zone_sync_ssl_conf_command
  section 7318 7580 zone_sync_ssl_crl
  section 7580 8114 zone_sync_ssl_name
  section 8114 8428 zone_sync_ssl_password_file
  section 8428 8770 zone_sync_ssl_protocols
  section 8770 9218 zone_sync_ssl_server_name
  section 9218 9509 zone_sync_ssl_trusted_certificate
  section 9509 9750 zone_sync_ssl_verify
  section 9750 9993 zone_sync_ssl_verify_depth
  section 9993 10326 zone_sync_timeout
  section 10326 10549 api endpoints
  section 10549 11611 starting, stopping, removing a cluster node

module request_processing
  section 18 85 name
  section 85 1590 name-based virtual servers
  section 1590 2289 how to prevent processing requests with undefined server names
  section 2289 4031 mixed name-based and ip-based virtual servers
  section 4031 7803 a simple php site configuration

module server_names
  section 18 1308 name
  section 1308 1980 wildcard names
  section 1980 3759 regular expressions names
  section 3759 6442 miscellaneous names
  section 6442 6835 internationalized names
  section 6835 8539 virtual server selection
  section 8539 11607 optimization
  section 11607 12495 compatibility

module stream_processing
  section 18 1561 name

module switches
  section 18 1806 name

module syntax
  section 18 1040 name

module sys_errlist
  section 18 535 name

module syslog
  section 18 2153 name
  section 223 598 server=address
  section 598 1090 facility=string
  section 1090 1527 severity=string
  section 1527 1620 tag=string
  section 1620 2153 nohostname

module variables_in_config
  section 18 717 name

module websocket
  section 18 2500 name

module welcome_nginx_facebook
  section 18 5785 name

module windows
  section 18 2272 name
  section 2272 2466 known issues
  section 2466 2715 possible future enhancements

dist lua-5.1.5
  modules lua-5.1.5

module lua-5.1.5
  section 23 286 lua 5.1 reference manual
  section 286 1903 introduction
  section 1903 56832 the language
  section 2494 6469 lexical conventions
  section 6469 9733 values and types
  section 9733 10230 coercion
  section 10230 12425 variables
  section 12425 12633 statements
  section 12633 13583 chunks
  section 13583 14004 blocks
  section 14004 15965 assignment
  section 15965 17558 control structures
  section 17558 20237 for statement
  section 18436 18557 all three control expressions are evaluated only once, before
  section 18557 18686 var, limit, and step are invisible variables.
  section 18686 18767 if the third expression (the step) is absent, then a step of 1
  section 18767 18820 you can use break to exit a for loop.
  section 18820 19691 the loop variable v is local to the loop; you cannot use its
  section 19691 19848 explist is evaluated only once. its results are an
  section 19848 19964 f, s, and var are invisible variables. the
  section 19964 20017 you can use break to exit a for loop.
  section 20017 20237 the loop variables var_i are local to the loop; you
  section 20237 20483 function calls as statements
  section 20483 21089 local declarations
  section 21089 23896 expressions
  section 23896 24538 arithmetic operators
  section 24538 25966 relational operators
  section 25966 27045 logical operators
  section 27045 27340 concatenation
  section 27340 28092 the length operator
  section 28092 28550 precedence
  section 28550 30169 table constructors
  section 30169 32583 function calls
  section 32583 35921 function definitions
  section 35921 37411 visibility rules
  section 37411 37907 error handling
  section 37907 47900 metatables
  section 40693 41665 add: the + operation.
  section 41665 41745 sub: the - operation. behavior similar to the add
  section 41745 41825 mul: the * operation. behavior similar to the add
  section 41825 41905 div: the / operation. behavior similar to the add
  section 41905 42056 mod: the % operation. behavior similar to the add
  section 42056 42232 pow: the ^ (exponentiation) operation. behavior similar
  section 42232 42774 unm: the unary - operation.
  section 42774 43251 concat: the .. (concatenation) operation.
  section 43251 43839 len: the # operation.
  section 43839 44868 eq: the == operation. the function getcomphandler
  section 44868 45413 lt: the < operation.
  section 45413 46234 le: the <= operation.
  section 46234 46845 index: the indexing access table[key].
  section 46845 47538 newindex: the indexing assignment table[key] = value.
  section 47538 47900 call: called when lua calls a value.
  section 47900 49651 environments
  section 49651 51359 garbage collection
  section 51359 52450 garbage-collection metamethods
  section 52450 53498 weak tables
  section 53498 56832 coroutines
  section 56832 112126 the application program interface
  section 57605 58842 the stack
  section 58842 59733 stack size
  section 59733 60529 pseudo-indices
  section 60529 61219 c closures
  section 61219 61886 registry
  section 61886 62587 error handling in c
  section 62587 63590 functions and types
  section 63590 65260 lua_alloc
  section 65260 65737 lua_atpanic
  section 65737 67685 lua_call
  section 67685 69206 lua_cfunction
  section 69206 69540 lua_checkstack
  section 69540 70072 lua_close
  section 70072 70478 lua_concat
  section 70478 70950 lua_cpcall
  section 70950 71350 lua_createtable
  section 71350 71926 lua_dump
  section 71926 72261 lua_equal
  section 72261 72529 lua_error
  section 72529 73848 lua_gc
  section 72740 72796 lua_gcstop: stops the garbage collector.
  section 72796 72858 lua_gcrestart: restarts the garbage collector.
  section 72858 72930 lua_gccollect: performs a full garbage-collection cycle.
  section 72930 73022 lua_gccount: returns the current amount of memory (in
  section 73022 73146 lua_gccountb: returns the remainder of dividing the
  section 73146 73482 lua_gcstep: performs an incremental step of garbage
  section 73482 73650 lua_gcsetpause: sets data as the new value for the
  section 73650 73848 lua_gcsetstepmul: sets data as the new value for the
  section 73848 74093 lua_getallocf
  section 74093 74257 lua_getfenv
  section 74257 74542 lua_getfield
  section 74542 74792 lua_getglobal
  section 74792 75098 lua_getmetatable
  section 75098 75501 lua_gettable
  section 75501 75746 lua_gettop
  section 75746 76032 lua_insert
  section 76032 76268 lua_integer
  section 76268 76446 lua_isboolean
  section 76446 76627 lua_iscfunction
  section 76627 76822 lua_isfunction
  section 76822 77015 lua_islightuserdata
  section 77015 77178 lua_isnil
  section 77178 77394 lua_isnone
  section 77394 77660 lua_isnoneornil
  section 77660 77867 lua_isnumber
  section 77867 78092 lua_isstring
  section 78092 78260 lua_istable
  section 78260 78431 lua_isthread
  section 78431 78631 lua_isuserdata
  section 78631 79000 lua_lessthan
  section 79000 80005 lua_load
  section 79371 79397 0: no errors;
  section 79397 79464 lua_errsyntax: syntax error during pre-compilation;
  section 79464 80005 lua_errmem: memory allocation error.
  section 80005 80418 lua_newstate
  section 80418 80601 lua_newtable
  section 80601 81082 lua_newthread
  section 81082 81818 lua_newuserdata
  section 81818 82799 lua_next
  section 82799 83062 lua_number
  section 83062 83427 lua_objlen
  section 83427 84989 lua_pcall
  section 84747 84791 lua_errrun: a runtime error.
  section 84791 84906 lua_errmem: memory allocation error. for such errors, lua
  section 84906 84989 lua_errerr: error while running the error handler
  section 84989 85099 lua_pop
  section 85099 85245 lua_pushboolean
  section 85245 86015 lua_pushcclosure
  section 86015 86571 lua_pushcfunction
  section 86571 87448 lua_pushfstring
  section 86849 87023 you do not have to allocate space for the result: the result is
  section 87023 87448 the conversion specifiers are quite restricted. there are no
  section 87448 87595 lua_pushinteger
  section 87595 88030 lua_pushlightuserdata
  section 88030 88290 lua_pushliteral
  section 88290 88655 lua_pushlstring
  section 88655 88766 lua_pushnil
  section 88766 88910 lua_pushnumber
  section 88910 89303 lua_pushstring
  section 89303 89496 lua_pushthread
  section 89496 89657 lua_pushvalue
  section 89657 89957 lua_pushvfstring
  section 89957 90267 lua_rawequal
  section 90267 90431 lua_rawget
  section 90431 90676 lua_rawgeti
  section 90676 90844 lua_rawset
  section 90844 91180 lua_rawseti
  section 91180 91852 lua_reader
  section 91852 92187 lua_register
  section 92187 92473 lua_remove
  section 92473 92705 lua_replace
  section 92705 93675 lua_resume
  section 93675 93856 lua_setallocf
  section 93856 94172 lua_setfenv
  section 94172 94547 lua_setfield
  section 94547 94819 lua_setglobal
  section 94819 95021 lua_setmetatable
  section 95021 95437 lua_settable
  section 95437 95740 lua_settop
  section 95740 96151 lua_state
  section 96151 96415 lua_status
  section 96415 96870 lua_toboolean
  section 96870 97099 lua_tocfunction
  section 97099 97497 lua_tointeger
  section 97497 98417 lua_tolstring
  section 98417 98739 lua_tonumber
  section 98739 99205 lua_topointer
  section 99205 99362 lua_tostring
  section 99362 99624 lua_tothread
  section 99624 99891 lua_touserdata
  section 99891 100368 lua_type
  section 100368 100573 lua_typename
  section 100573 101145 lua_writer
  section 101145 101407 lua_xmove
  section 101407 101915 lua_yield
  section 101915 102220 the debug interface
  section 102220 104690 lua_debug
  section 103037 103234 source: if the function was defined in a string, then
  section 103234 103326 short_src: a printable version of source, to be used
  section 103326 103415 linedefined: the line number where the definition of the
  section 103415 103506 lastlinedefined: the line number where the definition of
  section 103506 103783 what: the string lua if the function is a lua
  section 103783 103935 currentline: the current line where the given function is
  section 103935 104336 name: a reasonable name for the given function. because
  section 104336 104621 namewhat: explains the name field. the value of
  section 104621 104690 nups: the number of upvalues of the function.
  section 104690 104805 lua_gethook
  section 104805 104922 lua_gethookcount
  section 104922 105036 lua_gethookmask
  section 105036 106761 lua_getinfo
  section 106022 106086 n: fills in the field name and namewhat;
  section 106086 106200 s: fills in the fields source, short_src,
  section 106200 106255 l: fills in the field currentline;
  section 106255 106303 u: fills in the field nups;
  section 106303 106394 f: pushes onto the stack the function that is running
  section 106394 106761 l: pushes onto the stack a table whose indices are the
  section 106761 107592 lua_getlocal
  section 107592 108126 lua_getstack
  section 108126 108899 lua_getupvalue
  section 108899 109844 lua_hook
  section 109844 111180 lua_sethook
  section 110343 110518 the call hook: is called when the interpreter calls a
  section 110518 110724 the return hook: is called when the interpreter returns from
  section 110724 110961 the line hook: is called when the interpreter is about to
  section 110961 111180 the count hook: is called after the interpreter executes
  section 111180 111671 lua_setlocal
  section 111671 112126 lua_setupvalue
  section 112126 129890 the auxiliary library
  section 113017 113140 functions and types
  section 113140 113293 lual_addchar
  section 113293 113536 lual_addlstring
  section 113536 113758 lual_addsize
  section 113758 113992 lual_addstring
  section 113992 114327 lual_addvalue
  section 114327 114694 lual_argcheck
  section 114694 115058 lual_argerror
  section 115058 116199 lual_buffer
  section 115257 115324 first you declare a variable b of type lual_buffer.
  section 115324 115393 then you initialize it with a call lual_buffinit(l, &b).
  section 115393 115486 then you add string pieces to the buffer calling any of the
  section 115486 116199 you finish by calling lual_pushresult(&b). this call leaves
  section 116199 116429 lual_buffinit
  section 116429 116919 lual_callmeta
  section 116919 117105 lual_checkany
  section 117105 117294 lual_checkint
  section 117294 117506 lual_checkinteger
  section 117506 117698 lual_checklong
  section 117698 118073 lual_checklstring
  section 118073 118257 lual_checknumber
  section 118257 119034 lual_checkoption
  section 119034 119304 lual_checkstack
  section 119304 119605 lual_checkstring
  section 119605 119816 lual_checktype
  section 119816 120038 lual_checkudata
  section 120038 120335 lual_dofile
  section 120335 120630 lual_dostring
  section 120630 121107 lual_error
  section 121107 121426 lual_getmetafield
  section 121426 121643 lual_getmetatable
  section 121643 121995 lual_gsub
  section 121995 122454 lual_loadbuffer
  section 122454 123002 lual_loadfile
  section 123002 123350 lual_loadstring
  section 123350 123737 lual_newmetatable
  section 123737 124136 lual_newstate
  section 124136 124271 lual_openlibs
  section 124271 124531 lual_optint
  section 124531 124882 lual_optinteger
  section 124882 125146 lual_optlong
  section 125146 125590 lual_optlstring
  section 125590 125852 lual_optnumber
  section 125852 126174 lual_optstring
  section 126174 126528 lual_prepbuffer
  section 126528 126696 lual_pushresult
  section 126696 127415 lual_ref
  section 127415 127764 lual_reg
  section 127764 128541 lual_register
  section 128541 128701 lual_typename
  section 128701 129086 lual_typerror
  section 129086 129459 lual_unref
  section 129459 129890 lual_where
  section 129890 189003 standard libraries
  section 130511 130577 basic library, which includes the coroutine sub-library;
  section 130577 130603 package library;
  section 130603 130633 string manipulation;
  section 130633 130662 table manipulation;
  section 130662 130712 mathematical functions (sin, log, etc.);
  section 130712 130739 input and output;
  section 130739 130777 operating system facilities;
  section 130777 131655 debug facilities.
  section 131655 131897 basic functions
  section 131897 132140 assert (v [, message])
  section 132140 133205 collectgarbage ([opt [, arg]])
  section 132326 132419 collect: performs a full garbage-collection cycle. this is
  section 132419 132468 stop: stops the garbage collector.
  section 132468 132523 restart: restarts the garbage collector.
  section 132523 132596 count: returns the total memory in use by lua (in kbytes).
  section 132596 132892 step: performs a garbage-collection step. the step size
  section 132892 133039 setpause: sets arg as the new value for the pause of
  section 133039 133205 setstepmul: sets arg as the new value for the i<step
  section 133205 133557 dofile ([filename])
  section 133557 134147 error (message [, level])
  section 134147 134406 _g
  section 134406 134753 getfenv ([f])
  section 134753 134995 getmetatable (object)
  section 134995 135285 ipairs (t)
  section 135285 135851 load (func [, chunkname])
  section 135851 136001 loadfile ([filename])
  section 136001 136244 loadstring (string [, chunkname])
  section 136244 137218 next (table [, index])
  section 137218 137520 pairs (t)
  section 137520 138025 pcall (f, arg1, ...)
  section 138025 138362 print (...)
  section 138362 138485 rawequal (v1, v2)
  section 138485 138646 rawget (table, index)
  section 138646 138902 rawset (table, index, value)
  section 138902 139156 select (index, ...)
  section 139156 139551 setfenv (f, table)
  section 139551 139883 setmetatable (table, metatable)
  section 139883 140545 tonumber (e [, base])
  section 140545 140901 tostring (e)
  section 140901 141165 type (v)
  section 141165 141519 unpack (list [, i [, j]])
  section 141519 141695 _version
  section 141695 142322 xpcall (f, err)
  section 142322 142539 coroutine manipulation
  section 142539 142704 coroutine.create (f)
  section 142704 143418 coroutine.resume (co [, val1, ...])
  section 143418 143525 coroutine.running ()
  section 143525 143992 coroutine.status (co)
  section 143992 144358 coroutine.wrap (f)
  section 144358 144609 coroutine.yield (...)
  section 144609 144865 modules
  section 144865 145998 module (name [, ...])
  section 145998 147473 require (modname)
  section 147473 147747 package.cpath
  section 147747 147979 package.loaded
  section 147979 150554 package.loaders
  section 150554 151433 package.loadlib (libname, funcname)
  section 151433 151792 package.path
  section 151792 151885 package.preload
  section 151885 152127 package.seeall (module)
  section 152127 152908 string manipulation
  section 152908 153205 string.byte (s [, i [, j]])
  section 153205 153522 string.char (...)
  section 153522 153763 string.dump (function)
  section 153763 154542 string.find (s, pattern [, init [, plain]])
  section 154542 155699 string.format (formatstring, ...)
  section 155699 156475 string.gmatch (s, pattern)
  section 156475 158565 string.gsub (s, pattern, repl [, n])
  section 158565 158734 string.len (s)
  section 158734 158983 string.lower (s)
  section 158983 159390 string.match (s, pattern [, init])
  section 159390 159499 string.rep (s, n)
  section 159499 159582 string.reverse (s)
  section 159582 159980 string.sub (s, i [, j])
  section 159980 160227 string.upper (s)
  section 160227 160252 patterns
  section 160252 162558 character class:
  section 160420 160543 x: (where x is not one of the magic characters
  section 160543 160596 .: (a dot) represents all characters.
  section 160596 160639 %a: represents all letters.
  section 160639 160693 %c: represents all control characters.
  section 160693 160735 %d: represents all digits.
  section 160735 160788 %l: represents all lowercase letters.
  section 160788 160846 %p: represents all punctuation characters.
  section 160846 160898 %s: represents all space characters.
  section 160898 160951 %u: represents all uppercase letters.
  section 160951 161010 %w: represents all alphanumeric characters.
  section 161010 161064 %x: represents all hexadecimal digits.
  section 161064 161131 %z: represents the character with representation 0.
  section 161131 161407 %x: (where x is any non-alphanumeric character)
  section 161407 162091 [set]: represents the class which is the union of all
  section 162091 162558 [^set]: represents the complement of set, where
  section 162558 163965 pattern item:
  section 162613 162697 a single character class, which matches any single character in
  section 162697 162887 a single character class followed by *, which matches 0 or
  section 162887 163077 a single character class followed by +, which matches 1 or
  section 163077 163291 a single character class followed by -, which also matches
  section 163291 163406 a single character class followed by ?, which matches 0 or
  section 163406 163531 %n, for n between 1 and 9; such item matches a
  section 163531 163965 c<%bi<xy>>, where x and y are two distinct characters;
  section 163965 164298 pattern:
  section 164298 165115 captures:
  section 165115 165468 table manipulation
  section 165468 165846 table.concat (table [, sep [, i [, j]]])
  section 165846 166180 table.insert (table, [pos,] value)
  section 166180 166407 table.maxn (table)
  section 166407 166759 table.remove (table [, pos])
  section 166759 167351 table.sort (table [, comp])
  section 167351 167507 mathematical functions
  section 167507 167569 math.abs (x)
  section 167569 167641 math.acos (x)
  section 167641 167711 math.asin (x)
  section 167711 167784 math.atan (x)
  section 167784 167994 math.atan2 (y, x)
  section 167994 168080 math.ceil (x)
  section 168080 168161 math.cos (x)
  section 168161 168227 math.cosh (x)
  section 168227 168307 math.deg (x)
  section 168307 168358 math.exp (x)
  section 168358 168445 math.floor (x)
  section 168445 168568 math.fmod (x, y)
  section 168568 168747 math.frexp (x)
  section 168747 168852 math.huge
  section 168852 168927 math.ldexp (m, e)
  section 168927 168992 math.log (x)
  section 168992 169059 math.log10 (x)
  section 169059 169161 math.max (x, ...)
  section 169161 169263 math.min (x, ...)
  section 169263 169370 math.modf (x)
  section 169370 169411 math.pi
  section 169411 169519 math.pow (x, y)
  section 169519 169599 math.rad (x)
  section 169599 170152 math.random ([m [, n]])
  section 170152 170290 math.randomseed (x)
  section 170290 170369 math.sin (x)
  section 170369 170433 math.sinh (x)
  section 170433 170559 math.sqrt (x)
  section 170559 170641 math.tan (x)
  section 170641 170707 math.tanh (x)
  section 170707 171705 input and output facilities
  section 171705 171818 io.close ([file])
  section 171818 171901 io.flush ()
  section 171901 172302 io.input ([file])
  section 172302 172925 io.lines ([filename])
  section 172925 173712 io.open (filename [, mode])
  section 173177 173219 r: read mode (the default);
  section 173219 173248 w: write mode;
  section 173248 173278 a: append mode;
  section 173278 173341 r+: update mode, all previous data is preserved;
  section 173341 173401 w+: update mode, all previous data is erased;
  section 173401 173712 a+: append update mode, previous data is preserved,
  section 173712 173811 io.output ([file])
  section 173811 174136 io.popen (prog [, mode])
  section 174136 174221 io.read (...)
  section 174221 174377 io.tmpfile ()
  section 174377 174607 io.type (obj)
  section 174607 174695 io.write (...)
  section 174695 174879 file:close ()
  section 174879 174941 file:flush ()
  section 174941 175254 file:lines ()
  section 175254 176225 file:read (...)
  section 175670 175771 *n: reads a number; this is the only format that returns a
  section 175771 175890 *a: reads the whole file, starting at the current
  section 175890 176017 *l: reads the next line (skipping the end of line),
  section 176017 176225 number: reads a string with up to this number of
  section 176225 177151 file:seek ([whence] [, offset])
  section 176444 176507 set: base is position 0 (beginning of the file);
  section 176507 176552 cur: base is current position;
  section 176552 177151 end: base is end of file;
  section 177151 177798 file:setvbuf (mode [, size])
  section 177276 177364 no: no buffering; the result of any output operation
  section 177364 177521 full: full buffering; output operation is performed only
  section 177521 177798 line: line buffering; output is buffered until a newline
  section 177798 178027 file:write (...)
  section 178027 178120 operating system facilities
  section 178120 178228 os.clock ()
  section 178228 179329 os.date ([format [, time]])
  section 179329 179505 os.difftime (t2, t1)
  section 179505 179810 os.execute ([command])
  section 179810 179978 os.exit ([code])
  section 179978 180119 os.getenv (varname)
  section 180119 180324 os.remove (filename)
  section 180324 180503 os.rename (oldname, newname)
  section 180503 181233 os.setlocale (locale [, category])
  section 181233 181915 os.time ([table])
  section 181915 182532 os.tmpname ()
  section 182532 183378 the debug library
  section 183378 183885 debug.debug ()
  section 183885 183956 debug.getfenv (o)
  section 183956 184180 debug.gethook ([thread])
  section 184180 185360 debug.getinfo ([thread,] function [, what])
  section 185360 186008 debug.getlocal ([thread,] level, local)
  section 186008 186137 debug.getmetatable (object)
  section 186137 186216 debug.getregistry ()
  section 186216 186432 debug.getupvalue (func, up)
  section 186432 186561 debug.setfenv (object, table)
  section 186561 187838 debug.sethook ([thread,] hook, mask [, count])
  section 186819 186891 c: the hook is called every time lua calls a function;
  section 186891 186970 r: the hook is called every time lua returns from a
  section 186970 187838 l: the hook is called every time lua enters a new line
  section 187838 188288 debug.setlocal ([thread,] level, local, value)
  section 188288 188424 debug.setmetatable (object, table)
  section 188424 188690 debug.setupvalue (func, up, value)
  section 188690 189003 debug.traceback ([thread,] [message [, level]])
  section 189003 192563 lua stand-alone
  section 189460 189512 -e stat: executes string stat;
  section 189512 189557 -l mod: requires mod;
  section 189557 189625 -i: enters interactive mode after running script;
  section 189625 189672 -v: prints version information;
  section 189672 189715 --: stops handling options;
  section 189715 192563 -: executes stdin as a file and stops handling
  section 192563 195704 incompatibilities with the previous version
  section 192913 193505 changes in the language
  section 192958 193153 the vararg system changed from the pseudo-argument arg with
  section 193153 193284 there was a subtle change in the scope of the implicit
  section 193284 193505 the long string/long comment syntax ([[string]]) does not
  section 193505 194851 changes in the libraries
  section 193551 193678 function string.gfind was renamed string.gmatch. (see
  section 193678 193878 when string.gsub is called with a function as its third
  section 193878 194100 function table.setn was deprecated. function table.getn
  section 194100 194226 function loadlib was renamed package.loadlib. (see
  section 194226 194343 function math.mod was renamed math.fmod. (see
  section 194343 194476 functions table.foreach and table.foreachi are
  section 194476 194709 there were substantial changes in function require due to
  section 194709 194851 function collectgarbage has different arguments. function
  section 194851 195704 changes in the api
  section 194891 195055 the luaopen_* functions (to open libraries) cannot be called
  section 195055 195304 function lua_open was replaced by lua_newstate to allow
  section 195304 195477 functions lual_getn and lual_setn (from the auxiliary
  section 195477 195545 function lual_openlib was replaced by lual_register.
  section 195545 195704 function lual_checkudata now throws an error when the given
  section 195704 197381 the complete syntax of lua

dist luajit-2.1
  modules changes contact ext_c_api ext_ffi ext_ffi_api ext_ffi_semantics ext_ffi_tutorial ext_jit ext_profiler extensions faq install luajit-2.1 running status

module changes
  section 14 39336 luajit change history
  section 51 74 luajit
  section 74 104 download e<rchevron>
  section 104 126 installation
  section 126 150 running
  section 150 177 extensions
  section 177 205 ffi library
  section 205 227 ffi tutorial
  section 227 246 ffi.* api
  section 246 276 ffi semantics
  section 276 299 jit.* library
  section 299 318 lua/c api
  section 318 343 profiler
  section 343 366 status
  section 366 390 changes
  section 390 403 faq
  section 403 436 performance e<rchevron>
  section 436 462 wiki e<rchevron>
  section 462 716 mailing list e<rchevron>
  section 716 1836 luajit 2.1.0-beta3 e<mdash> 2017-05-01
  section 770 811 rewrite memory block allocator.
  section 811 860 add various extension from lua 5.2/5.3.
  section 860 911 remove old lua 5.0 compatibility defines.
  section 911 982 set arg table before evaluating lua_init and -e chunks.
  section 982 1041 fix fold rules for math.abs() and fp negation.
  section 1041 1093 fix soft-float math.abs() and negation.
  section 1093 1159 fix formatting of some small denormals at low precision.
  section 1159 1203 lj_gc64: add jit compiler support.
  section 1203 1251 x64/lj_gc64: add jit compiler backend.
  section 1251 1317 x86/x64: generate bmi2 shifts and rotates, if available.
  section 1317 1376 windows/x86: add full exception interoperability.
  section 1376 1416 arm64: add big-endian support.
  section 1416 1458 arm64: add jit compiler backend.
  section 1458 1495 mips: fix tsetr barrier.
  section 1495 1539 mips: support mips16 interlinking.
  section 1539 1598 mips soft-float: fix code generation for href.
  section 1598 1659 mips64: add mips64 hard-float jit compiler backend.
  section 1659 1733 mips64: add mips64 hard-float/soft-float support to
  section 1733 1778 ffi: compile bitfield loads/stores.
  section 1778 1836 various fixes common with the 2.0 branch.
  section 1836 2337 luajit 2.1.0-beta2 e<mdash> 2016-03-03
  section 1890 1923 enable trace stitching.
  section 1923 1998 use internal implementation for converting fp numbers to
  section 1998 2063 parse unicode escape \u{xx...} in string literals.
  section 2063 2101 add mips soft-float support.
  section 2101 2148 switch mips port to dual-number mode.
  section 2148 2214 x86/x64: add support for aes-ni, avx and avx2 to dynasm.
  section 2214 2256 ffi: add ssize_t declaration.
  section 2256 2300 ffi: parse #line nn and #nn.
  section 2300 2337 various minor fixes.
  section 2337 4583 luajit 2.1.0-beta1 e<mdash> 2015-08-25
  section 2527 2567 changes to the vm core:
  section 2567 2612 add low-overhead profiler (-jp).
  section 2612 2714 add lj_gc64 mode: 64 bit gc object references (really: 47
  section 2714 2793 add lj_fr2 mode: two-slot frame info. required by lj_gc64
  section 2793 2843 add table.new() and table.clear().
  section 2843 2900 parse binary number literals (0bxxx).
  section 2900 2950 improvements to the jit compiler:
  section 2950 2999 add trace stitching (disabled for now).
  section 2999 3223 compile various builtins: string.char(),
  section 3223 3298 compile string.find() for fixed string searches (no
  section 3298 3349 compile bc_tsetm, e.g. {1,2,3,f()}.
  section 3349 3401 compile string concatenations (bc_cat).
  section 3401 3442 compile __concat metamethod.
  section 3442 3487 various minor optimizations.
  section 3487 3521 internal changes:
  section 3521 3586 add support for embedding luajit bytecode for builtins.
  section 3586 3644 replace various builtins with embedded bytecode.
  section 3644 3700 refactor string buffers and string formatting.
  section 3700 3778 remove obsolete non-truncating number to integer conversions.
  section 3778 3801 ports:
  section 3801 3847 add xbox one port (lj_gc64 mode).
  section 3847 3910 arm64: add port of the interpreter (lj_gc64 mode).
  section 3910 3981 x64: add separate port of the interpreter to lj_gc64 mode.
  section 3981 4053 x86/x64: drop internal x87 math functions. use libm functions.
  section 4053 4127 x86: remove x87 support from interpreter. sse2 is mandatory
  section 4127 4189 ppc/e500: drop support for this architecture.
  section 4189 4218 ffi library:
  section 4218 4263 ffi: add 64 bit bitwise operations.
  section 4263 4350 ffi: compile vla/vls and large cdata allocations with default
  section 4350 4421 ffi: compile conversions from functions to function pointers.
  section 4421 4482 ffi: compile lightuserdata to void * conversion.
  section 4482 4532 ffi: compile ffi.gc(cdata, nil), too.
  section 4532 4583 ffi: add ffi.typeinfo().
  section 4583 6868 luajit 2.0.5 e<mdash> 2017-05-01
  section 4631 4684 add workaround for msvc 2015 stdio changes.
  section 4684 4758 limit mcode alloc probing, depending on the available pool
  section 4758 4829 fix overly restrictive range calculation in mcode allocation.
  section 4829 4880 fix out-of-scope goto handling in parser.
  section 4880 4950 remove internal __mode = k and replace with safe check.
  section 4950 5004 add proto field to jit.util.funcinfo().
  section 5004 5043 fix gc step size calculation.
  section 5043 5115 initialize uv->immutable for upvalues of loaded chunks.
  section 5115 5177 fix for cdata vs. non-cdata arithmetics/comparisons.
  section 5177 5240 drop leftover regs in for iterator assignment, too.
  section 5240 5281 fix phi remarking in sink pass.
  section 5281 5354 dont try to record outermost pcall() return to lower frame.
  section 5354 5431 add guard for obscure aliasing between open upvalues and ssa
  section 5431 5510 remove assumption that lj_math_random_step() doesnt clobber
  section 5510 5580 fix handling of non-numeric strings in arithmetic coercions.
  section 5580 5647 fix recording of select(n, ...) with off-trace varargs
  section 5647 5686 fix install for cross-builds.
  section 5686 5762 dont allocate unused 2nd result register in jit compiler
  section 5762 5823 drop marks from replayed instructions when sinking.
  section 5823 5853 fix unsinking check.
  section 5853 5902 properly handle oom in trace_save().
  section 5902 5979 limit number of arguments given to io.lines() and
  section 5979 6015 fix narrowing of tobit.
  section 6015 6058 osx: fix build with recent xcode.
  section 6058 6123 x86/x64: dont spill an explicit ref_base in the ir.
  section 6123 6173 x86/x64: fix instruction length decoder.
  section 6173 6246 x86/x64: search for exit jumps with instruction length decoder.
  section 6246 6310 arm: fix blx encoding for thumb interworking calls.
  section 6310 6368 mips: dont use rid_gp as a scratch register.
  section 6368 6429 mips: fix emitted code for u32 to float conversion.
  section 6429 6491 mips: backport workaround for compact unwind tables.
  section 6491 6535 mips: fix cross-endian jit.bcsave.
  section 6535 6582 mips: fix bc_isnext fallback path.
  section 6582 6646 mips: fix use of ffgccheck delay slots in interpreter.
  section 6646 6703 ffi: fix fold rules for int64_t comparisons.
  section 6703 6753 ffi: fix split pass for conv i64.u64.
  section 6753 6794 ffi: fix ipairs() recording.
  section 6794 6868 ffi: dont propagate qualifiers into subtypes of complex.
  section 6868 9694 luajit 2.0.4 e<mdash> 2015-05-14
  section 6916 6968 fix stack check in narrowing optimization.
  section 6968 7028 fix lua/c api typecheck error for special indexes.
  section 7028 7070 fix string to number conversion.
  section 7070 7122 fix lexer error for chunks without tokens.
  section 7122 7196 dont compile ir_retf after callt to ff with-side
  section 7196 7263 fix bc_uclo/bc_jmp join optimization in lua parser.
  section 7263 7320 fix corner case in string to number conversion.
  section 7320 7389 gracefully handle lua_error() for a suspended coroutine.
  section 7389 7445 avoid error messages when building with clang.
  section 7445 7519 fix snapshot #0 handling for traces with a stack check on
  section 7519 7583 fix fused constant loads under high register pressure.
  section 7583 7636 invalidate backpropagation cache after dce.
  section 7636 7666 fix abc elimination.
  section 7666 7727 fix debug info for main chunk of stripped bytecode.
  section 7727 7782 fix fold rule for string.sub(s, ...) == k.
  section 7782 7831 fix fold rule for strref of snew.
  section 7831 7896 fix frame traversal while searching for error function.
  section 7896 7962 prevent gc estimate miscalculation due to buffer growth.
  section 7962 8016 prevent adding side traces for stack checks.
  section 8016 8084 fix top slot calculation for snapshots with continuations.
  section 8084 8141 fix check for reuse of scev results in forl.
  section 8141 8168 add ps vita port.
  section 8168 8216 fix compatibility issues with illumos.
  section 8216 8260 fix dragonfly build (unsupported).
  section 8260 8332 openbsd/x86: better executable memory allocation for w^x mode.
  section 8332 8392 x86: fix argument checks for ipairs() iterator.
  section 8392 8463 x86: lj_math_random_step() clobbers xmm regs on osx clang.
  section 8463 8536 x86: fix code generation for unused result of math.random().
  section 8536 8622 x64: allow building with luajit_use_sysmalloc and
  section 8622 8675 x86/x64: fix argument check for bit shifts.
  section 8675 8739 x86/x64: fix code generation for fused test/arith ops.
  section 8739 8793 arm: fix write barrier check in bc_usets.
  section 8793 8857 ppc: fix red zone overflow in machine code generation.
  section 8857 8898 ppc: dont use mcrxr on ppe.
  section 8898 8962 various archs: fix excess stack growth in interpreter.
  section 8962 9022 ffi: fix fold rule for tobit + conv num.u32.
  section 9022 9072 ffi: prevent dse across ffi.string().
  section 9072 9147 ffi: no meta fallback when indexing pointer to incomplete
  section 9147 9203 ffi: fix initialization of unions of subtypes.
  section 9203 9269 ffi: fix cdata vs. non-cdata arithmetic and comparisons.
  section 9269 9346 ffi: fix __index/__newindex metamethod resolution for
  section 9346 9403 ffi: fix compilation of reference field access.
  section 9403 9472 ffi: fix frame traversal for backtraces with ffi callbacks.
  section 9472 9550 ffi: fix recording of indexing a struct pointer ctype object
  section 9550 9627 ffi: allow non-scalar cdata to be compared for equality by
  section 9627 9694 ffi: fix pseudo type conversions for type punning.
  section 9694 11483 luajit 2.0.3 e<mdash> 2014-03-12
  section 9742 9765 add ps4 port.
  section 9765 9814 add support for multilib distro builds.
  section 9814 9838 fix osx build.
  section 9838 9864 fix mingw build.
  section 9864 9893 fix xbox 360 build.
  section 9893 9946 improve uload forwarding for open upvalues.
  section 9946 10021 fix gc steps threshold handling when called by jit-compiled
  section 10021 10087 fix argument checks for math.deg() and math.rad().
  section 10087 10125 fix jit.flush(func|true).
  section 10125 10194 respect jit.off(func) when returning to a function, too.
  section 10194 10249 fix compilation of string.byte(s, nil, n).
  section 10249 10317 fix line number for relocated bytecode after closure fixup
  section 10317 10362 fix frame traversal for backtraces.
  section 10362 10392 fix abc elimination.
  section 10392 10433 fix handling of redundant phis.
  section 10433 10492 fix snapshot restore for exit to function header.
  section 10492 10557 fix type punning alias analysis for constified pointers
  section 10557 10627 fix call unroll checks in the presence of metamethod frames.
  section 10627 10683 fix initial maxslot for down-recursive traces.
  section 10683 10752 prevent base register coalescing if parent uses ir_retf.
  section 10752 10822 dont purge modified function from stack slots in bc_ret.
  section 10822 10860 fix recording of bc_varg.
  section 10860 10920 dont access dangling reference to reallocated ir.
  section 10920 10985 fix frame depth display for bytecode dump in -jdump.
  section 10985 11050 arm: fix register allocation when rematerializing fprs.
  section 11050 11111 x64: fix store to upvalue for lightuserdata values.
  section 11111 11181 ffi: add missing gc steps for callback argument conversions.
  section 11181 11224 ffi: properly unload loaded dlls.
  section 11224 11279 ffi: fix argument checks for ffi.string().
  section 11279 11339 ffi/x64: fix passing of vector arguments to calls.
  section 11339 11403 ffi: rehash finalizer table after gc cycle, if needed.
  section 11403 11483 ffi: fix cts->l for cdata unsinking in snapshot restore.
  section 11483 13243 luajit 2.0.2 e<mdash> 2013-06-03
  section 11531 11591 fix memory access check for fast string interning.
  section 11591 11640 fix msvc intrinsics for older versions.
  section 11640 11693 add missing gc steps for io.* functions.
  section 11693 11762 fix spurious red zone overflows in machine code generation.
  section 11762 11816 fix jump-range constrained mcode allocation.
  section 11816 11867 inhibit dse for implicit loads via calls.
  section 11867 11937 fix builtin string to number conversion for overflow digits.
  section 11937 12003 fix optional argument handling while recording builtins.
  section 12003 12065 fix optional argument handling in table.concat().
  section 12065 12133 add partial support for building with mingw64 gcc 4.8-seh.
  section 12133 12213 add missing phi barrier to string.sub(str, a, b) == kstr
  section 12213 12261 fix compatibility issues with illumos.
  section 12261 12333 arm: fix cache flush/sync for exit stubs of jit-compiled code.
  section 12333 12402 mips: fix cache flush/sync for jit-compiled code jump area.
  section 12402 12474 ppc: add plt suffix for external calls from assembler code.
  section 12474 12529 ffi: fix snapshot substitution in split pass.
  section 12529 12595 ffi/x86: fix register allocation for 64 bit comparisons.
  section 12595 12670 ffi: fix tailcall in lowest frame to c function with bool
  section 12670 12734 ffi: ignore long type specifier in ffi.istype().
  section 12734 12823 ffi: fix calling conventions for 32 bit osx and ios simulator
  section 12823 12903 ffi: fix calling conventions for arm hard-float eabi (nested
  section 12903 12981 ffi: improve error messages for arithmetic and comparison
  section 12981 13053 ffi: insert no-op type conversion for pointer to integer cast.
  section 13053 13103 ffi: fix unroll limit for ffi.fill().
  section 13103 13161 ffi: must sink xbar together with xstores.
  section 13161 13243 ffi: preserve intermediate string for const char *
  section 13243 14290 luajit 2.0.1 e<mdash> 2013-02-19
  section 13291 13343 dont clear frame for out-of-memory error.
  section 13343 13407 leave hook when resume catches error thrown from hook.
  section 13407 13466 add missing gc steps for template table creation.
  section 13466 13525 fix discharge order of comparisons in lua parser.
  section 13525 13576 improve buffer handling for io.read().
  section 13576 13643 osx: add support for mach-o object files to -b option.
  section 13643 13666 fix ps3 port.
  section 13666 13701 fix/enable xbox 360 port.
  section 13701 13764 x86/x64: always mark ref for shift count as non-weak.
  section 13764 13828 x64: dont fuse implicitly 32-to-64 extended operands.
  section 13828 13876 arm: fix armhf call argument handling.
  section 13876 13941 arm: fix code generation for integer math.min/math.max.
  section 13941 13994 ppc/e500: fix lj_vm_floor() for inf/nan.
  section 13994 14067 ffi: change priority of table initializer variants for structs.
  section 14067 14140 ffi: fix code generation for bool call result check on x86/x64.
  section 14140 14215 ffi: load ffi library on-demand for bytecode with cdata
  section 14215 14290 ffi: fix handling of qualified transparent structs/unions.
  section 14290 15159 luajit 2.0.0 e<mdash> 2012-11-08
  section 14338 14384 correctness and completeness:
  section 14384 14416 fix android/x86 build.
  section 14416 14489 fix recording of equality comparisons with __eq metamethods.
  section 14489 14535 fix detection of immutable upvalues.
  section 14535 14607 replace error with panic for callbacks from jit-compiled code.
  section 14607 14672 fix builtin string to number conversion for int_min.
  section 14672 14735 dont create unneeded array part for template tables.
  section 14735 14773 fix conv.num.int sinking.
  section 14773 14846 dont propagate implicitly widened number to index metamethods.
  section 14846 14910 arm: fix ordered comparisons of number vs. non-number.
  section 14910 14977 ffi: fix code generation for replay of sunk float fields.
  section 14977 15015 ffi: fix signedness of bool.
  section 15015 15081 ffi: fix recording of bool call result check on x86/x64.
  section 15081 15159 ffi: fix stack-adjustment for __thiscall callbacks.
  section 15159 20704 luajit 2.0.0-beta11 e<mdash> 2012-10-16
  section 15214 15244 new features:
  section 15244 15316 use arm vfp instructions, if available (build-time detection).
  section 15316 15373 add support for arm hard-float eabi (armhf).
  section 15373 15396 add ps3 port.
  section 15396 15478 add many features from lua 5.2, e.g. goto/labels. refer to
  section 15478 15519 ffi: add parameterized c types.
  section 15519 15568 ffi: add support for copy constructors.
  section 15568 15652 ffi: equality comparisons never raise an error (treat as
  section 15652 15702 ffi: box all accessed or returned enums.
  section 15702 15774 ffi: check for __new metamethod when calling a constructor.
  section 15774 15849 ffi: handle __pairs/__ipairs metamethods for cdata
  section 15849 15934 ffi: convert io.* file handle to file * pointer (but as a
  section 15934 15996 ffi: detect and support type punning through unions.
  section 15996 16049 ffi: improve various error messages.
  section 16049 16094 build-system reorganization:
  section 16094 16286 reorganize directory layout:
  section 16286 16367 add minified lua interpreter plus lua bitop (minilua) to run
  section 16367 16422 change dynasm bit operations to use lua bitop
  section 16422 16493 translate only vm_*.dasc for detected target architecture.
  section 16493 16549 improve target detection for msvcbuild.bat.
  section 16549 16615 fix build issues on cygwin and mingw with optional msys.
  section 16615 16695 handle cross-compiles with fpu/no-fpu or hard-fp/soft-fp abi
  section 16695 16760 remove some library functions for no-jit/no-ffi builds.
  section 16760 16820 add uninstall target to top-level makefile.
  section 16820 16866 correctness and completeness:
  section 16866 16915 preserve snapshot #0 pc for all traces.
  section 16915 16971 fix argument checks for coroutine.create().
  section 16971 17052 command line prints version and jit status to stdout, not
  section 17052 17114 fix userdata __gc separations at lua state close.
  section 17114 17184 fix tdup to hload forwarding for lj_dualnum builds.
  section 17184 17230 fix buffer check in bytecode writer.
  section 17230 17270 make os.date() thread-safe.
  section 17270 17325 add missing declarations for msvc intrinsics.
  section 17325 17385 fix dispatch table modifications for return hooks.
  section 17385 17481 workaround for msvc conversion bug (double e<rarr>
  section 17481 17527 fix fold rule (i-j)-i => 0-j.
  section 17527 17573 never use dwarf unwinder on windows.
  section 17573 17642 fix shrinking of direct mapped blocks in builtin allocator.
  section 17642 17701 limit recursion depth in string.match() et al.
  section 17701 17777 fix late despecialization of itern after loop has been
  section 17777 17861 fix f and l options for debug.getinfo() and
  section 17861 17899 fix package.searchpath().
  section 17899 17971 osx: change dylib names to be consistent with other platforms.
  section 17971 18035 android: workaround for broken sprintf(%g, -0.0).
  section 18035 18119 x86: remove support for ancient cpus without cmov (before
  section 18119 18192 x86: fix register allocation for calls returning register pair.
  section 18192 18273 x86/x64: fix fusion of unsigned byte comparisons with swapped
  section 18273 18321 arm: fix tonumber() argument check.
  section 18321 18409 arm: fix modulo operator and math.floor()/math.ceil() for
  section 18409 18467 arm: invoke split pass for leftover ir_tobit.
  section 18467 18511 arm: fix base register coalescing.
  section 18511 18567 ppc: fix interpreter state setup in callbacks.
  section 18567 18614 ppc: fix string.sub() range check.
  section 18614 18686 mips: support generation of mips/mipsel bytecode object files.
  section 18686 18747 mips: fix calls to floor()/ceil()/trunc().
  section 18747 18807 arm/ppc: detect more target architecture variants.
  section 18807 18890 arm/ppc/e500/mips: fix tailcalls from fast functions, esp.
  section 18890 18952 arm/ppc/mips: fix rematerialization of fp constants.
  section 18952 19014 ffi: dont call freelibrary() on our own exe/dll.
  section 19014 19071 ffi: resolve metamethods for constructors, too.
  section 19071 19154 ffi: properly disable callbacks on ios (would require
  section 19154 19211 ffi: fix cdecl string parsing during recording.
  section 19211 19276 ffi: show address pointed to for tostring(ref), too.
  section 19276 19341 ffi: fix alignment of c call argument/return structure.
  section 19341 19396 ffi: initialize all fields of standard types.
  section 19396 19475 ffi: fix callback handling when new c types are declared in
  section 19475 19533 ffi: fix recording of constructors for pointers.
  section 19533 19599 ffi: always resolve metamethods for pointers to structs.
  section 19599 19679 ffi: correctly propagate alignment when interning nested types.
  section 19679 19736 structural and performance enhancements:
  section 19736 19800 add allocation sinking and store sinking optimization.
  section 19800 19838 constify immutable upvalues.
  section 19838 19955 add builtin string to integer or fp number conversion. improves
  section 19955 20063 create string hash slots in template tables for non-const
  section 20063 20128 eliminate hrefk guard for template table references.
  section 20128 20165 add various new fold rules.
  section 20165 20234 dont use stack unwinding for lua_yield() (slow on x64).
  section 20234 20313 arm, ppc, mips: improve xload operand fusion and register
  section 20313 20391 ppc, mips: compile math.sqrt() to sqrt instruction, if
  section 20391 20451 ffi: fold kptr + constant offset in split pass.
  section 20451 20514 ffi: optimize/inline ffi.copy() and ffi.fill().
  section 20514 20570 ffi: compile and optimize array/struct copies.
  section 20570 20704 ffi: compile ffi.typeof(cdata|ctype), ffi.sizeof(),
  section 20704 24056 luajit 2.0.0-beta10 e<mdash> 2012-05-09
  section 20759 20789 new features:
  section 20789 20954 the mips of luajit is complete. it requires a cpu conforming to
  section 20954 21043 auto-detect target arch via cross-compiler. no need for
  section 21043 21089 make dynasm compatible with lua 5.2.
  section 21089 21179 from lua 5.2: try __tostring metamethod on non-string error
  section 21179 21225 correctness and completeness:
  section 21225 21278 fix parsing of hex literals with exponents.
  section 21278 21335 fix bytecode dump for certain number constants.
  section 21335 21403 fix argument type in error message for relative arguments.
  section 21403 21471 fix argument error handling on lua stacks without a frame.
  section 21471 21532 add missing mcode limit check in assembler backend.
  section 21532 21569 fix compilation on openbsd.
  section 21569 21634 avoid recursive gc steps after gc-triggered trace exit.
  section 21634 21699 replace <unwind.h> definitions with our own.
  section 21699 21773 fix osx build issues. bump minimum required osx version to
  section 21773 21832 fix discharge order of comparisons in lua parser.
  section 21832 21911 ensure running __gc of userdata created in __gc at state
  section 21911 21981 limit number of userdata __gc separations at state close.
  section 21981 22069 fix bytecode jmp slot range when optimizing and/or
  section 22069 22100 fix dse of ustore.
  section 22100 22167 make lua_concat() work from c hook with partial frame.
  section 22167 22249 add required phis for implicit conversions, e.g. via xref
  section 22249 22318 add more comparison variants to valgrind suppressions file.
  section 22318 22389 disable loading bytecode with an extra header (bom or #!).
  section 22389 22426 fix phi stack slot syncing.
  section 22426 22486 arm: reorder type/value tests to silence valgrind.
  section 22486 22556 arm: fix register allocation for ldrd-optimized hrefk.
  section 22556 22612 arm: fix conditional branch fixup for obar.
  section 22612 22676 arm: invoke split pass for double args in ffi call.
  section 22676 22752 arm: handle all call* ops with double results in split
  section 22752 22802 arm: fix rejoin of pow in split pass.
  section 22802 22877 arm: fix compilation of math.sinh, math.cosh,
  section 22877 22942 arm, ppc: avoid pointless arg clearing in bc_ifuncf.
  section 22942 22990 ppc: fix resume after yield from hook.
  section 22990 23043 ppc: fix argument checking for rawget().
  section 23043 23106 ppc: fix fusion of floating-point xload/xstore.
  section 23106 23166 ppc: fix hrefk code generation for huge tables.
  section 23166 23226 ppc: use builtin d-cache/i-cache sync code.
  section 23226 23255 ffi library:
  section 23255 23306 ignore empty statements in ffi.cdef().
  section 23306 23372 ignore number parsing errors while skipping definitions.
  section 23372 23446 dont touch frame in callbacks with tailcalls to fast
  section 23446 23495 fix library unloading on posix systems.
  section 23495 23559 finalize cdata before userdata when closing the state.
  section 23559 23625 change ffi.load() library name resolution for cygwin.
  section 23625 23691 fix resolving of function name redirects on windows/x86.
  section 23691 23748 fix symbol resolving error messages on windows.
  section 23748 23808 fix blacklisting of c functions calling callbacks.
  section 23808 23856 fix result type of pointer difference.
  section 23856 23913 use correct pc in ffi metamethod error message.
  section 23913 23978 allow typedef _bool int bool; for the windows api.
  section 23978 24056 dont record test for bool result of call, if ignored.
  section 24056 27553 luajit 2.0.0-beta9 e<mdash> 2011-12-14
  section 24110 24140 new features:
  section 24140 24296 ppc port of luajit is complete. default is the dual-number port
  section 24296 24331 add ffi callback support.
  section 24331 24422 extend -b to generate .c, .h or .obj/.o files with
  section 24422 24482 allow loading embedded bytecode with require().
  section 24482 24573 from lua 5.2: change to \z escape. reject undefined escape
  section 24573 24619 correctness and completeness:
  section 24619 24691 fix osx 10.7 build. fix install_name and versioning on osx.
  section 24691 24715 fix ios build.
  section 24715 24753 install dis_arm.lua, too.
  section 24753 24807 mark installed shared library as executable.
  section 24807 24881 add debug option to msvcbuild.bat and improve error
  section 24881 24928 fix data-flow analysis for iterators.
  section 24928 24990 fix forced unwinding triggered by external unwinder.
  section 24990 25062 record missing for loop slot loads (return to lower frame).
  section 25062 25125 always use ansi variants of windows system functions.
  section 25125 25196 fix gc barrier for multi-result table constructor (tsetm).
  section 25196 25233 fix/add various fold rules.
  section 25233 25308 add potential phi for number conversions due to type
  section 25308 25372 do not eliminate phis only referenced from other phis.
  section 25372 25450 correctly anchor implicit number to string conversions in lua/c
  section 25450 25491 fix various stack limit checks.
  section 25491 25572 x64: use thread-safe exceptions for external unwinding (gcc
  section 25572 25630 x64: fix result type of cdata index conversions.
  section 25630 25701 x64: fix math.random() and bit.bswap() code generation.
  section 25701 25749 x64: fix lightuserdata comparisons.
  section 25749 25817 x64: always extend stack-passed arguments to pointer size.
  section 25817 25870 arm: many fixes to code generation backend.
  section 25870 25925 ppc/e500: fix dispatch for binop metamethods.
  section 25925 26007 ppc/e500: save/restore condition registers when
  section 26007 26085 ppc/e500: fix write barrier in stores of strings to upvalues.
  section 26085 26114 ffi library:
  section 26114 26146 fix c comment parsing.
  section 26146 26204 fix snapshot optimization for cdata comparisons.
  section 26204 26264 fix recording of const/enum lookups in namespaces.
  section 26264 26339 fix call argument and return handling for i8/u8/i16/u16
  section 26339 26383 fix unfused loads of float fields.
  section 26383 26423 fix ffi.string() recording.
  section 26423 26503 save getlasterror() around ffi.load() and symbol
  section 26503 26558 improve ld script detection in ffi.load().
  section 26558 26624 record loads/stores to external variables in namespaces.
  section 26624 26690 compile calls to stdcall, fastcall and vararg functions.
  section 26690 26751 treat function ctypes like pointers in comparisons.
  section 26751 26808 resolve __call metamethod for pointers, too.
  section 26808 26866 record c function calls with bool return values.
  section 26866 26898 record ffi.errno().
  section 26898 26959 x86: fix number to uint32_t conversion rounding.
  section 26959 27017 x86: fix 64 bit arithmetic in assembler backend.
  section 27017 27072 x64: fix struct-by-value calling conventions.
  section 27072 27148 arm: ensure invocation of split pass for float conversions.
  section 27148 27205 structural and performance enhancements:
  section 27205 27261 display trace types with -jv and -jdump.
  section 27261 27332 record isolated calls. but prefer recording loops over calls.
  section 27332 27469 specialize to prototype for non-monomorphic functions. solves
  section 27469 27553 always generate a portable vmdef.lua. easier for distros.
  section 27553 29179 luajit 2.0.0-beta8 e<mdash> 2011-06-23
  section 27607 27637 new features:
  section 27637 27689 soft-float arm port of luajit is complete.
  section 27689 27769 add support for bytecode loading/saving and -b command line
  section 27769 27853 from lua 5.2: __len metamethod for tables (disabled by
  section 27853 27899 correctness and completeness:
  section 27899 27942 arm: misc. fixes for interpreter.
  section 27942 28007 x86/x64: fix bit.* argument checking in interpreter.
  section 28007 28078 catch early out-of-memory in memory allocator initialization.
  section 28078 28149 fix data-flow analysis for paths leading to an upvalue close.
  section 28149 28213 fix check for missing arguments in string.format().
  section 28213 28276 fix solaris/x86 build (note: not a supported target).
  section 28276 28349 fix recording of loops with instable directions in side traces.
  section 28349 28421 x86/x64: fix fusion of comparisons with u8/u16 xload.
  section 28421 28491 x86/x64: fix register allocation for variable shifts.
  section 28491 28520 ffi library:
  section 28520 28605 add ffi.errno(). save errno/getlasterror() around
  section 28605 28653 fix __gc for vla/vls cdata objects.
  section 28653 28725 fix recording of casts from 32 bit cdata pointers to integers.
  section 28725 28785 tonumber(cdata) returns nil for non-numbers.
  section 28785 28844 show address pointed to for tostring(pointer).
  section 28844 28912 print null pointers as cdata<... *>: null.
  section 28912 28991 support __tostring metamethod for pointers to structs, too.
  section 28991 29048 structural and performance enhancements:
  section 29048 29100 more tuning for loop unrolling heuristics.
  section 29100 29179 flatten and compress in-memory debug info (saves ~70%).
  section 29179 30940 luajit 2.0.0-beta7 e<mdash> 2011-05-05
  section 29233 29263 new features:
  section 29263 29320 arm port of the luajit interpreter is complete.
  section 29320 29395 ffi library: add ffi.gc(), ffi.metatype(),
  section 29395 29465 ffi library: resolve ld script redirection in ffi.load().
  section 29465 29548 from lua 5.2: package.searchpath(), fp:read(*l),
  section 29548 29668 from lua 5.2, disabled by default: empty statement,
  section 29668 29714 correctness and completeness:
  section 29714 29752 ffi library: numerous fixes.
  section 29752 29810 fix type mismatches in store-to-load forwarding.
  section 29810 29858 fix error handling within metamethods.
  section 29858 29888 fix table.maxn().
  section 29888 29933 improve accuracy of x^-k on x64.
  section 29933 29990 fix code generation for intel atom in x64 mode.
  section 29990 30021 fix narrowing of pow.
  section 30021 30071 fix recording of retried fast functions.
  section 30071 30134 fix code generation for bit.bnot() and multiplies.
  section 30134 30184 fix error location within cpcall frames.
  section 30184 30235 add workaround for old libgcc unwind bug.
  section 30235 30306 fix lua_yield() and getmetatable(lightuserdata) on x64.
  section 30306 30353 misc. fixes for ppc/e500 interpreter.
  section 30353 30412 fix stack slot updates for down-recursion.
  section 30412 30469 structural and performance enhancements:
  section 30469 30541 add dual-number mode (int/double) for the vm. enabled for arm.
  section 30541 30610 improve narrowing of arithmetic operators and for loops.
  section 30610 30686 tune loop unrolling heuristics and increase trace recorder
  section 30686 30764 eliminate dead slots in snapshots using bytecode data-flow
  section 30764 30811 avoid phantom stores to proxy tables.
  section 30811 30860 optimize lookups in empty proxy tables.
  section 30860 30940 improve bytecode optimization of and/or operators.
  section 30940 32899 luajit 2.0.0-beta6 e<mdash> 2011-02-11
  section 30994 31024 new features:
  section 31024 31092 powerpc/e500v2 port of the luajit interpreter is complete.
  section 31092 31304 various minor features from lua 5.2: hex escapes in literals,
  section 31304 31383 lua 5.2 __pairs and __ipairs metamethods (disabled by
  section 31383 31435 initial release of the ffi library.
  section 31435 31481 correctness and completeness:
  section 31481 31537 fix string.format() for non-finite numbers.
  section 31537 31607 fix memory leak when compiled to use the built-in allocator.
  section 31607 31670 x86/x64: fix unnecessary resize in tsetm bytecode.
  section 31670 31733 fix various gc issues with traces and jit.flush().
  section 31733 31791 x64: fix fusion of indexes for array references.
  section 31791 31860 x86/x64: fix stack overflow handling for coroutine results.
  section 31860 31918 enable low-2gb memory allocation on freebsd/x64.
  section 31918 31993 fix collectgarbage(count) result if more than 2gb is in
  section 31993 32029 fix parsing of hex floats.
  section 32029 32102 x86/x64: fix loop branch inversion with trailing href+ne/eq.
  section 32102 32133 add jit.os string.
  section 32133 32198 coroutine.create() permits running c functions, too.
  section 32198 32255 fix osx build to work with newer ld64 versions.
  section 32255 32324 fix bytecode optimization of and/or operators.
  section 32324 32381 structural and performance enhancements:
  section 32381 32442 emit specialized bytecode for pairs()/next().
  section 32442 32500 improve bytecode coalescing of nil constants.
  section 32500 32544 compile calls to vararg functions.
  section 32544 32574 compile select().
  section 32574 32640 improve alias analysis, esp. for loads from allocations.
  section 32640 32688 tuning of various compiler heuristics.
  section 32688 32745 refactor and extend ir conversion instructions.
  section 32745 32812 x86/x64: various backend enhancements related to the ffi.
  section 32812 32899 add split pass to split 64 bit ir instructions for 32 bit cpus.
  section 32899 34221 luajit 2.0.0-beta5 e<mdash> 2010-08-24
  section 32953 32999 correctness and completeness:
  section 32999 33053 fix trace exit dispatch to function headers.
  section 33053 33114 fix windows and osx builds with luajit_disable_jit.
  section 33114 33186 reorganize and fix placement of generated machine code on x64.
  section 33186 33224 fix tnew in x64 interpreter.
  section 33224 33299 do not eliminate phis for values only referenced from side
  section 33299 33375 os-independent canonicalization of strings for non-finite
  section 33375 33425 fix string.char() range check on x64.
  section 33425 33481 fix tostring() resolving within print().
  section 33481 33524 fix error handling for next().
  section 33524 33593 fix passing of constant arguments to external calls on x64.
  section 33593 33670 fix interpreter argument check for two-argument sse math
  section 33670 33735 fix c frame chain corruption caused by lua_cpcall().
  section 33735 33798 fix return from pcall() within active hook.
  section 33798 33855 structural and performance enhancements:
  section 33855 33921 replace on-trace gc frame syncing with interpreter exit.
  section 33921 34002 improve hash lookup specialization by not removing dead keys
  section 34002 34045 turn traces into true gc objects.
  section 34045 34112 avoid starting a gc cycle immediately after library init.
  section 34112 34171 add weak guards to improve dead-code elimination.
  section 34171 34221 speed up string interning.
  section 34221 34989 luajit 2.0.0-beta4 e<mdash> 2010-03-28
  section 34275 34321 correctness and completeness:
  section 34321 34384 fix precondition for on-trace creation of table keys.
  section 34384 34436 fix {f()} on x64 when table is resized.
  section 34436 34502 fix folding of ordered comparisons with same references.
  section 34502 34561 fix snapshot restores for multi-result bytecodes.
  section 34561 34635 fix potential hang when recording bytecode with nested
  section 34635 34718 fix recording of getmetatable(), tonumber() and bad
  section 34718 34783 fix sload fusion across returns to lower frames.
  section 34783 34840 structural and performance enhancements:
  section 34840 34917 add array bounds check elimination. -oabc is enabled by
  section 34917 34989 more tuning for x64, e.g. smaller table objects.
  section 34989 37371 luajit 2.0.0-beta3 e<mdash> 2010-03-07
  section 35043 35076 luajit x64 port:
  section 35076 35157 port integrated memory allocator to linux/x64, windows/x64 and
  section 35157 35208 port interpreter and jit compiler to x64.
  section 35208 35237 port dynasm to x64.
  section 35237 35281 many 32/64 bit cleanups in the vm.
  section 35281 35358 allow building the interpreter with either x87 or sse2
  section 35358 35441 add external unwinding and c++ exception interop (default on
  section 35441 35487 correctness and completeness:
  section 35487 35564 fix constructor bytecode generation for certain conditional
  section 35564 35619 fix some cases of ordered string comparisons.
  section 35619 35654 fix lua_tocfunction().
  section 35654 35733 fix cutoff register in jmp bytecode for some conditional
  section 35733 35803 fix phi marking algorithm for references from variant slots.
  section 35803 35857 fix package.cpath for non-default prefix.
  section 35857 35926 fix dwarf2 frame unwind information for interpreter on osx.
  section 35926 35993 drive the gc forward on string allocations in the parser.
  section 35993 36055 implement call/return hooks (zero-cost if disabled).
  section 36055 36094 implement yield from c hooks.
  section 36094 36175 disable jit compiler on older non-sse2 cpus instead of
  section 36175 36232 structural and performance enhancements:
  section 36232 36297 compile recursive code (tail-, up- and down-recursion).
  section 36297 36366 improve heuristics for bytecode penalties and blacklisting.
  section 36366 36444 split call/func recording and clean up fast function call
  section 36444 36504 major redesign of internal function call handling.
  section 36504 36575 improve for loop const specialization and integerness checks.
  section 36575 36640 switch to pre-initialized stacks. avoid frame-clearing.
  section 36640 36725 colocation of prototypes and related data: bytecode, constants,
  section 36725 36785 cleanup parser and streamline bytecode generation.
  section 36785 36852 add support for weak ir references to register allocator.
  section 36852 36905 switch to compressed, extensible snapshots.
  section 36905 36963 compile returns to frames below the start frame.
  section 36963 37042 improve alias analysis of upvalues using a disambiguation hash
  section 37042 37121 compile floor/ceil/trunc to sse2 helper calls or sse4.1
  section 37121 37177 add generic c call handling to ir and backend.
  section 37177 37225 improve knum fuse vs. load heuristics.
  section 37225 37271 compile various io.*() functions.
  section 37271 37371 compile math.sinh(), math.cosh(), math.tanh() and
  section 37371 38758 luajit 2.0.0-beta2 e<mdash> 2009-11-09
  section 37425 37497 reorganize build system. build static+shared library on posix.
  section 37497 37580 allow c++ exception conversion on all platforms using a wrapper
  section 37580 37661 automatically catch c++ exceptions and rethrow lua error
  section 37661 37731 check for the correct x87 fpu precision at strategic points.
  section 37731 37780 always use wrappers for libm functions.
  section 37780 37844 resurrect metamethod name strings before copying them.
  section 37844 37899 mark current trace, even if compiler is idle.
  section 37899 37952 ensure file metatable is created only once.
  section 37952 38025 fix type comparisons when different integer types are involved.
  section 38025 38067 fix getmetatable() recording.
  section 38067 38119 fix tdup with dead keys in template table.
  section 38119 38214 jit.flush(tr) returns status. prevent manual flush of a
  section 38214 38288 improve register allocation heuristics for invariant
  section 38288 38371 compile the push/pop variants of table.insert() and
  section 38371 38420 compatibility with msvc link /debug.
  section 38420 38455 fix lua_iscfunction().
  section 38455 38520 fix math.random() when compiled with -fpic (osx).
  section 38520 38550 fix table.maxn().
  section 38550 38603 bump macosx_deployment_target to 10.4
  section 38603 38758 lual_check*() and lual_opt*() now support negative
  section 38758 39336 luajit 2.0.0-beta1 e<mdash> 2009-10-31
  section 38812 38869 this is the first public release of luajit 2.0.
  section 38869 39336 the whole vm has been rewritten from the ground up, so theres

module contact
  section 14 1157 contact
  section 37 60 luajit
  section 60 90 download e<rchevron>
  section 90 112 installation
  section 112 136 running
  section 136 163 extensions
  section 163 191 ffi library
  section 191 213 ffi tutorial
  section 213 232 ffi.* api
  section 232 262 ffi semantics
  section 262 285 jit.* library
  section 285 304 lua/c api
  section 304 329 profiler
  section 329 352 status
  section 352 376 changes
  section 376 389 faq
  section 389 422 performance e<rchevron>
  section 422 448 wiki e<rchevron>
  section 448 746 mailing list e<rchevron>
  section 746 1157 copyright

module ext_c_api
  section 14 4445 lua/c api extensions
  section 50 73 luajit
  section 73 103 download e<rchevron>
  section 103 125 installation
  section 125 149 running
  section 149 176 extensions
  section 176 204 ffi library
  section 204 226 ffi tutorial
  section 226 245 ffi.* api
  section 245 275 ffi semantics
  section 275 298 jit.* library
  section 298 317 lua/c api
  section 317 342 profiler
  section 342 365 status
  section 365 389 changes
  section 389 402 faq
  section 402 435 performance e<rchevron>
  section 435 461 wiki e<rchevron>
  section 461 753 mailing list e<rchevron>
  section 753 1395 luajit_setmode(l, idx, mode) e<mdash> control vm
  section 1395 1534 luajit_setmode(l, 0, luajit_mode_engine|flag)
  section 1534 2105 luajit_setmode(l, idx, luajit_mode_func|flag)
  section 2105 2349 luajit_setmode(l, trace,
  section 2349 4445 luajit_setmode(l, idx, luajit_mode_wrapcfunc|flag)

module ext_ffi
  section 14 7946 ffi library
  section 41 64 luajit
  section 64 94 download e<rchevron>
  section 94 116 installation
  section 116 140 running
  section 140 167 extensions
  section 167 195 ffi library
  section 195 217 ffi tutorial
  section 217 236 ffi.* api
  section 236 266 ffi semantics
  section 266 289 jit.* library
  section 289 308 lua/c api
  section 308 333 profiler
  section 333 356 status
  section 356 380 changes
  section 380 393 faq
  section 393 426 performance e<rchevron>
  section 426 452 wiki e<rchevron>
  section 452 1446 mailing list e<rchevron>
  section 1446 3287 motivating example: calling external c functions
  section 3287 7946 motivating example: using c data structures

module ext_ffi_api
  section 14 16458 ffi.* api functions
  section 52 75 luajit
  section 75 105 download e<rchevron>
  section 105 127 installation
  section 127 151 running
  section 151 178 extensions
  section 178 206 ffi library
  section 206 228 ffi tutorial
  section 228 247 ffi.* api
  section 247 277 ffi semantics
  section 277 300 jit.* library
  section 300 319 lua/c api
  section 319 344 profiler
  section 344 367 status
  section 367 391 changes
  section 391 404 faq
  section 404 437 performance e<rchevron>
  section 437 463 wiki e<rchevron>
  section 463 660 mailing list e<rchevron>
  section 660 1704 glossary
  section 684 758 cdecl e<mdash> an abstract c type declaration (a lua
  section 758 915 ctype e<mdash> a c type object. this is a special kind of
  section 915 1007 cdata e<mdash> a c data object. it holds a value of the
  section 1007 1175 ct e<mdash> a c type specification which can be used for
  section 1175 1345 cb e<mdash> a callback object. this is a c data object
  section 1345 1538 vla e<mdash> a variable-length array is declared with a ?
  section 1538 1704 vls e<mdash> a variable-length struct is a struct c type
  section 1704 1914 declaring and accessing external symbols
  section 1914 3024 ffi.cdef(def)
  section 3024 3911 ffi.c
  section 3911 4747 clib = ffi.load(name [,global])
  section 4747 4909 creating cdata objects
  section 4909 6154 cdata = ffi.new(ct [,nelem] [,init...])
  section 6154 6354 ctype = ffi.typeof(ct)
  section 6354 6675 cdata = ffi.cast(ct, init)
  section 6675 7718 ctype = ffi.metatype(ct, metatable)
  section 7718 8619 cdata = ffi.gc(cdata, finalizer)
  section 8619 8760 c type information
  section 8760 8982 size = ffi.sizeof(ct [,nelem])
  section 8982 9077 align = ffi.alignof(ct)
  section 9077 9313 ofs [,bpos,bsize] = ffi.offsetof(ct, field)
  section 9313 9861 status = ffi.istype(ct, obj)
  section 9861 9887 utility functions
  section 9887 10851 err = ffi.errno([newerr])
  section 10851 11868 str = ffi.string(ptr [,len])
  section 11868 12509 ffi.copy(dst, src, len)
  section 12509 12849 ffi.fill(dst, len [,c])
  section 12849 12885 target-specific information
  section 12885 13454 status = ffi.abi(param)
  section 13454 13530 ffi.os
  section 13530 13620 ffi.arch
  section 13620 13702 methods for callbacks
  section 13702 13978 cb:free()
  section 13978 14290 cb:set(func)
  section 14290 14423 extended standard library functions
  section 14423 14646 n = tonumber(cdata)
  section 14646 15078 s = tostring(cdata)
  section 15078 15228 iter, obj, start = pairs(cdata)
  section 15228 16458 extensions to the lua parser

module ext_ffi_semantics
  section 14 41237 ffi semantics
  section 43 66 luajit
  section 66 96 download e<rchevron>
  section 96 118 installation
  section 118 142 running
  section 142 169 extensions
  section 169 197 ffi library
  section 197 219 ffi tutorial
  section 219 238 ffi.* api
  section 238 268 ffi semantics
  section 268 291 jit.* library
  section 291 310 lua/c api
  section 310 335 profiler
  section 335 358 status
  section 358 382 changes
  section 382 395 faq
  section 395 428 performance e<rchevron>
  section 428 454 wiki e<rchevron>
  section 454 1241 mailing list e<rchevron>
  section 1241 5144 c language support
  section 1989 2051 the \e escape in character and string literals.
  section 2051 2134 the c99/c++ boolean type, declared with the keywords bool or
  section 2134 2214 complex numbers, declared with the keywords complex or
  section 2214 2306 two complex number types: complex (aka complex double)
  section 2306 2388 vector types, declared with the gcc mode or vector_size
  section 2388 2476 unnamed (transparent) struct/union fields inside a
  section 2476 2566 incomplete enum declarations, handled like incomplete
  section 2566 2741 unnamed enum fields inside a struct/union. this is
  section 2741 2826 scoped static const declarations inside a struct/union
  section 2826 2983 zero-length arrays ([0]), empty struct/union,
  section 2983 3025 c++ reference types (int &x).
  section 3025 3090 alternate gcc keywords with __, e.g. __const__.
  section 3090 3247 gcc __attribute__ with the following attributes: aligned,
  section 3247 3326 the gcc __extension__ keyword and the gcc __alignof__
  section 3326 3412 gcc __asm__(symname) symbol name redirection for function
  section 3412 3509 msvc keywords for fixed-length types: __int8, __int16,
  section 3509 3648 msvc __cdecl, __fastcall, __stdcall, __thiscall,
  section 3648 3839 all other gcc/msvc-specific attributes are ignored.
  section 3839 3918 vararg handling: va_list, __builtin_va_list,
  section 3918 3992 from <stddef.h>: ptrdiff_t, size_t,
  section 3992 4154 from <stdint.h>: int8_t, int16_t, int32_t,
  section 4154 4512 from <unistd.h> (posix): ssize_t.
  section 4512 4608 a declaration must always have a type specifier; it doesnt
  section 4608 4852 old-style empty function declarations (k&r) are not allowed.
  section 4852 4995 the long double c type is parsed correctly, but theres no
  section 4995 5069 wide character strings and character literals are not
  section 5069 5144 see below for features that are currently not implemented.
  section 5144 5176 c type conversion rules
  section 5176 6270 conversions from c types to lua objects
  section 6270 7745 conversions from lua objects to c types
  section 7745 9302 conversions between c types
  section 9302 10621 conversions for vararg c function arguments
  section 10621 12327 initializers
  section 10865 10942 if no initializers are given, the object is filled with zero
  section 10942 11066 scalar types (numbers and pointers) accept a single
  section 11066 11224 valarrays (complex numbers and vectors) are treated like
  section 11224 11408 aggregate types (arrays and structs) accept either a single
  section 11408 11696 the elements of an array are initialized, starting at index
  section 11696 11883 byte arrays may also be initialized with a lua string. this
  section 11883 12018 the fields of a struct are initialized in the order of their
  section 12018 12106 only the first field of a union can be initialized with a
  section 12106 12275 elements or fields which are aggregates themselves are
  section 12275 12327 excess initializers cause an error.
  section 12327 15572 table initializers
  section 12459 12593 if the table index [0] is non-nil, then the table is
  section 12593 12803 array elements, starting at index zero, are initialized
  section 12803 12979 if exactly one array element was initialized, its repeated for
  section 12979 13215 the above logic only applies to arrays with a known fixed size.
  section 13215 13467 a struct/union can be initialized in the order of the
  section 13467 13701 otherwise, if neither index [0] nor [1] is present, a
  section 13701 13812 uninitialized fields of a struct are filled with zero bytes,
  section 13812 13968 initialization of a union stops after one field has been
  section 13968 14146 elements or fields which are aggregates themselves are
  section 14146 15572 excess initializers for an array cause an error. excess
  section 15572 16172 operations on cdata objects
  section 16172 19054 indexing a cdata object
  section 16211 16717 indexing a pointer/array: a cdata pointer/array can be
  section 16717 17334 dereferencing a struct/union field: a cdata
  section 17334 17891 indexing a complex number: a complex number can be indexed
  section 17891 19054 indexing a vector: a vector is treated like an array for
  section 19054 20024 calling a cdata object
  section 19092 19473 constructor: a ctype object can be called and used as a
  section 19473 20024 c function call: a cdata function or cdata function pointer
  section 20024 22343 arithmetic on cdata objects
  section 20067 20427 pointer arithmetic: a cdata pointer/array and a cdata number
  section 20427 20668 pointer difference: two compatible cdata pointers/arrays can
  section 20668 21709 64 bit integer arithmetic: the standard arithmetic operators
  section 21709 22343 64 bit bitwise operations: the rules for 64 bit arithmetic
  section 22343 23382 comparisons of cdata objects
  section 22387 22633 pointer comparison: two compatible cdata pointers/arrays can
  section 22633 23140 64 bit integer comparison: two cdata numbers, or a cdata
  section 23140 23382 comparisons for equality/inequality never raise an error.
  section 23382 25165 cdata objects as table keys
  section 24310 24638 if you can get by with the precision of lua numbers (52 bits),
  section 24638 24878 otherwise use either tostring() on 64 bit integers or
  section 24878 25165 create your own specialized hash table implementation using the
  section 25165 26868 parameterized types
  section 26868 28785 garbage collection of cdata objects
  section 28785 30699 callbacks
  section 30699 32557 callback resource handling
  section 32557 34024 callback performance
  section 34024 36539 c library namespaces
  section 34986 35089 external functions: a cdata object with the type of the
  section 35089 35217 external variables: the symbol address is dereferenced and the
  section 35217 35396 constant values (static const or enum constants): the
  section 35396 35531 external variables: the value to be written is converted to the
  section 35531 36539 writing to constant variables or to any other symbol type
  section 36539 38408 no hand-holding!
  section 38408 41237 current status
  section 38622 38693 c declarations are not passed through a c pre-processor, yet.
  section 38693 38904 the c parser is able to evaluate most constant expressions
  section 38904 39063 static const declarations only work for integer types up to
  section 39063 39152 packed struct bitfields that cross container boundaries are
  section 39152 39334 native vector types may be defined with the gcc mode or
  section 39334 39413 the volatile type qualifier is currently ignored by compiled
  section 39413 39955 ffi.cdef silently ignores most re-declarations. note: avoid
  section 39955 39983 vector operations.
  section 39983 40012 table initializers.
  section 40012 40072 initialization of nested struct/union types.
  section 40072 40181 non-default initialization of vla/vls or large c types (>
  section 40181 40216 bitfield initializations.
  section 40216 40292 pointer differences for element sizes that are not a power of
  section 40292 40367 calls to c functions with aggregates passed or returned by
  section 40367 40434 calls to ctype metamethods which are not plain functions.
  section 40434 40521 ctype __newindex tables and non-string lookups in ctype
  section 40521 40561 tostring() for cdata types.
  section 40561 40670 calls to ffi.cdef(), ffi.load() and ffi.metatype().
  section 40670 40714 arithmetic for complex numbers.
  section 40714 40771 passing structs by value to vararg c functions.
  section 40771 41237 c++ exception interoperability does not extend to c functions

module ext_ffi_tutorial
  section 14 18772 ffi tutorial
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 793 mailing list e<rchevron>
  section 793 1452 loading the ffi library
  section 1452 4875 accessing standard system functions
  section 4875 10338 accessing the zlib compression library
  section 10338 13536 defining metamethods for a c type
  section 13536 14742 translating c idioms
  section 14742 18772 to cache or not to cache

module ext_jit
  section 14 4311 jit.* library
  section 46 69 luajit
  section 69 99 download e<rchevron>
  section 99 121 installation
  section 121 145 running
  section 145 172 extensions
  section 172 200 ffi library
  section 200 222 ffi tutorial
  section 222 241 ffi.* api
  section 241 271 ffi semantics
  section 271 294 jit.* library
  section 294 313 lua/c api
  section 313 338 profiler
  section 338 361 status
  section 361 385 changes
  section 385 398 faq
  section 398 431 performance e<rchevron>
  section 431 457 wiki e<rchevron>
  section 457 733 mailing list e<rchevron>
  section 733 901 jit.on()
  section 901 967 jit.flush()
  section 967 1979 jit.on(func|true [,true|false])
  section 1979 2193 jit.flush(tr)
  section 2193 2455 status, ... = jit.status()
  section 2455 2515 jit.version
  section 2515 2653 jit.version_num
  section 2653 2755 jit.os
  section 2755 2872 jit.arch
  section 2872 3357 jit.opt.* e<mdash> jit compiler optimization control
  section 3357 4311 jit.util.* e<mdash> jit compiler introspection

module ext_profiler
  section 14 10462 profiler
  section 38 61 luajit
  section 61 91 download e<rchevron>
  section 91 113 installation
  section 113 137 running
  section 137 164 extensions
  section 164 192 ffi library
  section 192 214 ffi tutorial
  section 214 233 ffi.* api
  section 233 263 ffi semantics
  section 263 286 jit.* library
  section 286 305 lua/c api
  section 305 330 profiler
  section 330 353 status
  section 353 377 changes
  section 377 390 faq
  section 390 423 performance e<rchevron>
  section 423 449 wiki e<rchevron>
  section 449 720 mailing list e<rchevron>
  section 720 805 the bundled high-level profiler, invoked by the -jp command
  section 805 859 a low-level lua api to control the profiler.
  section 859 918 a low-level c api to control the profiler.
  section 918 1882 high-level profiler
  section 1882 4845 -jp=[options[,output]]
  section 2208 2307 f e<mdash> stack dump: function name, otherwise module:line.
  section 2307 2371 f e<mdash> stack dump: ditto, but dump module:name.
  section 2371 2419 l e<mdash> stack dump: module:line.
  section 2419 2511 <number> e<mdash> stack dump depth (callee e<larr>
  section 2511 2600 -<number> e<mdash> inverse stack dump depth (caller
  section 2600 2706 s e<mdash> split stack dump after first stack level. implies
  section 2706 2762 p e<mdash> show full path for module names.
  section 2762 2801 v e<mdash> show vm states.
  section 2801 2836 z e<mdash> show zones.
  section 2836 2910 r e<mdash> show raw sample counts. default: show
  section 2910 2975 a e<mdash> annotate excerpts from source code files.
  section 2975 3035 a e<mdash> annotate complete source code files.
  section 3035 3107 g e<mdash> produce raw output suitable for graphical tools.
  section 3107 3198 m<number> e<mdash> minimum sample percentage to be
  section 3198 4845 i<number> e<mdash> sampling interval in
  section 4845 5598 jit.zone e<mdash> zones
  section 5203 5267 zone(name) pushes a named zone to the zone stack.
  section 5267 5350 zone() pops the current zone from the zone stack and returns
  section 5350 5414 zone:get() returns the current zone name or nil.
  section 5414 5598 zone:flush() flushes the zone stack.
  section 5598 6256 low-level lua api
  section 6256 7420 profile.start(mode, cb) e<mdash> start profiler
  section 6408 6482 f e<mdash> profile with precision down to the function
  section 6482 6552 l e<mdash> profile with precision down to the line level.
  section 6552 7420 i<number> e<mdash> sampling interval in milliseconds
  section 7420 7504 profile.stop() e<mdash> stop profiler
  section 7504 8686 dump = profile.dumpstack([thread,] fmt, depth) e<mdash> dump
  section 7767 7869 p e<mdash> preserve the full path for module names.
  section 7869 7964 f e<mdash> dump the function name if it can be derived.
  section 7964 8016 f e<mdash> ditto, but dump module:name.
  section 8016 8057 l e<mdash> dump module:line.
  section 8057 8136 z e<mdash> zap the following characters for the last dumped
  section 8136 8686 all other characters are added verbatim to the output string.
  section 8686 8852 low-level c api
  section 8852 9514 luajit_profile_start(l, mode, cb, data) e<mdash> start
  section 9514 9606 luajit_profile_stop(l) e<mdash> stop profiler
  section 9606 10462 p = luajit_profile_dumpstack(l, fmt, depth, len) e<mdash>

module extensions
  section 14 13029 extensions
  section 40 63 luajit
  section 63 93 download e<rchevron>
  section 93 115 installation
  section 115 139 running
  section 139 166 extensions
  section 166 194 ffi library
  section 194 216 ffi tutorial
  section 216 235 ffi.* api
  section 235 265 ffi semantics
  section 265 288 jit.* library
  section 288 307 lua/c api
  section 307 332 profiler
  section 332 355 status
  section 355 379 changes
  section 379 392 faq
  section 392 425 performance e<rchevron>
  section 425 451 wiki e<rchevron>
  section 451 1137 mailing list e<rchevron>
  section 1137 1219 extensions modules
  section 1219 1983 bit.* e<mdash> bitwise operations
  section 1983 2127 ffi.* e<mdash> ffi library
  section 2127 2253 jit.* e<mdash> jit compiler control
  section 2253 2330 c api extensions
  section 2330 2383 profiler
  section 2383 2427 enhanced standard library functions
  section 2427 2643 xpcall(f, err [,args...]) passes arguments
  section 2643 2898 loadfile() etc. handle utf-8 source code
  section 2898 3178 tostring() etc. canonicalize nan and e<plusmn>inf
  section 3178 3691 tonumber() etc. use builtin string to number conversion
  section 3691 4655 string.dump(f [,strip]) generates portable bytecode
  section 4655 5007 table.new(narray, nhash) allocates a pre-sized table
  section 5007 5667 table.clear(tab) clears a table
  section 5667 6306 enhanced prng for math.random()
  section 6306 6621 io.* functions handle 64 bit file offsets
  section 6621 6899 debug.* functions identify metamethods
  section 6899 7180 fully resumable vm
  section 7180 10145 extensions from lua 5.2
  section 7366 7402 goto and ::labels::.
  section 7402 7464 hex escapes \x3f and \* escape in strings.
  section 7464 7526 load(string|reader [, chunkname [,mode [,env]]]).
  section 7526 7578 loadstring() is an alias for load().
  section 7578 7625 loadfile(filename [,mode [,env]]).
  section 7625 7658 math.log(x [,base]).
  section 7658 7695 string.rep(s, n [,sep]).
  section 7695 7794 string.format(): %q reversible. %s checks
  section 7794 7840 string matching pattern %g added.
  section 7840 7867 io.read(*l).
  section 7867 7940 io.lines() and file:lines() process io.read() options.
  section 7940 7989 os.exit(status|true|false [,close]).
  section 7989 8049 package.searchpath(name, path [, sep [, rep]]).
  section 8049 8089 package.loadlib(name, *).
  section 8089 8171 debug.getinfo() returns nparams and isvararg for
  section 8171 8235 debug.getlocal() accepts function instead of level.
  section 8235 8325 debug.getlocal() and debug.setlocal() accept negative
  section 8325 8402 debug.getupvalue() and debug.setupvalue() handle c
  section 8402 8460 debug.upvalueid() and debug.upvaluejoin().
  section 8460 8842 lua/c api extensions: lua_version() lua_upvalueid()
  section 8842 8878 command line option -e.
  section 8878 9037 command line checks __tostring for errors.
  section 9037 9106 goto is a keyword and not a valid variable name anymore.
  section 9106 9186 break can be placed anywhere. empty statements (;;) are
  section 9186 9241 __lt, __le are invoked for mixed types.
  section 9241 9301 __len for tables. rawlen() library function.
  section 9301 9375 pairs() and ipairs() check for __pairs and
  section 9375 9428 coroutine.running() returns two results.
  section 9428 9498 table.pack() and table.unpack() (same as unpack()).
  section 9498 9580 io.write() and file:write() return file handle instead of
  section 9580 9654 os.execute() and pipe:close() return detailed exit
  section 9654 9703 debug.setmetatable() returns object.
  section 9703 9765 debug.getuservalue() and debug.setuservalue().
  section 9765 9815 remove math.mod(), string.gfind().
  section 9815 9846 package.searchers.
  section 9846 10145 module() returns the module table.
  section 10145 10638 extensions from lua 5.3
  section 10231 10316 unicode escape \u{xx...} embeds the utf-8 encoding in
  section 10316 10411 the argument table arg can be read (and modified) by
  section 10411 10499 io.read() and file:read() accept formats with or without
  section 10499 10542 table.move(a1, f, e, t [,a2]).
  section 10542 10579 coroutine.isyieldable().
  section 10579 10638 lua/c api extensions: lua_isyieldable()
  section 10638 13029 c++ exception interoperability
  section 11203 11294 c++ exceptions can be caught on the lua side with pcall(),
  section 11294 11424 c++ exceptions will be converted to the generic lua error
  section 11424 11581 its safe to throw c++ exceptions across non-protected lua
  section 11581 11724 lua errors can be caught on the c++ side with catch(...).
  section 11724 11862 throwing lua errors across c++ frames is safe. c++ destructors
  section 11862 11953 c++ exceptions can be caught on the lua side with pcall(),
  section 11953 12083 c++ exceptions will be converted to the generic lua error
  section 12083 12235 c++ exceptions will be caught by non-protected lua frames and
  section 12235 12292 lua errors cannot be caught on the c++ side.
  section 12292 12418 throwing lua errors across c++ frames will not call c++
  section 12418 12487 its not safe to throw c++ exceptions across lua frames.
  section 12487 12548 c++ exceptions cannot be caught on the lua side.
  section 12548 12605 lua errors cannot be caught on the c++ side.
  section 12605 13029 throwing lua errors across c++ frames will not call c++

module faq
  section 14 5165 frequently asked questions (faq)
  section 62 85 luajit
  section 85 115 download e<rchevron>
  section 115 137 installation
  section 137 161 running
  section 161 188 extensions
  section 188 216 ffi library
  section 216 238 ffi tutorial
  section 238 257 ffi.* api
  section 257 287 ffi semantics
  section 287 310 jit.* library
  section 310 329 lua/c api
  section 329 354 profiler
  section 354 377 status
  section 377 401 changes
  section 401 414 faq
  section 414 447 performance e<rchevron>
  section 447 473 wiki e<rchevron>
  section 473 521 mailing list e<rchevron>
  section 521 583 q: where can i learn more about luajit and lua?
  section 583 665 the e<rchevron> luajit mailing list focuses on topics related
  section 665 744 the e<rchevron> luajit wiki gathers community resources about
  section 744 907 news about lua itself can be found at the e<rchevron> lua
  section 907 1046 the e<rchevron> main lua.org site has complete e<rchevron>
  section 1046 1157 the community-managed e<rchevron> lua wiki has information
  section 1157 1788 q: where can i learn more about the compiler technology used by
  section 1788 2158 q: why do i get this error: attempt to index global arg (a nil
  section 2158 2214 q: why do i get this error: bad fpu precision?
  section 2214 2274 q: i get weird behavior after initializing direct3d.
  section 2274 2974 q: some fpu operations crash after i load a delphi dll.
  section 2974 3498 q: sometimes ctrl-c fails to stop my lua program. why?
  section 3498 4054 q: why doesnt my favorite power-patch for lua apply against
  section 4054 4526 q: lua runs everywhere. why doesnt luajit support my cpu?
  section 4526 5165 q: when will feature x be added? when will the next version be

module install
  section 14 19944 installation
  section 42 65 luajit
  section 65 95 download e<rchevron>
  section 95 117 installation
  section 117 141 running
  section 141 168 extensions
  section 168 196 ffi library
  section 196 218 ffi tutorial
  section 218 237 ffi.* api
  section 237 267 ffi semantics
  section 267 290 jit.* library
  section 290 309 lua/c api
  section 309 334 profiler
  section 334 357 status
  section 357 381 changes
  section 381 394 faq
  section 394 427 performance e<rchevron>
  section 427 453 wiki e<rchevron>
  section 453 1372 mailing list e<rchevron>
  section 1372 2247 configuring luajit
  section 1580 1641 src/luaconf.h sets some configuration variables.
  section 1641 1714 makefile has settings for installing luajit (posix only).
  section 1714 1806 src/makefile has settings for compiling luajit under
  section 1806 2247 src/msvcbuild.bat has settings for compiling luajit with
  section 2247 2293 posix systems (linux, osx, *bsd etc.)
  section 2293 2822 prerequisites
  section 2822 3516 building luajit
  section 3516 4032 installing luajit
  section 4032 4056 windows systems
  section 4056 4677 prerequisites
  section 4677 4900 building with msvc
  section 4900 5235 building with the windows sdk
  section 5235 5559 building with mingw or cygwin
  section 5559 6009 installing luajit
  section 6009 12588 cross-compiling luajit
  section 6088 6171 host: this is your development system, usually based on a x64
  section 6171 6259 target: this is the target system you want luajit to run on,
  section 6259 6352 toolchain: this comprises a c compiler, linker, assembler and a
  section 6352 6463 host (or system) toolchain: this is the toolchain used to build
  section 6463 6720 cross-compile toolchain: this is the toolchain used to build
  section 6720 6794 yes, you need a toolchain for both your host and your
  section 6794 6871 both host and target architectures must have the same pointer
  section 6871 7100 e.g. if you want to cross-compile to a 32 bit target on a 64
  section 7100 7307 64 bit targets always require compilation on a 64 bit host.
  section 7307 7456 e.g. if youre compiling on a windows or osx host for embedded
  section 7456 7585 for a minimal target os, you may need to disable the built-in
  section 7585 8408 dont forget to specify the same target_sys for the install
  section 8408 8529 the best way to get consistent results is to specify the
  section 8529 8654 for a pre-built, generic toolchain add -mcpu=... or
  section 8654 8812 for arm its important to have the correct -mfloat-abi=...
  section 8812 12588 for mips its important to select a supported abi (o32 on
  section 12588 14275 cross-compiling for consoles
  section 14275 16732 embedding luajit
  section 14499 14911 its strongly suggested to build luajit separately using the
  section 14911 15084 if you want to load c modules compiled for plain lua with
  section 15084 15377 on posix systems you can either link to the shared library or
  section 15377 15640 since windows symbols are bound to a specific dll name, you
  section 15640 15970 if youre building a 64 bit application on osx which links
  section 15970 16066 heres a e<rchevron> simple example for embedding lua or luajit
  section 16066 16241 make sure you use lual_newstate. avoid using
  section 16241 16357 make sure you use lual_openlibs and not the old lua 5.0
  section 16357 16574 to change or extend the list of standard libraries to load,
  section 16574 16732 the bit.* module for bitwise operations is already built-in.
  section 16732 19944 hints for distribution maintainers
  section 17631 17814 prefix overrides the installation path and should usually be
  section 17814 17945 destdir is an absolute path which allows you to install to a
  section 17945 18065 multilib sets the architecture-specific library path
  section 18065 19944 have a look at the top-level makefile and src/makefile

module luajit-2.1
  section 14 2769 luajit
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 821 mailing list e<rchevron>
  section 821 1065 compatibility
  section 1065 2344 overview
  section 2344 2769 more ...

module running
  section 14 8059 running luajit
  section 44 67 luajit
  section 67 97 download e<rchevron>
  section 97 119 installation
  section 119 143 running
  section 143 170 extensions
  section 170 198 ffi library
  section 198 220 ffi tutorial
  section 220 239 ffi.* api
  section 239 269 ffi semantics
  section 269 292 jit.* library
  section 292 311 lua/c api
  section 311 336 profiler
  section 336 359 status
  section 359 383 changes
  section 383 396 faq
  section 396 429 performance e<rchevron>
  section 429 455 wiki e<rchevron>
  section 455 735 mailing list e<rchevron>
  section 735 1083 command line options
  section 1083 3561 -b[options] input output
  section 1211 1255 -l e<mdash> only list bytecode.
  section 1255 1319 -s e<mdash> strip debug info (this is the default).
  section 1319 1360 -g e<mdash> keep debug info.
  section 1360 1444 -n name e<mdash> set module name (default: auto-detect from
  section 1444 1535 -t type e<mdash> set output file type (default: auto-detect
  section 1535 1622 -a arch e<mdash> override architecture for object files
  section 1622 1697 -o os e<mdash> override os for object files (default:
  section 1697 1754 -e chunk e<mdash> use chunk string as input.
  section 1754 1940 - (a single minus sign) e<mdash> use stdin as input and/or
  section 1940 2002 c e<mdash> c source file, exported bytecode data.
  section 2002 2062 h e<mdash> c header file, static bytecode data.
  section 2062 2164 obj or o e<mdash> object file, exported bytecode data
  section 2164 2264 raw or any other extension e<mdash> raw bytecode file
  section 2264 2355 see also string.dump() for information on bytecode portability
  section 2355 2531 a file in raw bytecode format is auto-detected and can be
  section 2531 2670 to statically embed the bytecode of a module in your
  section 2670 2819 on most elf-based systems (e.g. linux) you need to explicitly
  section 2819 3561 require() tries to load embedded bytecode data from exported
  section 3561 4916 -j cmd[=arg[,arg...]]
  section 4024 4087 -jon e<mdash> turns the jit compiler on (default).
  section 4087 4169 -joff e<mdash> turns the jit compiler off (only use the
  section 4169 4240 -jflush e<mdash> flushes the whole cache of compiled code.
  section 4240 4331 -jv e<mdash> shows verbose information about the progress of
  section 4331 4422 -jdump e<mdash> dumps the code and structures used in
  section 4422 4916 -jp e<mdash> start the integrated profiler.
  section 4916 8059 -o[level]

module status
  section 14 2490 status
  section 36 59 luajit
  section 59 89 download e<rchevron>
  section 89 111 installation
  section 111 135 running
  section 135 162 extensions
  section 162 190 ffi library
  section 190 212 ffi tutorial
  section 212 231 ffi.* api
  section 231 261 ffi semantics
  section 261 284 jit.* library
  section 284 303 lua/c api
  section 303 328 profiler
  section 328 351 status
  section 351 375 changes
  section 375 388 faq
  section 388 421 performance e<rchevron>
  section 421 447 wiki e<rchevron>
  section 447 619 mailing list e<rchevron>
  section 619 2490 current status
  section 875 1108 there are some differences in implementation-defined
  section 1108 1304 the lua debug api is missing a couple of features (return
  section 1304 1577 currently some out-of-memory errors from on-trace code
  section 1577 2490 luajit on 64 bit systems provides a limited range of 47 bits

dist array-var-nginx-module-0.05
  aliases ngx_array_var ngx_http_array_var_module
  modules array-var-nginx-module-0.05

module array-var-nginx-module-0.05
  aliases ngx_array_var
  section 18 211 name
  section 211 261 status
  section 261 782 synopsis
  section 782 1319 description
  section 1319 7697 directives
  section 1341 2226 array_split
  section 2226 2974 array_join
  section 2974 4304 array_map
  section 4304 7697 array_map_op
  section 7697 9477 installation
  section 8893 9477 building as a dynamic module
  section 9477 10232 compatibility
  section 10232 10379 source repository
  section 10379 10529 getting involved
  section 10529 10628 author
  section 10628 12080 copyright & license
  section 12080 12316 see also

dist drizzle-nginx-module-0.1.11
  aliases ngx_drizzle ngx_http_drizzle_module
  modules drizzle-nginx-module-0.1.11

module drizzle-nginx-module-0.1.11
  aliases ngx_drizzle
  section 18 210 name
  section 210 268 status
  section 268 415 version
  section 415 1654 synopsis
  section 1654 4301 description
  section 2516 3272 keepalive connection pool
  section 3272 4301 last insert id
  section 4301 12732 directives
  section 4323 6435 drizzle_server
  section 6435 7764 drizzle_keepalive
  section 7764 8457 drizzle_query
  section 8457 9145 drizzle_pass
  section 9145 9614 drizzle_connect_timeout
  section 9614 10105 drizzle_send_query_timeout
  section 10105 10622 drizzle_recv_cols_timeout
  section 10622 11141 drizzle_recv_rows_timeout
  section 11141 11468 drizzle_buffer_size
  section 11468 11801 drizzle_module_header
  section 11801 12732 drizzle_status
  section 12732 15087 variables
  section 12805 15087 $drizzle_thread_id
  section 15087 18548 output format
  section 16308 16876 rds header part
  section 16876 18113 rds body part
  section 17076 17501 columns
  section 17501 18113 rows
  section 17672 17766 row flag
  section 17766 18113 fields data
  section 18113 18548 rds buffer limitations
  section 18548 18767 status code
  section 18767 19303 caveats
  section 19303 20407 trouble shooting
  section 20407 20874 known issues
  section 20874 24013 installation
  section 24013 25142 compatibility
  section 25142 25429 community
  section 25163 25299 english mailing list
  section 25299 25429 chinese mailing list
  section 25429 25724 report bugs
  section 25724 25866 source repository
  section 25866 26529 test suite
  section 26529 27839 todo
  section 27839 28001 changes
  section 28001 28284 authors
  section 28284 29955 copyright & license
  section 29955 30704 see also

dist echo-nginx-module-0.62
  aliases ngx_echo ngx_http_echo_module
  modules echo-nginx-module-0.62

module echo-nginx-module-0.62
  aliases ngx_echo
  section 18 233 name
  section 233 283 status
  section 283 422 version
  section 422 4572 synopsis
  section 4572 6753 description
  section 6753 32899 content handler directives
  section 8261 10722 echo
  section 10722 12092 echo_duplicate
  section 12092 14052 echo_flush
  section 14052 14903 echo_sleep
  section 14903 15456 echo_blocking_sleep
  section 15456 16686 echo_reset_timer
  section 16686 18573 echo_read_request_body
  section 18573 21805 echo_location_async
  section 21805 24087 echo_location
  section 24087 26854 echo_subrequest_async
  section 26854 27550 echo_subrequest
  section 27550 29539 echo_foreach_split
  section 29539 29844 echo_end
  section 29844 30649 echo_request_body
  section 30649 32146 echo_exec
  section 32146 32899 echo_status
  section 32899 35603 filter directives
  section 33149 34543 echo_before_body
  section 34543 35603 echo_after_body
  section 35603 40179 variables
  section 35624 35741 $echo_it
  section 35741 36226 $echo_timer_elapsed
  section 36226 36482 $echo_request_body
  section 36482 37109 $echo_request_method
  section 37109 37447 $echo_client_request_method
  section 37447 38446 $echo_client_request_headers
  section 38446 38737 $echo_cacheable_request_uri
  section 38737 39297 $echo_request_uri
  section 39297 39918 $echo_incr
  section 39918 40179 $echo_response_status
  section 40179 41801 installation
  section 41801 43492 compatibility
  section 43492 44232 modules that use this module for testing
  section 44232 44519 community
  section 44253 44389 english mailing list
  section 44389 44519 chinese mailing list
  section 44519 44988 report bugs
  section 44988 45125 source repository
  section 45125 45287 changes
  section 45287 46364 test suite
  section 46364 48677 todo
  section 48677 48833 getting involved
  section 48833 49050 author
  section 49050 50513 copyright & license
  section 50513 50959 see also

dist encrypted-session-nginx-module-0.09
  aliases ngx_encrypted_session ngx_http_encrypted_session_module
  modules encrypted-session-nginx-module-0.09

module encrypted-session-nginx-module-0.09
  aliases ngx_encrypted_session
  section 18 201 name
  section 201 251 status
  section 251 1211 synopsis
  section 1211 2217 description
  section 2217 4912 directives
  section 2239 2536 encrypted_session_key
  section 2536 2873 encrypted_session_iv
  section 2873 3999 encrypted_session_expires
  section 3999 4640 set_encrypt_session
  section 4640 4912 set_decrypt_session
  section 4912 6804 installation
  section 6212 6804 building as a dynamic module
  section 6804 7685 compatibility
  section 7685 8155 report bugs
  section 8155 8317 source repository
  section 8317 8467 getting involved
  section 8467 8549 author
  section 8549 10000 copyright & license
  section 10000 10175 see also

dist form-input-nginx-module-0.12
  aliases ngx_form_input ngx_http_form_input_module
  modules form-input-nginx-module-0.12

module form-input-nginx-module-0.12
  aliases ngx_form_input
  section 18 208 name
  section 208 461 description
  section 461 1810 installation
  section 1225 1810 building as a dynamic module
  section 1810 2741 usage
  section 2741 3175 limitations
  section 3175 3602 compatibility
  section 3602 5128 copyright & license

dist headers-more-nginx-module-0.33
  aliases ngx_headers_more ngx_http_headers_more_filter_module
  modules headers-more-nginx-module-0.33

module headers-more-nginx-module-0.33
  aliases ngx_headers_more
  section 18 209 name
  section 209 375 version
  section 375 1401 synopsis
  section 1401 3015 description
  section 3015 8439 directives
  section 3037 5566 more_set_headers
  section 5566 6445 more_clear_headers
  section 6445 7479 more_set_input_headers
  section 7479 8439 more_clear_input_headers
  section 8439 9349 limitations
  section 9349 10591 installation
  section 10591 11831 compatibility
  section 11831 12118 community
  section 11852 11988 english mailing list
  section 11988 12118 chinese mailing list
  section 12118 12385 bugs and patches
  section 12385 12538 source repository
  section 12538 12700 changes
  section 12700 13981 test suite
  section 13981 14064 todo
  section 14064 14220 getting involved
  section 14220 14529 authors
  section 14529 16227 copyright & license
  section 16227 17015 see also

dist iconv-nginx-module-0.14
  aliases ngx_iconv ngx_http_iconv_module
  modules iconv-nginx-module-0.14

module iconv-nginx-module-0.14
  aliases ngx_iconv
  section 19 53 name
  section 53 261 description
  section 261 1160 usage
  section 276 474 set_iconv
  section 474 604 iconv_buffer_size
  section 604 1160 iconv_filter
  section 1160 1623 compatibility
  section 1623 2719 installation
  section 2139 2719 building as a dynamic module
  section 2719 4410 copyright & license
  section 4410 4561 changelog
  section 4561 4654 see also

dist lua-cjson-2.1.0.10
  aliases cjson
  modules lua-cjson-2.1.0.10

module lua-cjson-2.1.0.10
  aliases cjson
  section 18 72 name
  section 72 687 description
  section 687 4423 additions
  section 706 1122 encode_empty_table_as_object
  section 1122 1639 empty_array
  section 1639 2386 array_mt
  section 2386 3048 empty_array_mt
  section 3048 3242 encode_number_precision
  section 3242 3493 encode_escape_forward_slash
  section 3493 4423 decode_array_with_array_mt

dist luajit-2.1-20220411
  modules luajit-2.1-20220411

module luajit-2.1-20220411
  section 18 95 name
  section 95 316 description
  section 316 8828 openresty extensions
  section 547 4720 new lua apis
  section 570 1052 table.isempty
  section 1052 1453 table.isarray
  section 1453 1880 table.nkeys
  section 1880 2373 table.clone
  section 2373 3410 jit.prngstate
  section 3410 4569 thread.exdata
  section 4569 4720 thread.exdata2
  section 4720 5763 new c api
  section 4740 4897 lua_setexdata
  section 4897 5041 lua_getexdata
  section 5041 5194 lua_setexdata2
  section 5194 5333 lua_getexdata2
  section 5333 5763 lua_resetthread
  section 5763 6129 new macros
  section 5856 6028 openresty_luajit
  section 6028 6129 have_lua_resetthread
  section 6129 6895 optimizations
  section 6153 6431 updated jit default parameters
  section 6431 6895 string hashing
  section 6895 7814 updated bytecode options
  section 6930 7423 new -bl option
  section 7423 7814 updated -bl option
  section 7814 8828 miscellaneous
  section 8828 9474 copyright & license

dist lua-rds-parser-0.06
  aliases rds.parser

dist lua-redis-parser-0.13
  aliases redis.parser
  modules lua-redis-parser-0.13

module lua-redis-parser-0.13
  aliases redis.parser
  section 18 111 name
  section 111 254 version
  section 254 737 description
  section 737 4778 functions
  section 994 2135 parse_reply
  section 2135 3021 parse_replies
  section 3021 3637 typename
  section 3637 4778 build_query
  section 4778 5236 constants
  section 4799 4858 bad_reply
  section 4858 4925 integer_reply
  section 4925 4988 error_reply
  section 4988 5053 status_reply
  section 5053 5114 bulk_reply
  section 5114 5187 multi_bulk_reply
  section 5187 5236 null
  section 5236 5438 background
  section 5438 5885 report bugs
  section 5885 6015 source repository
  section 6015 6962 installation
  section 6039 6342 build requirements
  section 6342 6423 linux/bsd/solaris
  section 6423 6962 mac os x
  section 6962 7070 author
  section 7070 8562 copyright & license
  section 8562 8905 see also

dist lua-resty-core-0.1.23
  aliases resty.core
  modules .github.issue_template .github.pull_request_template lua-resty-core-0.1.23 ngx.balancer ngx.base64 ngx.errlog ngx.ocsp ngx.pipe ngx.process ngx.re ngx.req ngx.resp ngx.semaphore ngx.ssl ngx.ssl.clienthello ngx.ssl.session

module .github.issue_template

module .github.pull_request_template

module lua-resty-core-0.1.23
  aliases resty.core
  section 18 125 name
  section 125 176 status
  section 176 1090 synopsis
  section 1090 2113 description
  section 2113 2781 prerequisites
  section 2781 11458 api implemented
  section 2808 3093 resty.core.hash
  section 3093 3328 resty.core.base64
  section 3328 3552 resty.core.uri
  section 3552 4007 resty.core.regex
  section 4007 4128 resty.core.exit
  section 4128 5609 resty.core.shdict
  section 5609 5744 resty.core.var
  section 5744 5862 resty.core.ctx
  section 5862 6423 get_ctx_table
  section 6423 7146 resty.core.request
  section 7146 7288 resty.core.response
  section 7288 7599 resty.core.misc
  section 7599 8326 resty.core.time
  section 8326 8731 resty.core.worker
  section 8731 8863 resty.core.phase
  section 8863 8998 resty.core.ndk
  section 8998 9138 resty.core.socket
  section 9138 9423 ngx.semaphore
  section 9423 9610 ngx.balancer
  section 9610 9862 ngx.ssl
  section 9862 10095 ngx.ssl.session
  section 10095 10292 ngx.re
  section 10292 10474 ngx.resp
  section 10474 10742 ngx.pipe
  section 10742 10973 ngx.process
  section 10973 11223 ngx.errlog
  section 11223 11458 ngx.base64
  section 11458 11685 caveat
  section 11685 11865 todo
  section 11865 11963 author
  section 11963 13417 copyright and license
  section 13417 13589 see also

module ngx.balancer
  section 18 103 name
  section 103 174 status
  section 174 2740 synopsis
  section 192 1536 http subsystem
  section 1536 2740 stream subsystem
  section 2740 3321 description
  section 3321 9173 methods
  section 3474 4209 set_current_peer
  section 4209 5245 set_more_tries
  section 5245 6515 get_last_failure
  section 6515 7892 set_timeouts
  section 7892 9173 recreate_request
  section 9173 9460 community
  section 9194 9330 english mailing list
  section 9330 9460 chinese mailing list
  section 9460 9711 bugs and patches
  section 9711 9797 author
  section 9797 11251 copyright and license
  section 11251 11603 see also

module ngx.base64
  section 18 108 name
  section 108 162 status
  section 162 443 synopsis
  section 443 945 methods
  section 460 633 encode\_base64url
  section 633 945 decode\_base64url
  section 945 1232 community
  section 966 1102 english mailing list
  section 1102 1232 chinese mailing list
  section 1232 1483 bugs and patches
  section 1483 1567 author
  section 1567 3016 copyright and license
  section 3016 3256 see also

module ngx.errlog
  section 18 107 name
  section 107 249 status
  section 249 2066 synopsis
  section 267 2066 capturing nginx error logs with specified log filtering level
  section 2066 10132 methods
  section 2083 3055 set_filter_level
  section 3055 6156 get_logs
  section 6156 6919 get_sys_filter_level
  section 6919 10132 raw_log
  section 10132 10419 community
  section 10153 10289 english mailing list
  section 10289 10419 chinese mailing list
  section 10419 10670 bugs and patches
  section 10670 10760 author
  section 10760 12209 copyright and license
  section 12209 12449 see also

module ngx.ocsp
  section 18 110 name
  section 110 181 status
  section 181 3764 synopsis
  section 3764 4261 description
  section 4261 7442 methods
  section 4278 5096 get_ocsp_responder_from_der_chain
  section 5096 6086 create_ocsp_request
  section 6086 6758 validate_ocsp_response
  section 6758 7442 set_ocsp_status_resp
  section 7442 7729 community
  section 7463 7599 english mailing list
  section 7599 7729 chinese mailing list
  section 7729 7980 bugs and patches
  section 7980 8066 author
  section 8066 9520 copyright and license
  section 9520 9927 see also

module ngx.pipe
  section 18 138 name
  section 138 209 status
  section 209 1484 synopsis
  section 1484 2501 description
  section 2501 15345 methods
  section 2518 6287 spawn
  section 6287 7094 set_timeouts
  section 7094 8166 wait
  section 8166 8257 pid
  section 8257 8995 kill
  section 8995 9853 shutdown
  section 9853 11100 write
  section 11100 12547 stderr_read_all
  section 12547 12776 stdout_read_all
  section 12776 13509 stderr_read_line
  section 13509 13730 stdout_read_line
  section 13730 14291 stderr_read_bytes
  section 14291 14518 stdout_read_bytes
  section 14518 15133 stderr_read_any
  section 15133 15345 stdout_read_any
  section 15345 15632 community
  section 15366 15502 english mailing list
  section 15502 15632 chinese mailing list
  section 15632 15883 bugs and patches
  section 15883 17308 copyright and license
  section 17308 17547 see also

module ngx.process
  section 18 100 name
  section 100 241 status
  section 241 1598 synopsis
  section 1598 4321 functions
  section 1617 2412 type
  section 2412 3229 enable_privileged_agent
  section 3229 3999 signal_graceful_exit
  section 3999 4321 get_master_pid
  section 4321 4608 community
  section 4342 4478 english mailing list
  section 4478 4608 chinese mailing list
  section 4608 4859 bugs and patches
  section 4859 4949 author
  section 4949 6398 copyright and license
  section 6398 6638 see also

module ngx.re
  section 18 91 name
  section 91 162 status
  section 162 464 synopsis
  section 464 585 description
  section 585 4526 methods
  section 738 3349 split
  section 3349 4526 opt
  section 4526 4813 community
  section 4547 4683 english mailing list
  section 4683 4813 chinese mailing list
  section 4813 5064 bugs and patches
  section 5064 5155 author
  section 5155 6609 copyright and license
  section 6609 6848 see also

module ngx.req
  section 18 78 name
  section 78 149 status
  section 149 400 synopsis
  section 400 480 description
  section 480 1571 methods
  section 638 1571 add_header
  section 1571 1858 community
  section 1592 1728 english mailing list
  section 1728 1858 chinese mailing list
  section 1858 2109 bugs and patches
  section 2109 3563 copyright and license
  section 3563 3798 see also

module ngx.resp
  section 18 80 name
  section 80 151 status
  section 151 398 synopsis
  section 398 500 description
  section 500 1375 methods
  section 653 1375 add_header
  section 1375 1662 community
  section 1396 1532 english mailing list
  section 1532 1662 chinese mailing list
  section 1662 1913 bugs and patches
  section 1913 3362 copyright and license
  section 3362 3602 see also

module ngx.semaphore
  section 18 95 name
  section 95 149 status
  section 149 2834 synopsis
  section 167 1344 synchronizing threads in the same context
  section 1344 2834 synchronizing threads in different contexts
  section 2834 4090 description
  section 4090 8118 methods
  section 4109 4886 new
  section 4886 5711 post
  section 5711 6974 wait
  section 6974 8118 count
  section 8118 8405 community
  section 8139 8275 english mailing list
  section 8275 8405 chinese mailing list
  section 8405 8656 bugs and patches
  section 8656 8698 author
  section 8698 10152 copyright and license
  section 10152 10392 see also

module ngx.ssl
  section 18 99 name
  section 99 153 status
  section 153 2517 synopsis
  section 2517 3315 description
  section 3315 14743 methods
  section 3332 3627 clear_certs
  section 3627 4463 cert_pem_to_der
  section 4463 5028 set_der_cert
  section 5028 5578 priv_key_pem_to_der
  section 5578 6139 set_der_priv_key
  section 6139 6944 server_name
  section 6944 7254 server_port
  section 7254 8805 raw_server_addr
  section 8805 10388 raw_client_addr
  section 10388 10879 get_tls1_version
  section 10879 11490 get_tls1_version_str
  section 11490 12054 parse_pem_cert
  section 12054 12482 parse_pem_priv_key
  section 12482 13157 set_cert
  section 13157 13844 set_priv_key
  section 13844 14743 verify_client
  section 14743 15030 community
  section 14764 14900 english mailing list
  section 14900 15030 chinese mailing list
  section 15030 15281 bugs and patches
  section 15281 15367 author
  section 15367 16821 copyright and license
  section 16821 17230 see also

module ngx.ssl.clienthello
  section 18 146 name
  section 146 217 status
  section 217 1263 synopsis
  section 1263 1992 description
  section 1992 5650 methods
  section 2009 2660 get_client_hello_server_name
  section 2660 5038 get_client_hello_ext
  section 5038 5650 set_protocols
  section 5650 5937 community
  section 5671 5807 english mailing list
  section 5807 5937 chinese mailing list
  section 5937 6188 bugs and patches
  section 6188 6260 author
  section 6260 7714 copyright and license
  section 7714 8083 see also

module ngx.ssl.session
  section 18 139 name
  section 139 193 status
  section 193 3835 synopsis
  section 3835 4500 description
  section 4500 6925 methods
  section 4517 5138 get_session_id
  section 5138 6159 get_serialized_session
  section 6159 6925 set_serialized_session
  section 6925 7212 community
  section 6946 7082 english mailing list
  section 7082 7212 chinese mailing list
  section 7212 7463 bugs and patches
  section 7463 7549 author
  section 7549 9003 copyright and license
  section 9003 9506 see also

dist lua-resty-dns-0.22
  aliases resty.dns
  modules lua-resty-dns-0.22

module lua-resty-dns-0.22
  aliases resty.dns
  section 18 108 name
  section 108 170 status
  section 170 995 description
  section 995 2493 synopsis
  section 2493 10439 methods
  section 2512 4166 new
  section 4166 7865 query
  section 7865 8619 tcp_query
  section 8619 8786 set_timeout
  section 8786 9216 compress_ipv6_addr
  section 9216 9631 expand_ipv6_addr
  section 9631 10170 arpa_str
  section 10170 10439 reverse_query
  section 10439 12054 constants
  section 10460 10544 type_a
  section 10544 10630 type_ns
  section 10630 10722 type_cname
  section 10722 10810 type_soa
  section 10810 10899 type_ptr
  section 10899 10986 type_mx
  section 10986 11075 type_txt
  section 11075 11196 type_aaaa
  section 11196 11341 type_srv
  section 11341 11486 type_spf
  section 11486 11610 class_in
  section 11610 11753 section_an
  section 11753 11903 section_ns
  section 11903 12054 section_ar
  section 12054 12601 automatic error logging
  section 12601 13409 limitations
  section 13409 13559 todo
  section 13559 13657 author
  section 13657 15151 copyright and license
  section 15151 15534 see also

dist lua-resty-limit-traffic-0.08
  aliases resty.limit.traffic
  modules lua-resty-limit-traffic-0.08 resty.limit.conn resty.limit.count resty.limit.req resty.limit.traffic

module lua-resty-limit-traffic-0.08
  aliases resty.limit.traffic
  section 18 129 name
  section 129 291 status
  section 291 10228 synopsis
  section 10228 11663 description
  section 11663 12407 installation
  section 12407 12694 community
  section 12428 12564 english mailing list
  section 12564 12694 chinese mailing list
  section 12694 12954 bugs and patches
  section 12954 13052 author
  section 13052 14506 copyright and license
  section 14506 14912 see also

module resty.limit.conn
  section 18 147 name
  section 147 4325 synopsis
  section 4325 4965 description
  section 4965 11041 methods
  section 4984 6310 new
  section 6310 9093 incoming
  section 9093 9473 is_committed
  section 9473 10399 leaving
  section 10399 10528 set_conn
  section 10528 10661 set_burst
  section 10661 11041 uncommit
  section 11041 11773 caveats
  section 11060 11773 out-of-sync counter prevention
  section 11773 12464 instance sharing
  section 12464 13206 limiting granularity
  section 13206 13312 installation
  section 13312 13599 community
  section 13333 13469 english mailing list
  section 13469 13599 chinese mailing list
  section 13599 13859 bugs and patches
  section 13859 13958 author
  section 13958 15413 copyright and license
  section 15413 15780 see also

module resty.limit.count
  section 18 115 name
  section 115 1816 synopsis
  section 1816 2460 description
  section 2460 5013 methods
  section 2479 3143 new
  section 3143 4785 incoming
  section 4785 5013 uncommit
  section 5013 5275 limiting granularity
  section 5275 5381 installation
  section 5381 5588 bugs and patches
  section 5588 5719 authors
  section 5719 7173 copyright and license
  section 7173 7492 see also

module resty.limit.req
  section 18 111 name
  section 111 2724 synopsis
  section 2724 3372 description
  section 3372 7184 methods
  section 3391 4295 new
  section 4295 6611 incoming
  section 6611 6734 set_rate
  section 6734 6861 set_burst
  section 6861 7184 uncommit
  section 7184 7875 instance sharing
  section 7875 8626 limiting granularity
  section 8626 8732 installation
  section 8732 9019 community
  section 8753 8889 english mailing list
  section 8889 9019 chinese mailing list
  section 9019 9279 bugs and patches
  section 9279 9378 author
  section 9378 10833 copyright and license
  section 10833 11202 see also

module resty.limit.traffic
  section 18 120 name
  section 120 3216 synopsis
  section 3216 3963 description
  section 3963 6955 methods
  section 3982 6955 combine
  section 6955 7293 instance sharing
  section 7293 7689 limiting granularity
  section 7689 7795 installation
  section 7795 8082 community
  section 7816 7952 english mailing list
  section 7952 8082 chinese mailing list
  section 8082 8342 bugs and patches
  section 8342 8441 author
  section 8441 9896 copyright and license
  section 9896 10257 see also

dist lua-resty-lock-0.08
  aliases resty.lock
  modules lua-resty-lock-0.08

module lua-resty-lock-0.08
  aliases resty.lock
  section 18 88 name
  section 88 176 status
  section 176 1313 synopsis
  section 1313 1809 description
  section 1809 6945 methods
  section 2220 4154 new
  section 4154 5887 lock
  section 5887 6190 unlock
  section 6190 6945 expire
  section 6945 7301 for multiple lua light threads
  section 7301 11446 for cache locks
  section 11446 11755 limitations
  section 11755 11915 prerequisites
  section 11915 13098 installation
  section 13098 13389 todo
  section 13389 13676 community
  section 13410 13546 english mailing list
  section 13546 13676 chinese mailing list
  section 13676 13927 bugs and patches
  section 13927 14025 author
  section 14025 15479 copyright and license
  section 15479 15632 see also

dist lua-resty-lrucache-0.11
  aliases resty.lrucache
  modules lua-resty-lrucache-0.11

module lua-resty-lrucache-0.11
  aliases resty.lrucache
  section 18 98 name
  section 98 160 status
  section 160 1398 synopsis
  section 1398 3457 description
  section 3457 7419 methods
  section 3811 4532 new
  section 4532 5333 set
  section 5333 5812 get
  section 5812 5914 delete
  section 5914 6248 count
  section 6248 6514 capacity
  section 6514 7101 get_keys
  section 7101 7419 flush_all
  section 7419 7579 prerequisites
  section 7579 8657 installation
  section 8657 8944 community
  section 8678 8814 english mailing list
  section 8814 8944 chinese mailing list
  section 8944 9199 bugs and patches
  section 9199 9311 author
  section 9311 10807 copyright and license
  section 10807 11138 see also

dist lua-resty-memcached-0.16
  aliases resty.memcached
  modules lua-resty-memcached-0.16

module lua-resty-memcached-0.16
  aliases resty.memcached
  section 18 125 name
  section 125 187 status
  section 187 587 description
  section 587 3026 synopsis
  section 3026 14403 methods
  section 3206 3785 new
  section 3785 4275 connect
  section 4275 4917 set
  section 4917 5166 set_timeout
  section 5166 5433 set_timeouts
  section 5433 6157 set_keepalive
  section 6157 6737 get_reused_times
  section 6737 6959 close
  section 6959 7684 add
  section 7684 8421 replace
  section 8421 9169 append
  section 9169 9925 prepend
  section 9925 11016 get
  section 11016 11336 gets
  section 11336 11649 cas
  section 11649 11902 touch
  section 11902 12244 flush_all
  section 12244 12507 delete
  section 12507 12797 incr
  section 12797 13087 decr
  section 13087 13556 stats
  section 13556 13746 version
  section 13746 14086 quit
  section 14086 14403 verbosity
  section 14403 14903 automatic error logging
  section 14903 15692 limitations
  section 15692 15841 todo
  section 15841 15939 author
  section 15939 17433 copyright and license
  section 17433 17828 see also

dist lua-resty-mysql-0.25
  aliases resty.mysql
  modules .github.issue_template lua-resty-mysql-0.25

module .github.issue_template

module lua-resty-mysql-0.25
  aliases resty.mysql
  section 18 113 name
  section 113 175 status
  section 175 746 description
  section 746 4942 synopsis
  section 4942 14988 methods
  section 4961 5117 new
  section 5117 10030 connect
  section 10030 10183 set_timeout
  section 10183 10906 set_keepalive
  section 10906 11484 get_reused_times
  section 11484 11700 close
  section 11700 12041 send_query
  section 12041 14020 read_result
  section 14020 14442 query
  section 14442 14676 server_ver
  section 14676 14988 set_compact_arrays
  section 14988 15455 sql literal quoting
  section 15455 17345 multi-resultset support
  section 17345 17758 debugging
  section 17758 18288 automatic error logging
  section 18288 19080 limitations
  section 19080 19834 more authentication method support
  section 19834 20590 installation
  section 20590 20877 community
  section 20611 20747 english mailing list
  section 20747 20877 chinese mailing list
  section 20877 21194 bugs and patches
  section 21194 21463 todo
  section 21463 21561 author
  section 21561 23055 copyright and license
  section 23055 23543 see also

dist lua-resty-redis-0.30
  aliases resty.redis
  modules lua-resty-redis-0.30

module lua-resty-redis-0.30
  aliases resty.redis
  section 18 117 name
  section 117 179 status
  section 179 590 description
  section 590 3751 synopsis
  section 3751 16428 methods
  section 5899 6045 new
  section 6045 9687 connect
  section 9687 9949 set_timeout
  section 9949 10362 set_timeouts
  section 10362 11078 set_keepalive
  section 11078 11657 get_reused_times
  section 11657 11874 close
  section 11874 12533 init_pipeline
  section 12533 12932 commit_pipeline
  section 12932 13238 cancel_pipeline
  section 13238 13617 hmset
  section 13617 13827 array_to_hash
  section 13827 15505 read_reply
  section 15505 16428 add_commands
  section 16428 17489 redis authentication
  section 17489 18843 redis transactions
  section 18843 19769 redis module
  section 19769 20356 load balancing and failover
  section 20356 20748 debugging
  section 20748 21295 automatic error logging
  section 21295 23782 check list for issues
  section 23782 24669 limitations
  section 24669 25421 installation
  section 25421 25437 todo
  section 25437 25724 community
  section 25458 25594 english mailing list
  section 25594 25724 chinese mailing list
  section 25724 25973 bugs and patches
  section 25973 26071 author
  section 26071 27553 copyright and license
  section 27553 27931 see also

dist lua-resty-shell-0.03
  aliases resty.shell
  modules lua-resty-shell-0.03

module lua-resty-shell-0.03
  aliases resty.shell
  section 18 110 name
  section 110 443 synopsis
  section 443 2502 functions
  section 462 2502 run
  section 2502 2863 dependencies
  section 2863 2936 author
  section 2936 4601 copyright & licenses

dist lua-resty-signal-0.03
  aliases resty.signal
  modules lua-resty-signal-0.03

module lua-resty-signal-0.03
  aliases resty.signal
  section 18 114 name
  section 114 605 synopsis
  section 605 1580 functions
  section 624 987 kill
  section 987 1580 signum
  section 1580 1653 author
  section 1653 3317 copyright & licenses

dist lua-resty-string-0.15
  aliases resty.string
  modules lua-resty-string-0.15

module lua-resty-string-0.15
  aliases resty.string
  section 18 118 name
  section 118 268 status
  section 268 449 description
  section 449 6369 synopsis
  section 6369 6451 author
  section 6451 7945 copyright and license
  section 7945 8047 see also

dist lua-resty-upload-0.10
  aliases resty.upload
  modules lua-resty-upload-0.10

module lua-resty-upload-0.10
  aliases resty.upload
  section 18 130 name
  section 130 192 status
  section 192 1383 description
  section 1383 5601 synopsis
  section 5601 5700 author
  section 5700 7195 copyright and license
  section 7195 7645 see also

dist lua-resty-upstream-healthcheck-0.06
  aliases resty.upstream.healthcheck
  modules lua-resty-upstream-healthcheck-0.06

module lua-resty-upstream-healthcheck-0.06
  aliases resty.upstream.healthcheck
  section 18 108 name
  section 108 204 status
  section 204 2575 synopsis
  section 2575 2706 description
  section 2706 4289 methods
  section 2723 3254 spawn_checker
  section 3254 4289 status_page
  section 4289 5473 multiple upstreams
  section 5473 6454 installation
  section 6454 6470 todo
  section 6470 6757 community
  section 6491 6627 english mailing list
  section 6627 6757 chinese mailing list
  section 6757 7023 bugs and patches
  section 7023 7121 author
  section 7121 8575 copyright and license
  section 8575 8823 see also

dist lua-resty-websocket-0.09
  aliases resty.websocket
  modules lua-resty-websocket-0.09

module lua-resty-websocket-0.09
  aliases resty.websocket
  section 18 107 name
  section 107 169 status
  section 169 610 description
  section 610 2874 synopsis
  section 2874 14077 modules
  section 2893 7383 resty.websocket.server
  section 3020 7383 methods
  section 3040 4082 new
  section 4082 4214 set_timeout
  section 4214 4507 send_text
  section 4507 4806 send_binary
  section 4806 5216 send_ping
  section 5216 5551 send_pong
  section 5551 5997 send_close
  section 5997 6624 send_frame
  section 6624 7383 recv_frame
  section 7383 13451 resty.websocket.client
  section 8419 13451 methods
  section 8439 9345 client:new
  section 9345 11005 client:connect
  section 11005 11190 client:close
  section 11190 11922 client:set_keepalive
  section 11922 12065 client:set_timeout
  section 12065 12217 client:send_text
  section 12217 12375 client:send_binary
  section 12375 12566 client:send_ping
  section 12566 12757 client:send_pong
  section 12757 12958 client:send_close
  section 12958 13296 client:send_frame
  section 13296 13451 client:recv_frame
  section 13451 14077 resty.websocket.protocol
  section 13584 14077 methods
  section 13604 13767 protocol.recv_frame
  section 13767 13915 protocol.build_frame
  section 13915 14077 protocol.send_frame
  section 14077 14577 automatic error logging
  section 14577 15371 limitations
  section 15371 16426 installation
  section 16426 16442 todo
  section 16442 16729 community
  section 16463 16599 english mailing list
  section 16599 16729 chinese mailing list
  section 16729 17028 bugs and patches
  section 17028 17126 author
  section 17126 18608 copyright and license
  section 18608 19229 see also

dist lua-tablepool-0.02
  aliases tablepool
  modules lua-tablepool-0.02

module lua-tablepool-0.02
  aliases tablepool
  section 18 86 name
  section 86 333 synopsis
  section 333 769 description
  section 769 2341 methods
  section 866 1184 fetch
  section 1184 2341 release
  section 2341 2823 caveats
  section 2358 2823 large tables requiring clearing
  section 2823 3049 prerequisites
  section 3049 3336 community
  section 3070 3206 english mailing list
  section 3206 3336 chinese mailing list
  section 3336 3591 bugs and patches
  section 3591 3689 author
  section 3689 5141 copyright and license

dist memc-nginx-module-0.19
  aliases ngx_memc ngx_http_memc_module
  modules memc-nginx-module-0.19

module memc-nginx-module-0.19
  aliases ngx_memc
  section 18 262 name
  section 262 400 version
  section 400 2557 synopsis
  section 2557 4880 description
  section 3792 4501 keep-alive connections to memcached servers
  section 4501 4880 how it works
  section 4880 10386 memcached commands supported
  section 5635 6324 get $memc_key
  section 6324 7310 set $memc_key $memc_flags $memc_exptime $memc_value
  section 7310 7405 add $memc_key $memc_flags $memc_exptime $memc_value
  section 7405 7504 replace $memc_key $memc_flags $memc_exptime $memc_value
  section 7504 7771 append $memc_key $memc_flags $memc_exptime $memc_value
  section 7771 7873 prepend $memc_key $memc_flags $memc_exptime $memc_value
  section 7873 8321 delete $memc_key
  section 8321 8576 delete $memc_key $memc_exptime
  section 8576 9194 incr $memc_key $memc_value
  section 9194 9275 decr $memc_key $memc_value
  section 9275 9459 flush_all
  section 9459 9598 flush_all $memc_exptime
  section 9598 10005 stats
  section 10005 10386 version
  section 10386 14328 directives
  section 10798 11256 memc_pass
  section 11256 11777 memc_cmds_allowed
  section 11777 12128 memc_flags_to_last_modified
  section 12128 12597 memc_connect_timeout
  section 12597 13071 memc_send_timeout
  section 13071 13547 memc_read_timeout
  section 13547 14002 memc_buffer_size
  section 14002 14328 memc_ignore_client_abort
  section 14328 16172 installation
  section 15755 16172 for developers
  section 16172 17661 compatibility
  section 17661 17948 community
  section 17682 17818 english mailing list
  section 17818 17948 chinese mailing list
  section 17948 18451 report bugs
  section 18451 18587 source repository
  section 18587 18749 changes
  section 18749 20106 test suite
  section 20106 20279 todo
  section 20279 20435 getting involved
  section 20435 20652 author
  section 20652 22332 copyright & license
  section 22332 23604 see also

dist ngx_coolkit-0.2
  aliases ngx_coolkit_module

dist ngx_devel_kit-0.3.1
  aliases ngx_devel_kit
  modules ngx_devel_kit-0.3.1 readme_auto_lib

module ngx_devel_kit-0.3.1
  section 18 61 name
  section 61 1008 synopsis
  section 1008 1145 status
  section 1145 1495 features
  section 1495 1997 design
  section 1511 1689 modular
  section 1689 1997 auto-generated & easily extensible
  section 1997 3004 usage for users
  section 2488 3004 building as a dynamic module
  section 3004 4267 usage for developers
  section 3825 4267 warning: using ndk_all
  section 4267 5011 modules using ndk
  section 5011 5336 todo
  section 5336 6883 license
  section 6883 7138 contributing / feedback
  section 7138 7199 author
  section 7199 7329 special thanks

module readme_auto_lib
  section 18 701 nginx auto lib core
  section 701 6032 information for end users
  section 1132 2465 search order for paths
  section 2465 2940 specifying a path to find a library
  section 2940 4287 searching under base paths
  section 4287 4701 shared or static?
  section 4701 6032 variables that users can set to help find libraries
  section 6032 16987 information for module developers
  section 6075 7108 how auto lib core works
  section 7108 7851 including nginx auto lib core with custom modules
  section 7851 8880 recommended way of including auto lib core
  section 8880 9169 using auto lib core
  section 9169 9899 calling ngx_auto_lib_init() and ngx_auto_lib_run()
  section 9899 12552 variables you can set in your config files
  section 12552 12940 using these variables
  section 12940 13613 variable defaults
  section 13613 14387 hooks
  section 14387 14876 checking that a library is required
  section 14876 15642 how auto lib core checks if a library is required - ngx_auto_lib_check_require()
  section 15642 16731 guaranteeing that the correct version of a shared library is linked at run time
  section 16731 16888 to do
  section 16888 16914 license
  section 16914 16987 copyright

dist ngx_lua-0.10.21
  aliases ngx_http_lua_module
  modules .github.issue_template .github.pull_request_template ngx_lua-0.10.21

module .github.issue_template

module .github.pull_request_template

module ngx_lua-0.10.21
  section 19 344 name
  section 344 379 status
  section 379 528 version
  section 528 2041 videos
  section 2041 5758 synopsis
  section 5758 9223 description
  section 9223 10631 typical uses
  section 10631 11189 nginx compatibility
  section 11189 15396 installation
  section 13745 14326 building as a dynamic module
  section 14326 15396 c macro configurations
  section 15396 15683 community
  section 15417 15553 english mailing list
  section 15553 15683 chinese mailing list
  section 15683 15852 code repository
  section 15852 16117 bugs and patches
  section 16117 17562 luajit bytecode support
  section 17562 17971 system environment variable support
  section 17971 19063 http 1.0 support
  section 19063 22167 statically linking pure lua modules
  section 22167 25168 data sharing within an nginx worker
  section 25168 35755 known issues
  section 25192 25616 tcp socket connect operation issues
  section 25616 26210 lua coroutine yielding/resuming
  section 26210 28922 lua variable scope
  section 28922 30057 locations configured by subrequest directives of other modules
  section 30057 30855 cosockets not available everywhere
  section 30855 34615 special escaping sequences
  section 34615 34874 mixing with ssi not supported
  section 34874 35070 spdy mode not fully supported
  section 35070 35755 missing data on short circuited requests
  section 35755 37054 todo
  section 37054 37220 changes
  section 37220 40227 test suite
  section 40227 41810 copyright and license
  section 41810 44674 see also
  section 44674 133329 directives
  section 47675 48201 lua_load_resty_core
  section 48201 50610 lua_capture_error_log
  section 50610 51210 lua_use_default_type
  section 51210 52544 lua_malloc_trim
  section 52544 54425 lua_code_cache
  section 54425 54972 lua_thread_cache_max_entries
  section 54972 56260 lua_regex_cache_max_entries
  section 56260 56951 lua_regex_match_limit
  section 56951 57625 lua_package_path
  section 57625 58300 lua_package_cpath
  section 58300 62918 init_by_lua
  section 62918 63450 init_by_lua_block
  section 63450 64030 init_by_lua_file
  section 64030 65674 init_worker_by_lua
  section 65674 66340 init_worker_by_lua_block
  section 66340 66761 init_worker_by_lua_file
  section 66761 67554 exit_worker_by_lua_block
  section 67554 67887 exit_worker_by_lua_file
  section 67887 70962 set_by_lua
  section 70962 71724 set_by_lua_block
  section 71724 72942 set_by_lua_file
  section 72942 73719 content_by_lua
  section 73719 74275 content_by_lua_block
  section 74275 75823 content_by_lua_file
  section 75823 80054 rewrite_by_lua
  section 80054 80603 rewrite_by_lua_block
  section 80603 81965 rewrite_by_lua_file
  section 81965 84610 access_by_lua
  section 84610 85154 access_by_lua_block
  section 85154 86369 access_by_lua_file
  section 86369 87498 header_filter_by_lua
  section 87498 88076 header_filter_by_lua_block
  section 88076 88764 header_filter_by_lua_file
  section 88764 92343 body_filter_by_lua
  section 92343 92921 body_filter_by_lua_block
  section 92921 93602 body_filter_by_lua_file
  section 93602 95976 log_by_lua
  section 95976 96524 log_by_lua_block
  section 96524 97166 log_by_lua_file
  section 97166 99506 balancer_by_lua_block
  section 99506 100143 balancer_by_lua_file
  section 100143 102100 lua_need_request_body
  section 102100 106444 ssl_client_hello_by_lua_block
  section 106444 107149 ssl_client_hello_by_lua_file
  section 107149 111223 ssl_certificate_by_lua_block
  section 111223 111898 ssl_certificate_by_lua_file
  section 111898 115096 ssl_session_fetch_by_lua_block
  section 115096 115915 ssl_session_fetch_by_lua_file
  section 115915 117556 ssl_session_store_by_lua_block
  section 117556 118374 ssl_session_store_by_lua_file
  section 118374 119145 lua_shared_dict
  section 119145 119780 lua_socket_connect_timeout
  section 119780 120388 lua_socket_send_timeout
  section 120388 120623 lua_socket_send_lowat
  section 120623 121352 lua_socket_read_timeout
  section 121352 121894 lua_socket_buffer_size
  section 121894 122743 lua_socket_pool_size
  section 122743 123483 lua_socket_keepalive_timeout
  section 123483 124027 lua_socket_log_errors
  section 124027 124494 lua_ssl_ciphers
  section 124494 124841 lua_ssl_crl
  section 124841 125320 lua_ssl_protocols
  section 125320 125736 lua_ssl_trusted_certificate
  section 125736 126068 lua_ssl_verify_depth
  section 126068 127054 lua_ssl_conf_command
  section 127054 127995 lua_http10_buffering
  section 127995 128470 rewrite_by_lua_no_postpone
  section 128470 128936 access_by_lua_no_postpone
  section 128936 129385 lua_transform_underscores_in_response_headers
  section 129385 131395 lua_check_client_abort
  section 131395 131859 lua_max_pending_timers
  section 131859 132421 lua_max_running_timers
  section 132421 132795 lua_sa_restart
  section 132795 133329 lua_worker_thread_vm_pool_size
  section 133329 359276 nginx api for lua
  section 137945 139603 introduction
  section 139603 140736 ngx.arg
  section 140736 142678 ngx.var.variable
  section 142678 143718 core constants
  section 143718 144856 http method constants
  section 144856 147445 http status constants
  section 147445 148085 nginx log level constants
  section 148085 149269 print
  section 149269 153631 ngx.ctx
  section 153631 165005 ngx.location.capture
  section 165005 166947 ngx.location.capture_multi
  section 166947 167514 ngx.status
  section 167514 170402 ngx.header.header
  section 170402 171509 ngx.resp.get_headers
  section 171509 172077 ngx.req.is_internal
  section 172077 172797 ngx.req.start_time
  section 172797 173222 ngx.req.http_version
  section 173222 174126 ngx.req.raw_header
  section 174126 174729 ngx.req.get_method
  section 174729 175298 ngx.req.set_method
  section 175298 178458 ngx.req.set_uri
  section 178458 179650 ngx.req.set_uri_args
  section 179650 182448 ngx.req.get_uri_args
  section 182448 185475 ngx.req.get_post_args
  section 185475 188077 ngx.req.get_headers
  section 188077 189631 ngx.req.set_header
  section 189631 190068 ngx.req.clear_header
  section 190068 191797 ngx.req.read_body
  section 191797 192355 ngx.req.discard_body
  section 192355 193829 ngx.req.get_body_data
  section 193829 194846 ngx.req.get_body_file
  section 194846 195665 ngx.req.set_body_data
  section 195665 196941 ngx.req.set_body_file
  section 196941 198941 ngx.req.init_body
  section 198941 200124 ngx.req.append_body
  section 200124 200970 ngx.req.finish_body
  section 200970 203109 ngx.req.socket
  section 203109 205433 ngx.exec
  section 205433 207690 ngx.redirect
  section 207690 208223 ngx.send_headers
  section 208223 208532 ngx.headers_sent
  section 208532 210102 ngx.print
  section 210102 210292 ngx.say
  section 210292 211555 ngx.log
  section 211555 212916 ngx.flush
  section 212916 215123 ngx.exit
  section 215123 216999 ngx.eof
  section 216999 217562 ngx.sleep
  section 217562 218463 ngx.escape_uri
  section 218463 219398 ngx.unescape_uri
  section 219398 220489 ngx.encode_args
  section 220489 221697 ngx.decode_args
  section 221697 222373 ngx.encode_base64
  section 222373 222882 ngx.decode_base64
  section 222882 223711 ngx.crc32_short
  section 223711 224541 ngx.crc32_long
  section 224541 225727 ngx.hmac_sha1
  section 225727 226413 ngx.md5
  section 226413 226938 ngx.md5_bin
  section 226938 227587 ngx.sha1_bin
  section 227587 228073 ngx.quote_sql_str
  section 228073 228653 ngx.today
  section 228653 229310 ngx.time
  section 229310 230094 ngx.now
  section 230094 230701 ngx.update_time
  section 230701 231368 ngx.localtime
  section 231368 232029 ngx.utctime
  section 232029 232725 ngx.cookie_time
  section 232725 233463 ngx.http_time
  section 233463 234176 ngx.parse_http_time
  section 234176 234496 ngx.is_subrequest
  section 234496 241316 ngx.re.match
  section 241316 243724 ngx.re.find
  section 243724 246185 ngx.re.gmatch
  section 246185 249010 ngx.re.sub
  section 249010 250211 ngx.re.gsub
  section 250211 252847 ngx.shared.dict
  section 252847 254154 ngx.shared.dict.get
  section 254154 254975 ngx.shared.dict.get_stale
  section 254975 258492 ngx.shared.dict.set
  section 258492 259278 ngx.shared.dict.safe_set
  section 259278 260148 ngx.shared.dict.add
  section 260148 260934 ngx.shared.dict.safe_add
  section 260934 261808 ngx.shared.dict.replace
  section 261808 262470 ngx.shared.dict.delete
  section 262470 265543 ngx.shared.dict.incr
  section 265543 266689 ngx.shared.dict.lpush
  section 266689 267346 ngx.shared.dict.rpush
  section 267346 268132 ngx.shared.dict.lpop
  section 268132 268917 ngx.shared.dict.rpop
  section 268917 269724 ngx.shared.dict.llen
  section 269724 271263 ngx.shared.dict.ttl
  section 271263 272725 ngx.shared.dict.expire
  section 272725 273452 ngx.shared.dict.flush_all
  section 273452 274402 ngx.shared.dict.flush_expired
  section 274402 275397 ngx.shared.dict.get_keys
  section 275397 276457 ngx.shared.dict.capacity
  section 276457 278261 ngx.shared.dict.free_space
  section 278261 279076 ngx.socket.udp
  section 279076 281682 udpsock:setpeername
  section 281682 282491 udpsock:send
  section 282491 283884 udpsock:receive
  section 283884 284574 udpsock:close
  section 284574 285088 udpsock:settimeout
  section 285088 285320 ngx.socket.stream
  section 285320 287763 ngx.socket.tcp
  section 287763 293162 tcpsock:connect
  section 293162 295471 tcpsock:sslhandshake
  section 295471 296948 tcpsock:send
  section 296948 299295 tcpsock:receive
  section 299295 300785 tcpsock:receiveany
  section 300785 305267 tcpsock:receiveuntil
  section 305267 306186 tcpsock:close
  section 306186 307014 tcpsock:settimeout
  section 307014 308002 tcpsock:settimeouts
  section 308002 311517 tcpsock:setoption
  section 311517 314337 tcpsock:setkeepalive
  section 314337 315175 tcpsock:getreusedtimes
  section 315175 315995 ngx.socket.connect
  section 315995 317656 ngx.get_phase
  section 317656 323880 ngx.thread.spawn
  section 323880 326860 ngx.thread.wait
  section 326860 327606 ngx.thread.kill
  section 327606 329398 ngx.on_abort
  section 329398 337074 ngx.timer.at
  section 337074 338190 ngx.timer.every
  section 338190 338760 ngx.timer.running_count
  section 338760 339320 ngx.timer.pending_count
  section 339320 339997 ngx.config.subsystem
  section 339997 340501 ngx.config.debug
  section 340501 341111 ngx.config.prefix
  section 341111 341676 ngx.config.nginx_version
  section 341676 342107 ngx.config.nginx_configure
  section 342107 342630 ngx.config.ngx_lua_version
  section 342630 343225 ngx.worker.exiting
  section 343225 343845 ngx.worker.pid
  section 343845 344424 ngx.worker.count
  section 344424 345134 ngx.worker.id
  section 345134 346061 ngx.semaphore
  section 346061 346700 ngx.balancer
  section 346700 347260 ngx.ssl
  section 347260 347996 ngx.ocsp
  section 347996 350678 ndk.set_var.directive
  section 350678 351438 coroutine.create
  section 351438 352215 coroutine.resume
  section 352215 352947 coroutine.yield
  section 352947 353615 coroutine.wrap
  section 353615 354226 coroutine.running
  section 354226 354839 coroutine.status
  section 354839 359276 ngx.run_worker_thread
  section 359276 359784 obsolete sections
  section 359461 359560 special pcre sequences
  section 359560 359784 lua/luajit bytecode support

dist ngx_lua_upstream-0.07
  aliases ngx_http_lua_upstream_module
  modules ngx_lua_upstream-0.07

module ngx_lua_upstream-0.07
  section 18 121 name
  section 121 171 status
  section 171 2529 synopsis
  section 2529 6761 functions
  section 2550 2802 get_upstreams
  section 2802 3396 get_servers
  section 3396 4404 get_primary_peers
  section 4404 4646 get_backup_peers
  section 4646 5924 set_peer_down
  section 5924 6761 current_upstream_name
  section 6761 6866 todo
  section 6866 7197 compatibility
  section 7197 8819 installation
  section 8819 8917 author
  section 8917 10371 copyright and license
  section 10371 10661 see also

dist ngx_postgres-1.0
  aliases ngx_postgres
  modules ngx_postgres-1.0 todo

module ngx_postgres-1.0
  section 18 255 about
  section 255 699 status
  section 699 5823 configuration directives
  section 733 967 postgres_server
  section 967 1596 postgres_keepalive
  section 1596 1869 postgres_pass
  section 1869 2273 postgres_query
  section 2273 3220 postgres_rewrite
  section 3220 4143 postgres_output
  section 4143 4811 postgres_set
  section 4811 5345 postgres_escape
  section 5345 5581 postgres_connect_timeout
  section 5581 5823 postgres_result_timeout
  section 5823 6191 configuration variables
  section 5856 5926 $postgres_columns
  section 5926 5990 $postgres_rows
  section 5990 6119 $postgres_affected
  section 6119 6191 $postgres_query
  section 6191 11113 sample configurations
  section 6222 6632 sample configuration #1
  section 6632 7156 sample configuration #2
  section 7156 7953 sample configuration #3
  section 7953 9011 sample configuration #4
  section 9011 10701 sample configuration #5
  section 10701 11113 sample configuration #6
  section 11113 11976 testing
  section 11976 13777 license
  section 13777 14124 see also

module todo

dist ngx_stream_lua-0.0.11
  aliases ngx_stream_lua_module
  modules dev_notes ngx_stream_lua-0.0.11

module dev_notes
  section 102 806 install
  section 806 1299 status

module ngx_stream_lua-0.0.11
  section 19 341 name
  section 341 376 status
  section 376 538 version
  section 538 2073 synopsis
  section 2073 23804 description
  section 2370 6698 directives
  section 6698 7702 preread_by_lua_block
  section 7702 8815 preread_by_lua_file
  section 8815 9292 log_by_lua_block
  section 9292 10389 log_by_lua_file
  section 10389 10887 lua_add_variable
  section 10887 11307 preread_by_lua_no_postpone
  section 11307 13277 nginx api for lua
  section 13277 13637 reqsock:receiveany
  section 13637 15528 tcpsock:shutdown
  section 15528 23804 reqsock:peek
  section 23804 24034 todo
  section 24034 24433 nginx compatibility
  section 24433 26643 installation
  section 26643 26930 community
  section 26664 26800 english mailing list
  section 26800 26930 chinese mailing list
  section 26930 27113 code repository
  section 27113 27385 bugs and patches
  section 27385 27981 acknowledgments
  section 27981 29564 copyright and license
  section 29564 29815 see also

dist opm-0.0.6
  modules opm-0.0.6 web.docs.md.docs

module opm-0.0.6
  section 18 65 name
  section 65 96 status
  section 96 1895 synopsis
  section 1895 4589 description
  section 4589 8662 usage
  section 7334 7446 global installation
  section 7446 8662 local installation
  section 8662 8982 http proxy support
  section 8982 12210 author workflow
  section 12210 20830 file dist.ini
  section 12628 12845 name
  section 12845 13140 abstract
  section 13140 13555 version
  section 13555 14000 author
  section 14000 16315 license
  section 16315 18261 requires
  section 18261 18665 repo_link
  section 18665 18856 is_original
  section 18856 19082 lib_dir
  section 19082 19389 exclude_files
  section 19389 19999 main_module
  section 19999 20830 doc_dir
  section 20830 24156 file .opmrc
  section 21447 21930 github_account
  section 21930 23268 github_token
  section 23268 23711 upload_server
  section 23711 24156 download_server
  section 24156 25351 version number handling
  section 25351 26953 installation
  section 25373 26953 for opm
  section 26953 28405 security considerations
  section 28405 28674 credit
  section 28674 29669 todo
  section 29669 29755 author
  section 29755 31248 copyright and license

module web.docs.md.docs
  section 18 65 name
  section 65 96 status
  section 96 1895 synopsis
  section 1895 4589 description
  section 4589 8662 usage
  section 7334 7446 global installation
  section 7446 8662 local installation
  section 8662 8988 http proxy support
  section 8988 12216 author workflow
  section 12216 20836 file dist.ini
  section 12634 12851 name
  section 12851 13146 abstract
  section 13146 13561 version
  section 13561 14006 author
  section 14006 16321 license
  section 16321 18267 requires
  section 18267 18671 repo_link
  section 18671 18862 is_original
  section 18862 19088 lib_dir
  section 19088 19395 exclude_files
  section 19395 20005 main_module
  section 20005 20836 doc_dir
  section 20836 24162 file .opmrc
  section 21453 21936 github_account
  section 21936 23274 github_token
  section 23274 23717 upload_server
  section 23717 24162 download_server
  section 24162 25357 version number handling
  section 25357 26959 installation
  section 25379 26959 for opm
  section 26959 28411 security considerations
  section 28411 28680 credit
  section 28680 29675 todo
  section 29675 29761 author
  section 29761 31254 copyright and license

dist rds-csv-nginx-module-0.09
  aliases ngx_rds_csv ngx_http_rds_csv_filter_module
  modules rds-csv-nginx-module-0.09

module rds-csv-nginx-module-0.09
  aliases ngx_rds_csv
  section 18 141 name
  section 141 202 status
  section 202 371 synopsis
  section 371 906 description
  section 906 2811 directives
  section 928 1117 rds_csv
  section 1117 1493 rds_csv_row_terminator
  section 1493 1860 rds_csv_field_separator
  section 1860 2131 rds_csv_field_name_header
  section 2131 2561 rds_csv_content_type
  section 2561 2811 rds_csv_buffer_size
  section 2811 4017 installation
  section 4017 4546 compatibility
  section 4546 4632 author
  section 4632 6104 copyright & license
  section 6104 6359 see also

dist rds-json-nginx-module-0.15
  aliases ngx_rds_json ngx_http_rds_json_filter_module
  modules rds-json-nginx-module-0.15

module rds-json-nginx-module-0.15
  aliases ngx_rds_json
  section 18 140 name
  section 140 367 status
  section 367 873 synopsis
  section 873 1123 description
  section 1123 4999 directives
  section 1145 1332 rds_json
  section 1332 1744 rds_json_buffer_size
  section 1744 2207 rds_json_format
  section 2207 3093 rds_json_root
  section 3093 3372 rds_json_success_property
  section 3372 3863 rds_json_user_property
  section 3863 4099 rds_json_errcode_key
  section 4099 4330 rds_json_errstr_key
  section 4330 4707 rds_json_ret
  section 4707 4999 rds_json_content_type
  section 4999 6196 installation
  section 6196 7075 compatibility
  section 7075 7176 author
  section 7176 8636 copyright & license
  section 8636 8889 see also

dist redis2-nginx-module-0.15
  aliases ngx_redis2 ngx_http_redis2_module
  modules redis2-nginx-module-0.15

module redis2-nginx-module-0.15
  aliases ngx_redis2
  section 18 191 name
  section 191 249 status
  section 249 392 version
  section 392 2197 synopsis
  section 2197 3348 description
  section 3348 8451 directives
  section 3370 4094 redis2_query
  section 4094 4516 redis2_raw_query
  section 4516 5433 redis2_raw_queries
  section 5433 5812 redis2_literal_raw_query
  section 5812 6058 redis2_pass
  section 6058 6535 redis2_connect_timeout
  section 6535 6976 redis2_send_timeout
  section 6976 7420 redis2_read_timeout
  section 7420 7739 redis2_buffer_size
  section 7739 8451 redis2_next_upstream
  section 8451 9139 connection pool
  section 9139 9529 selecting redis databases
  section 9529 14876 lua interoperability
  section 12867 14876 pipelined redis requests by lua
  section 14876 16519 redis publish/subscribe support
  section 15562 16519 limitations for redis publish/subscribe
  section 16519 17326 performance tuning
  section 17326 18880 installation
  section 18880 19821 compatibility
  section 19821 20108 community
  section 19842 19978 english mailing list
  section 19978 20108 chinese mailing list
  section 20108 20375 bugs and patches
  section 20375 20515 source repository
  section 20515 20627 todo
  section 20627 20725 author
  section 20725 20875 getting involved
  section 20875 22367 copyright & license
  section 22367 22985 see also

dist redis-nginx-module-0.3.9
  aliases ngx_redis ngx_http_redis_module

dist resty-cli-0.28
  modules resty-cli-0.28

module resty-cli-0.28
  section 18 89 name
  section 89 1304 description
  section 1304 1699 videos
  section 1699 7152 synopsis
  section 7152 7444 new lua api
  section 7444 8337 installation
  section 8337 9104 test suite
  section 9104 9307 authors
  section 9307 10844 copyright and license

dist set-misc-nginx-module-0.33
  aliases ngx_set_misc ngx_http_set_misc_module
  modules set-misc-nginx-module-0.33

module set-misc-nginx-module-0.33
  aliases ngx_set_misc
  section 19 251 name
  section 251 398 version
  section 398 3507 synopsis
  section 3507 4173 description
  section 4173 33970 directives
  section 4195 4755 set_if_empty
  section 4755 6412 set_quote_sql_str
  section 6412 6748 set_quote_pgsql_str
  section 6748 8348 set_quote_json_str
  section 8348 10129 set_unescape_uri
  section 10129 10480 set_escape_uri
  section 10480 11873 set_hashed_upstream
  section 11873 13924 set_encode_base32
  section 13924 14395 set_base32_padding
  section 14395 14689 set_misc_base32_padding
  section 14689 15203 set_base32_alphabet
  section 15203 15585 set_decode_base32
  section 15585 17137 set_encode_base64
  section 17137 18713 set_encode_base64url
  section 18713 19090 set_decode_base64
  section 19090 19492 set_decode_base64url
  section 19492 21029 set_encode_hex
  section 21029 21399 set_decode_hex
  section 21399 23103 set_sha1
  section 23103 24830 set_md5
  section 24830 26160 set_hmac_sha1
  section 26160 27518 set_hmac_sha256
  section 27518 28482 set_random
  section 28482 29275 set_secure_random_alphanum
  section 29275 30060 set_secure_random_lcalpha
  section 30060 31576 set_rotate
  section 31576 32209 set_local_today
  section 32209 33087 set_formatted_gmt_time
  section 33087 33970 set_formatted_local_time
  section 33970 34471 caveats
  section 34471 36283 installation
  section 35596 36283 building as a dynamic module
  section 36283 37352 compatibility
  section 37352 37863 report bugs
  section 37863 38007 source repository
  section 38007 38174 changes
  section 38174 38965 test suite
  section 38965 39121 getting involved
  section 39121 39326 author
  section 39326 40779 copyright & license
  section 40779 40938 see also

dist srcache-nginx-module-0.32
  aliases ngx_srcache ngx_http_srcache_filter_module
  modules srcache-nginx-module-0.32

module srcache-nginx-module-0.32
  aliases ngx_srcache
  section 18 220 name
  section 220 270 status
  section 270 422 version
  section 422 2283 synopsis
  section 2283 12976 description
  section 3397 4272 subrequest caching
  section 4272 8659 distributed memcached caching
  section 8659 10687 caching with redis
  section 10687 12976 cache key preprocessing
  section 12976 30854 directives
  section 12998 14280 srcache_fetch
  section 14280 16006 srcache_fetch_skip
  section 16006 17822 srcache_store
  section 17822 18493 srcache_store_max_size
  section 18493 19566 srcache_store_skip
  section 19566 20380 srcache_store_statuses
  section 20380 21059 srcache_store_ranges
  section 21059 21732 srcache_header_buffer_size
  section 21732 22646 srcache_store_hide_header
  section 22646 23607 srcache_store_pass_header
  section 23607 24427 srcache_methods
  section 24427 25471 srcache_ignore_content_encoding
  section 25471 26415 srcache_request_cache_control
  section 26415 27371 srcache_response_cache_control
  section 27371 27858 srcache_store_no_store
  section 27858 28345 srcache_store_no_cache
  section 28345 28828 srcache_store_private
  section 28828 29943 srcache_default_expire
  section 29943 30854 srcache_max_expire
  section 30854 33308 variables
  section 30875 31956 $srcache_expire
  section 31956 32548 $srcache_fetch_status
  section 32548 33308 $srcache_store_status
  section 33308 34007 known issues
  section 34007 35546 caveats
  section 35546 37057 trouble shooting
  section 37057 38908 installation
  section 38908 39619 compatibility
  section 39619 39906 community
  section 39640 39776 english mailing list
  section 39776 39906 chinese mailing list
  section 39906 40175 bugs and patches
  section 40175 40318 source repository
  section 40318 41514 test suite
  section 41514 41759 todo
  section 41759 41909 getting involved
  section 41909 42008 author
  section 42008 43472 copyright & license
  section 43472 43803 see also

dist xss-nginx-module-0.06
  aliases ngx_xss ngx_http_xss_filter_module
  modules xss-nginx-module-0.06

module xss-nginx-module-0.06
  aliases ngx_xss
  section 18 97 name
  section 97 595 synopsis
  section 595 903 description
  section 903 2271 directives
  section 925 1097 xss_get
  section 1097 1471 xss_callback_arg
  section 1471 1743 xss_override_status
  section 1743 1977 xss_check_status
  section 1977 2271 xss_input_types
  section 2271 3083 limitations
  section 3083 3200 trouble shooting
  section 3200 4387 installation
  section 4387 5205 compatibility
  section 5205 5277 todo
  section 5277 5359 author
  section 5359 7007 copyright & license
  section 7007 7180 see also

